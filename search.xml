<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python魔术方法</title>
    <url>/2021/04/22/python%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>语言模型</title>
    <url>/2021/04/23/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Latex公式编辑</title>
    <url>/2021/04/08/basic%20operation/Latex%E5%85%AC%E5%BC%8F%E7%BC%96%E8%BE%91/</url>
    <content><![CDATA[<h2 id="命令"><a class="markdownIt-Anchor" href="#命令"></a> 命令</h2>
<p><code>npm i -D hexo-math</code></p>
<h2 id="添加公式的格式"><a class="markdownIt-Anchor" href="#添加公式的格式"></a> 添加公式的格式</h2>
<ol>
<li>行内公式 <code>$ 行内公式 $</code></li>
<li>行间公式 <code>$$ 行间公式 $$</code></li>
</ol>
<h2 id="latex数学公式格式"><a class="markdownIt-Anchor" href="#latex数学公式格式"></a> Latex数学公式格式</h2>
<ol>
<li>
<p>上标：<code>z^l</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">z^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><br />
下标：<code>z_l</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">z_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />
一级角标改为二级角标：<code>y_&#123;_N&#125;</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><msub><mrow></mrow><mi>N</mi></msub></msub></mrow><annotation encoding="application/x-tex">y_{_N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.680865em;vertical-align:-0.250305em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.09136em;"><span style="top:-2.35em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>分式：<code>\frac&#123;分子&#125;&#123;分母&#125;</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">子</mi></mrow><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">母</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{分子}{分母}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.739em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.394em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">母</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">子</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
</li>
<li>
<p>根号：<code>$\sqrt[n]&#123;ab&#125;$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mroot><mrow><mi>a</mi><mi>b</mi></mrow><mi>n</mi></mroot></mrow><annotation encoding="application/x-tex">\sqrt[n]{ab}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.10777999999999999em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.709944em;"><span style="top:-2.994664em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.93222em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span></span></span><span style="top:-2.89222em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.10777999999999999em;"><span></span></span></span></span></span></span></span></span><br />
n省略：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mrow><mi>a</mi><mi>b</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{ab}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.10777999999999999em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.93222em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span></span></span><span style="top:-2.89222em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.10777999999999999em;"><span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>求和公式： <code>$\sum_&#123;k=1&#125;^n&#123;求和项&#125;$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><mi mathvariant="normal">求</mi><mi mathvariant="normal">和</mi><mi mathvariant="normal">项</mi></mrow></mrow><annotation encoding="application/x-tex">\sum_{k=1}^n{求和项}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">项</span></span></span></span></span><br />
无穷符号： <code>$\infty$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">∞</span></span></span></span></p>
</li>
<li>
<p>积分公式： <code>$\int_0^\infty&#123;e^x&#125;$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∫</mo><mn>0</mn><mi mathvariant="normal">∞</mi></msubsup><msup><mi>e</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">\int_0^\infty{e^x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.215112em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>上划线命令： <code>$\overline&#123;公式&#125;$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{a+b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.97777em;vertical-align:-0.08333em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08333em;"><span></span></span></span></span></span></span></span></span><br />
下划线命令： <code>$\underline&#123;公式&#125;$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder accentunder="true"><mrow><mi>a</mi><mo>−</mo><mi>b</mi></mrow><mo stretchy="true">‾</mo></munder></mrow><annotation encoding="application/x-tex">\underline{a-b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.97777em;vertical-align:-0.2833300000000001em;"></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7566699999999997em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2833300000000001em;"><span></span></span></span></span></span></span></span></span><br />
上花括弧命令： <code>$\overbrace&#123;公式&#125;^&#123;说明&#125;$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover><mover><mrow><mi>a</mi><mo>−</mo><mi>b</mi></mrow><mo stretchy="true">⏞</mo></mover><mrow><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi></mrow></mover></mrow><annotation encoding="application/x-tex">\overbrace{a-b}^{aaaaa}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.9271619999999998em;vertical-align:-0.08333em;"></span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.843832em;"><span style="top:-3.34244em;"><span class="pstrut" style="height:3.34244em;"></span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3424399999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span><span class="svg-align" style="top:-3.79444em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117
-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7
 5-6 9-10 13-.7 1-7.3 1-20 1H6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M200428 334
c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14
-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7
 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11
 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M400000 542l
-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5
s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1
c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08333em;"><span></span></span></span></span></span></span><span style="top:-4.88488em;"><span class="pstrut" style="height:3.34244em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08333em;"><span></span></span></span></span></span></span></span></span><br />
下花括弧命令： <code>$\underbrace&#123;公式&#125;_&#123;说明&#125;$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><munder><mrow><mi>a</mi><mo>−</mo><mi>b</mi></mrow><mo stretchy="true">⏟</mo></munder><mrow><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi></mrow></munder></mrow><annotation encoding="application/x-tex">\underbrace{a-b}_{aaaaa}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.927162em;vertical-align:-1.2327219999999999em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944400000000002em;"><span style="top:-1.7672780000000001em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span class="svg-align" style="top:-2.26867em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.73133em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2327219999999999em;"><span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>数学重音符号：</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">1. \hat&#123;a&#125;</span><br><span class="line">2. \check&#123;a&#125;</span><br><span class="line">3. \breve&#123;a&#125;</span><br><span class="line">4. \tilde&#123;a&#125;</span><br><span class="line">5. \bar&#123;a&#125;</span><br><span class="line">6. \vec&#123;a&#125;</span><br><span class="line">7. \acute&#123;a&#125;</span><br><span class="line">8. \grave&#123;a&#125;</span><br><span class="line">9. \mathring&#123;a&#125;</span><br><span class="line">10. \dot&#123;a&#125;</span><br><span class="line">11. \ddot&#123;a&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><mover accent="true"><mi>a</mi><mo>^</mo></mover><mn>2.</mn><mover accent="true"><mi>a</mi><mo>ˇ</mo></mover><mn>3.</mn><mover accent="true"><mi>a</mi><mo>˘</mo></mover><mn>4.</mn><mover accent="true"><mi>a</mi><mo>~</mo></mover><mn>5.</mn><mover accent="true"><mi>a</mi><mo>ˉ</mo></mover><mn>6.</mn><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mn>7.</mn><mover accent="true"><mi>a</mi><mo>ˊ</mo></mover><mn>8.</mn><mover accent="true"><mi>a</mi><mo>ˋ</mo></mover><mn>9.</mn><mover accent="true"><mi>a</mi><mo>˚</mo></mover><mn>10.</mn><mover accent="true"><mi>a</mi><mo>˙</mo></mover><mn>11.</mn><mover accent="true"><mi>a</mi><mo>¨</mo></mover></mrow><annotation encoding="application/x-tex">1. \hat{a}
2. \check{a}
3. \breve{a}
4. \tilde{a}
5. \bar{a}
6. \vec{a}
7. \acute{a}
8. \grave{a}
9. \mathring{a}
10. \dot{a}
11. \ddot{a}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mord">2</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.62847em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">ˇ</span></span></span></span></span></span><span class="mord">3</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">˘</span></span></span></span></span></span><span class="mord">4</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">~</span></span></span></span></span></span><span class="mord">5</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">ˉ</span></span></span></span></span></span><span class="mord">6</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mord">7</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">ˊ</span></span></span></span></span></span><span class="mord">8</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">ˋ</span></span></span></span></span></span><span class="mord">9</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.375em;">˚</span></span></span></span></span></span><span class="mord">1</span><span class="mord">0</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.13889em;">˙</span></span></span></span></span></span><span class="mord">1</span><span class="mord">1</span><span class="mord">.</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">¨</span></span></span></span></span></span></span></span></span></span></p>
<ol start="8">
<li>
<p>定界符号：<br />
<code>$（）\big(\big)$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">（</mi><mi mathvariant="normal">）</mi><mo fence="false">(</mo><mo fence="false">)</mo></mrow><annotation encoding="application/x-tex">（）\big(\big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">）</span><span class="mord"><span class="delimsizing size1">(</span></span><span class="mord"><span class="delimsizing size1">)</span></span></span></span></span><br />
<code>$\Big(\Big)$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">(</mo><mo fence="false">)</mo></mrow><annotation encoding="application/x-tex">\Big(\Big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mord"><span class="delimsizing size2">)</span></span></span></span></span><br />
<code>$\bigg(\bigg)$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">(</mo><mo fence="false">)</mo></mrow><annotation encoding="application/x-tex">\bigg(\bigg)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="delimsizing size3">(</span></span><span class="mord"><span class="delimsizing size3">)</span></span></span></span></span><br />
<code>$\Bigg(\Bigg)$</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">(</mo><mo fence="false">)</mo></mrow><annotation encoding="application/x-tex">\Bigg(\Bigg)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord"><span class="delimsizing size4">(</span></span><span class="mord"><span class="delimsizing size4">)</span></span></span></span></span></p>
</li>
<li>
<p>占位符号：<br />
两个空格 <code>a \qquad b</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mspace width="2em"/><mi>b</mi></mrow><annotation encoding="application/x-tex">a \qquad b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathdefault">b</span></span></span></span><br />
一个空格 <code>a \quad b</code>  =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mspace width="1em"/><mi>b</mi></mrow><annotation encoding="application/x-tex">a \quad b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">b</span></span></span></span><br />
大空格  <code>a\ b</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a\ b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace"> </span><span class="mord mathdefault">b</span></span></span></span><br />
中等空格 <code>a\;b</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mtext>  </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a\;b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">b</span></span></span></span><br />
小空格 <code>a\,b</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a\,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span></span></span></span><br />
紧贴 <code>a\!b</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mtext> ⁣</mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a\!b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:-0.16666666666666666em;"></span><span class="mord mathdefault">b</span></span></span></span></p>
</li>
<li>
<p>关于集合的一些操作：<br />
大括号： <code>\&#123; ... \&#125;</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{ ... \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mclose">}</span></span></span></span><br />
属于： <code>A \in B</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∈</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \in B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><br />
不属于： <code>A \not\in B</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∉</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \not\in B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><br />
A包含于B： <code>A\subset B</code>=&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>⊂</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A\subset B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><br />
A真包含于B： <code>A \subsetneqq B</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>⫋</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A\subsetneqq B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.07864em;vertical-align:-0.28481em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⫋</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><br />
A包含B： <code>A supset B</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>s</mi><mi>u</mi><mi>p</mi><mi>s</mi><mi>e</mi><mi>t</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">A supset B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><br />
A真包含B： <code>A \supsetneqq B</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>⫌</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \supsetneqq B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.07864em;vertical-align:-0.28481em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⫌</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><br />
A不包含于B： <code>A \not \subset B</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>⊄</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \not \subset B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><br />
A交B： <code>A \cap B</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∩</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \cap B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><br />
A并B： <code>A \cup B</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∪</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \cup B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><br />
A的闭包： <code>\overline&#123;A&#125;</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span><br />
A减去B:  <code>A\setminus B</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∖</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A\setminus B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∖</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><br />
实数集合： <code>\mathbb&#123;R&#125;</code>  =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">R</mi></mrow><annotation encoding="application/x-tex">\mathbb{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">R</span></span></span></span></span><br />
空集： <code>\emptyset</code> =&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span></p>
</li>
<li>
<p>希腊字母<br />
<img src="https://i.loli.net/2021/04/11/FPkrs68dG9zODwC.png" alt="" /></p>
</li>
<li>
<p>对其</p>
</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msup><mi>z</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>w</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup><msup><mo stretchy="false">)</mo><mrow><mo stretchy="false">[</mo><mi>T</mi><mo stretchy="false">]</mo></mrow></msup><mo>∗</mo><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><msup><mi>g</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
&amp; z^{[i]} = (w^{[i]}) ^ {[T]} * a^{[i-1]} + b^{[i]}\\
&amp; a^{[i]} = g^{[i]}(z^{[i]})
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.196em;vertical-align:-1.348em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.848em;"><span style="top:-3.848em;"><span class="pstrut" style="height:2.9379999999999997em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.9379999999999997em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.348em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.848em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.3120000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.348em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
]]></content>
  </entry>
  <entry>
    <title>markdown的基本使用</title>
    <url>/2021/02/02/basic%20operation/markdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<ol>
<li>标题 使用#，n个井号表示n级标题</li>
</ol>
<h1 id="一级标题"><a class="markdownIt-Anchor" href="#一级标题"></a> 一级标题</h1>
<ol start="2">
<li>列表 使用<code>-</code>，子列表使用<code>a，b ...</code></li>
</ol>
<ul>
<li>li</li>
<li>li<br />
a li<br />
b li</li>
</ul>
<ol start="3">
<li>
<p>链接 <code>[主题](链接地址)</code><br />
<a href="https://baidu.com/">链接</a></p>
</li>
<li>
<p>插入图片 <code>![图片名称](图片地址)</code><br />
<img src="%E5%9B%BE%E7%89%87%E5%9C%B0%E5%9D%80" alt="图片名称" /></p>
</li>
<li>
<p>斜体 <code>*内容*</code><br />
<em>内容</em></p>
</li>
<li>
<p>加粗 <code>**内容**</code><br />
<strong>内容</strong></p>
</li>
<li>
<p>单行代码  <code>haha</code>, 用一个反引号<br />
多行代码</p>
<ul>
<li>用三个反引号  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;&lt;&#x2F;body&gt;</span><br><span class="line">&lt;html&gt;</span><br></pre></td></tr></table></figure>
</li>
<li>使用codeblock方式  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; 10</span><br><span class="line">b &#x3D; 10</span><br><span class="line">a,b &#x3D; b,a</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>引用 <code>&gt;引用内容</code></p>
</li>
</ol>
<blockquote>
<p>引用内容</p>
</blockquote>
<ol start="9">
<li>横线 <code>---</code></li>
</ol>
<hr />
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/02/02/basic%20operation/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>numpy库的简单讲解</title>
    <url>/2021/02/08/basic%20operation/numpy%E5%BA%93%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%B2%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="numpy-n维数组容器"><a class="markdownIt-Anchor" href="#numpy-n维数组容器"></a> Numpy: N维数组容器</h3>
<p>引入了ndarray-多维数组的概念，可用于储存和处理大型矩阵。</p>
<h3 id="一些基本操作"><a class="markdownIt-Anchor" href="#一些基本操作"></a> 一些基本操作：</h3>
<h4 id="导入numpy库"><a class="markdownIt-Anchor" href="#导入numpy库"></a> 导入numpy库：</h4>
<p><code>import numpy as np</code></p>
<h4 id="创建ndarray对象"><a class="markdownIt-Anchor" href="#创建ndarray对象"></a> 创建ndarray对象：</h4>
<ol>
<li><code>np.array(列表)</code><br />
输入列表，并返回其ndarray形式</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; [random.uniform(100.0, 200) for i in range(10)]</span><br><span class="line">a &#x3D; np.array(a)</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>
<p><code>np.arange()</code><br />
参数：<br />
a. 1个参数a，生成0到a-1的列表<br />
b. 2个参数a,b，生成a到b-1的列表<br />
c. 3个参数a,b,c，生成a到b-1的列表，步长为c</p>
</li>
<li>
<p><code>np.linspace(起始值，终结值，元素数量)</code>可以将元素均匀分布</p>
</li>
<li>
<p><code>zeros(),ones(),empty()</code><br />
参数：<br />
a. 长度，必需<br />
b. dtype=“”，非必选<br />
empty()生成的其元素是任意值，等待被赋值。</p>
</li>
</ol>
<h4 id="ndarray对象的一些基本属性"><a class="markdownIt-Anchor" href="#ndarray对象的一些基本属性"></a> ndarray对象的一些基本属性：</h4>
<ol>
<li>shape：尺寸</li>
<li>dtype：内部元素的数据类型</li>
<li>T：自身的转置矩阵<br />
<img src="http://i1.fuimg.com/733078/ec7dde96d174a479.jpg" alt="Markdown" /></li>
</ol>
<ul>
<li>批量运算：<br />
<img src="http://i1.fuimg.com/733078/ea4fa165e149d011.jpg" alt="Markdown" /></li>
</ul>
<h4 id="一些常用的方法"><a class="markdownIt-Anchor" href="#一些常用的方法"></a> 一些常用的方法：</h4>
<ol>
<li>
<p><code>sum()</code>： 返回所有元素的和</p>
</li>
<li>
<p>ndarray数组截取：</p>
<ul>
<li><strong>索引截取</strong>：<code>被截取数组[起始索引:结尾索引:步长]</code></li>
</ul>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; np.arange(20)</span><br><span class="line">c &#x3D; a[0:15:3]</span><br><span class="line">print(c) --&gt; [ 0  3  6  9 12 15]</span><br></pre></td></tr></table></figure>
<ul>
<li>注意：<br />
不包含结尾索引。<br />
numpy的截取是一个指针指向原数组，不会重新开辟内存。所以改变截取数组也会改变原数组。可以使用copy()来操作，不影响原数组。</li>
<li>多维数组的截取：<code>被截取数组[行切片，列切片]</code></li>
</ul>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; np.arange(15).reshape((3,5))</span><br><span class="line">print(a)</span><br><span class="line">print(a[0:2, 0:2])</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">[[ 0  1  2  3  4]</span><br><span class="line">[ 5  6  7  8  9]</span><br><span class="line">[10 11 12 13 14]]</span><br><span class="line"></span><br><span class="line">[[0 1]</span><br><span class="line">[5 6]]</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>布尔型截取</strong>：传入一个相同长度的布尔形式的数组索引，过滤，返回对应值为true的值的数组.<br />
可以使用批量处理和布尔型截取来筛选数据，注意多个条件使用：并且-&gt;(条件1)&amp;(条件2) ；或-&gt;(条件1)|(条件2)</li>
</ul>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; [random.randint(1, 10) for i in range(10)]</span><br><span class="line">a &#x3D; np.array(a)   --&gt; [ 2  1  9  5 10  1  6  9  9  3]</span><br><span class="line">print(a)</span><br><span class="line"># 多个条件使用：1. 并且 (条件1)&amp;(条件2) 2. 或 (条件1)|(条件2)</span><br><span class="line">print(a[(a&gt;5) &amp; (a%2&#x3D;&#x3D;0)]) --&gt;[ 2  1  9  5 10  1  6  9  9  3]</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>花式索引</strong>：传入一个索引的列表 (列表套列表)</li>
</ul>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D;np.arange(10)       --&gt; [0 1 2 3 4 5 6 7 8 9]</span><br><span class="line">b &#x3D; a[ [1,3,4,6,7] ]     --&gt; [1 3 4 6 7]</span><br></pre></td></tr></table></figure>
<ul>
<li>可以使用这三种索引方式组合来索引多维数组</li>
</ul>
</li>
<li>
<p><code>copy()</code>：复制某个数组，对复制数组修改不会影响原数组。</p>
</li>
<li>
<p><code>reshape(size的元祖数量)</code>：改变矩阵尺寸</p>
</li>
<li>
<p><code>np.abs()</code>：返回ndarray每个元素绝对值的数组</p>
</li>
<li>
<p><code>np.sqrt()</code>：返回开方，负数开方为nan</p>
</li>
<li>
<p><code>np.round()/ np.rint()</code>：每个元素四舍五入</p>
</li>
<li>
<p><code>np.trunc()</code>：向0取整</p>
</li>
<li>
<p><code>np.floor() 和 np.ceil()</code>：向下和向上取整</p>
</li>
<li>
<p><code>np.modf()</code>：返回整数和小数部分数组，共返回2个元素</p>
</li>
<li>
<p><code>np.isnan</code>：判断是否为一个数字</p>
</li>
<li>
<p><code>np.inf</code>表示最大的数，通常是被除数为0的结果。</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; np.array([3,4,5,6,7])</span><br><span class="line">b &#x3D; np.array([3,0,0,0,7])</span><br><span class="line">print(a&#x2F;b) --&gt; [ 1. inf inf inf  1.]</span><br></pre></td></tr></table></figure>
<ol start="13">
<li><code>np.var()</code>方差 <code>np.std()</code>标准差</li>
<li><code>np.max() np.min()</code>, <code>np.argmax()</code>返回最大数的下标, <code>np.argmin()</code>返回最小值的下标</li>
</ol>
<h3 id="np中的random库"><a class="markdownIt-Anchor" href="#np中的random库"></a> np中的random库</h3>
<p>作用：可以用于生成随机数组<br />
参数：前两个参数为随机区间，最后一个为数组的尺存(可以是一个元组)<br />
方法：</p>
<ol>
<li><code>randint(x,y,size)</code> 生成随机整数，[x, y)</li>
<li><code>rand()</code> 生成0到1的随机数，<code>rand(x)</code>生成生成0到1的x个元素的一维数组，<code>rand(x,y)</code>生成x*y的数组</li>
<li><code>randn()</code>以给定的形状创建一个数组，数组元素来符合标准正态分布N(0,1)</li>
<li><code>choice(x,y)</code> 从数组x中随机选择元素，生成y尺寸大小的数组</li>
</ol>
]]></content>
      <tags>
        <tag>Python 数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>pandas库的简单讲解</title>
    <url>/2021/02/08/basic%20operation/pandas%E5%BA%93%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%B2%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="pandas-表格容器"><a class="markdownIt-Anchor" href="#pandas-表格容器"></a> pandas: 表格容器</h3>
<p>基于NumPy的一种工具，该工具是为了解决数据分析任务而创建的。Pandas纳入了大量库和一些标准的数据模型，提供了高效地操作大型数据集所需的工具。</p>
<h4 id="导入pandas库"><a class="markdownIt-Anchor" href="#导入pandas库"></a> 导入pandas库：</h4>
<p><code>import pandas as pd</code></p>
<h3 id="series对象"><a class="markdownIt-Anchor" href="#series对象"></a> Series对象</h3>
<h4 id="series对象的创建"><a class="markdownIt-Anchor" href="#series对象的创建"></a> Series对象的创建</h4>
<p>使用<code>pd.Series()</code>方法<br />
参数：1. 数组 2. index=数组，非必选</p>
<h2 id="-code0-"><a class="markdownIt-Anchor" href="#-code0-"></a> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a&#x3D; pd.Series([1,2,3,4],index&#x3D;[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;,&#39;d&#39;])</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">a    1</span><br><span class="line">b    2</span><br><span class="line">c    3</span><br><span class="line">d    4</span><br><span class="line">dtype: int64</span><br></pre></td></tr></table></figure></h2>
<h4 id="series对象的支持的特性"><a class="markdownIt-Anchor" href="#series对象的支持的特性"></a> Series对象的支持的特性</h4>
<ol>
<li>索引方式： a. 下标索引/键值索引/花式索引<br />
中括号中的整数，一定会被解释成标签名。可以用loc[]和iloc[]:<br />
a. <code>loc[]</code> 中括号中解释为标签<br />
b. <code>iloc[]</code> 中括号中解释为索引 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; pd.Series(range(10))</span><br><span class="line">a &#x3D; a[5:10]</span><br><span class="line">print(a)</span><br><span class="line">&gt;&gt;&gt; 5    5</span><br><span class="line">    6    6</span><br><span class="line">    7    7</span><br><span class="line">    8    8</span><br><span class="line">    9    9</span><br><span class="line">    dtype: int64</span><br><span class="line"></span><br><span class="line">print(a.loc[5])     &gt;&gt;&gt; 5</span><br><span class="line">print(a.iloc[4])    &gt;&gt;&gt; 9</span><br></pre></td></tr></table></figure>
</li>
<li>支持切片</li>
<li><code>index</code>属性返回标签的列表，<code>values</code>返回值的列表</li>
<li>可以和标量，或者series对象批量运算。注意这里牵扯到<strong>数据对齐</strong>：两个series对象运算时，是按照标签来对应的，而不是索引。如果存在标签不同的，则结果为NaN。<br />
解决NaN:<br />
a. <code>sr1.add(sr2, fill_value=默认值)</code>：添加并将NaN设置为默认值。<br />
b. <code>sr.isnull()/notnull()</code>：如果值为NaN，返回True/False，否则返回false/True。<br />
c. <code>sr.dropna()</code>：返回删除所有缺失值的Series对象<br />
d. <code>sr.fillna(参数)</code>：填充NaN并返回。 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sr1 &#x3D; pd.Series([11,12,13], index&#x3D;[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;])</span><br><span class="line">sr2 &#x3D; pd.Series([13,14,15], index&#x3D;[&#39;c&#39;,&#39;a&#39;,&#39;d&#39;])</span><br><span class="line"></span><br><span class="line">print(sr1.add(sr2, fill_value &#x3D; 0))</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">a    25.0</span><br><span class="line">b    12.0</span><br><span class="line">c    26.0</span><br><span class="line">d    15.0</span><br><span class="line">dtype: float64</span><br><span class="line"></span><br><span class="line">sr &#x3D; sr1.add(sr2)</span><br><span class="line">print(sr.isnull())</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">a    False</span><br><span class="line">b     True</span><br><span class="line">c    False</span><br><span class="line">d     True</span><br><span class="line">dtype: bool</span><br><span class="line"></span><br><span class="line">print(sr.dropna())</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">a    25.0</span><br><span class="line">c    26.0</span><br><span class="line">dtype: float64</span><br><span class="line"></span><br><span class="line">print(sr.fillna(8))</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">a    25.0</span><br><span class="line">b     8.0</span><br><span class="line">c    26.0</span><br><span class="line">d     8.0</span><br><span class="line">dtype: float64</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr />
<h3 id="dataframe对象"><a class="markdownIt-Anchor" href="#dataframe对象"></a> DataFrame对象</h3>
<h4 id="dataframe对象的创建"><a class="markdownIt-Anchor" href="#dataframe对象的创建"></a> DataFrame对象的创建</h4>
<ol>
<li>直接创建：</li>
</ol>
<ul>
<li>不指定行索引index（行索引被默认为数字，从0开始），参数为列的字典</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &#x3D; pd.DataFrame(&#123;&#39;one&#39;: [1, 2, 3], &#39;two&#39;: [4, 5, 6]&#125;)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">   one  two</span><br><span class="line">0    1    4</span><br><span class="line">1    2    5</span><br><span class="line">2    3    6</span><br></pre></td></tr></table></figure>
<ul>
<li>指定行索引index，参数为列的字典和行索引</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &#x3D; pd.DataFrame(&#123;&#39;one&#39;: [1, 2, 3], &#39;two&#39;: [4, 5, 6]&#125;, index&#x3D;[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;])</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">   one  two</span><br><span class="line">a    1    4</span><br><span class="line">b    2    5</span><br><span class="line">c    3    6</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>使用Series创建：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &#x3D; pd.DataFrame(&#123;&quot;one&quot;: pd.Series([1, 2, 3], index&#x3D;[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;]), &quot;two&quot;:pd.Series([1,2,3,4],index&#x3D;[&#39;b&#39;,&#39;a&#39;,&#39;c&#39;,&#39;d&#39;])&#125;)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">   one  two</span><br><span class="line">a  1.0    2</span><br><span class="line">b  2.0    1</span><br><span class="line">c  3.0    3</span><br><span class="line">d  NaN    4</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>使用index和columns参数创建：</li>
</ol>
<h2 id="-code6-"><a class="markdownIt-Anchor" href="#-code6-"></a> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dates &#x3D; pd.date_range(&#39;today&#39;,periods&#x3D;6) # 定义时间序列作为 index</span><br><span class="line">num_arr &#x3D; np.random.randn(6,4) # 传入 numpy 随机数组</span><br><span class="line">columns &#x3D; [&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;D&#39;] # 将列表作为列名</span><br><span class="line">df1 &#x3D; pd.DataFrame(num_arr, index &#x3D; dates, columns &#x3D; columns)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">                                   A         B         C         D</span><br><span class="line">2021-02-14 11:00:38.210410 -0.234308  0.458834  1.758701 -0.390679</span><br><span class="line">2021-02-15 11:00:38.210410 -1.448708  0.534228  0.404082  0.722971</span><br><span class="line">2021-02-16 11:00:38.210410  0.540040 -0.593858  0.882544  0.499553</span><br><span class="line">2021-02-17 11:00:38.210410 -1.295320  0.909557 -1.058109 -0.530681</span><br><span class="line">2021-02-18 11:00:38.210410  0.307840  0.328438 -0.680865 -2.096587</span><br><span class="line">2021-02-19 11:00:38.210410 -1.777850  0.615222 -0.213545 -0.219512</span><br></pre></td></tr></table></figure></h2>
<h4 id="dataframe常用属性"><a class="markdownIt-Anchor" href="#dataframe常用属性"></a> DataFrame常用属性</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &#x3D; pd.DataFrame(&#123;&quot;one&quot;: [1,2,3], &quot;two&quot;: [2,3,4]&#125;, index&#x3D;[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;])</span><br><span class="line"></span><br><span class="line">d &gt;&gt;&gt;</span><br><span class="line">   one  two</span><br><span class="line">a    1    2</span><br><span class="line">b    2    3</span><br><span class="line">c    3    4</span><br></pre></td></tr></table></figure>
<ol>
<li>index：获取索引</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d.index &gt;&gt;&gt; [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>T：转制</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d.T &gt;&gt;&gt;</span><br><span class="line">     a  b  c</span><br><span class="line">one  1  2  3</span><br><span class="line">two  2  3  4</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>columns：获取列索引</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d.columns &gt;&gt;&gt; [&#39;one&#39;, &#39;two&#39;]</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>values：获取值数组</li>
</ol>
<h2 id="-code11-5-info方法显示dataframe的基础信息包括行的数量列名每一列值的数量-类型"><a class="markdownIt-Anchor" href="#-code11-5-info方法显示dataframe的基础信息包括行的数量列名每一列值的数量-类型"></a> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d.values &gt;&gt;&gt;</span><br><span class="line">[[1 2]</span><br><span class="line"> [2 3]</span><br><span class="line"> [3 4]]</span><br></pre></td></tr></table></figure><br />
5. info()方法：显示DataFrame的基础信息，包括行的数量；列名；每一列值的数量、类型</h2>
<h4 id="dataframe切片和索引"><a class="markdownIt-Anchor" href="#dataframe切片和索引"></a> DataFrame切片和索引</h4>
<p>可以通过索引来查找，修改元素值。支持常规索引，切片索引，布尔值索引，花式索引搭配。</p>
<ol>
<li>使用<code>[列][行]</code>选择标签对应的元素，不建议使用这种方式</li>
<li><code>loc[行标签，列标签]</code>方法<br />
可以用&quot;:&quot;来选择一整行 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &#x3D; pd.DataFrame(&#123;&quot;one&quot;: pd.Series([1, 2, 3], index&#x3D;[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]), &quot;two&quot;: pd.Series([&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;], index&#x3D;[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;])&#125;)</span><br><span class="line"></span><br><span class="line">d &gt;&gt;&gt;</span><br><span class="line">    one two</span><br><span class="line">a  1.0   1</span><br><span class="line">b  2.0   2</span><br><span class="line">c  3.0   3</span><br><span class="line">d  NaN   4</span><br><span class="line"></span><br><span class="line">d[&#39;a&#39;, :] &gt;&gt;&gt;</span><br><span class="line">one    1.0</span><br><span class="line">two      1</span><br><span class="line">Name: a, dtype: object</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><code>iloc[行索引，列索引]</code></li>
</ol>
<hr />
<h4 id="数据对齐以及缺失数据"><a class="markdownIt-Anchor" href="#数据对齐以及缺失数据"></a> 数据对齐以及缺失数据</h4>
<ol>
<li>和numpy相似，在批处理数据对齐时会保留nan，</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d1 &#x3D; pd.DataFrame(&#123;&quot;one&quot;: pd.Series([1,2,3], index&#x3D;[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;]), &quot;two&quot;: pd.Series([&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;], index&#x3D;[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;])&#125;)</span><br><span class="line"></span><br><span class="line">d2 &#x3D; pd.DataFrame(&#123;&quot;one&quot;: pd.Series([2,3,4], index&#x3D;[&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]), &quot;two&quot;: pd.Series([&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;], index&#x3D;[&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;a&#39;])&#125;)</span><br><span class="line"></span><br><span class="line">d1 &gt;&gt;&gt;</span><br><span class="line">   one two</span><br><span class="line">a  1.0   1</span><br><span class="line">b  2.0   2</span><br><span class="line">c  3.0   3</span><br><span class="line">d  NaN   4</span><br><span class="line"></span><br><span class="line">d2 &gt;&gt;&gt;</span><br><span class="line">   one two</span><br><span class="line">a  NaN   4</span><br><span class="line">b  2.0   1</span><br><span class="line">c  3.0   2</span><br><span class="line">d  4.0   3</span><br><span class="line"></span><br><span class="line">d1+d2 &gt;&gt;&gt;</span><br><span class="line">   one two</span><br><span class="line">a  NaN  14</span><br><span class="line">b  4.0  21</span><br><span class="line">c  6.0  32</span><br><span class="line">d  NaN  43</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><code>fillna(默认值)</code> 用默认值来填充nan</li>
<li><code>dropna()</code> 将一整行全部删掉，两个参数：how='all’全部为NaN才删除整行，axis=0保留整行，axis=1保留整列</li>
</ol>
<h2 id="-code14-"><a class="markdownIt-Anchor" href="#-code14-"></a> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(d1+d2).dropna() &gt;&gt;&gt;</span><br><span class="line">   one two</span><br><span class="line">b  4.0  21</span><br><span class="line">c  6.0  32</span><br><span class="line"></span><br><span class="line">(d1+d2).dropna(axis&#x3D;1) &gt;&gt;&gt;</span><br><span class="line">  two</span><br><span class="line">a  14</span><br><span class="line">b  21</span><br><span class="line">c  32</span><br><span class="line">d  43</span><br></pre></td></tr></table></figure></h2>
<h4 id="一些方法"><a class="markdownIt-Anchor" href="#一些方法"></a> 一些方法</h4>
<ol>
<li><code>mean()</code></li>
<li><code>sum()</code></li>
<li><code>sort_values()</code>，参数：
<ul>
<li>by=‘列/行标签’</li>
<li>ascending=Flase 倒序// 有nan的不参加排序，统一放到最后</li>
<li>当使用多个排序标准时，使用数组 <code>df1.sort_values(by=['age', 'visits'], ascending=[False, True])</code></li>
</ul>
</li>
<li><code>sort_index()</code> 按索引进行排序，默认axis为0，ascending=True</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d1.sort_index(axis&#x3D;1, ascending&#x3D;False) &gt;&gt;&gt;</span><br><span class="line">  two  one</span><br><span class="line">a   1  1.0</span><br><span class="line">b   2  2.0</span><br><span class="line">c   3  3.0</span><br><span class="line">d   1  NaN</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>
<p><code>concat()</code>可以将数据根据不同的轴作简单的融合,参数说明:<br />
objs: series，dataframe或者是panel构成的序列list<br />
axis： 需要合并链接的轴，0是行，1是列<br />
join：连接的方式 inner，或者outer</p>
</li>
<li>
<p>检视数据<code>head()</code>，默认前5行，可以加入参数来指定行数。或者使用iloc[:n]属性来选择前n行</p>
</li>
<li>
<p>可以使用<code>loc[行标签名]=[行信息列表]</code>来插入某一行</p>
</li>
<li>
<p>使用<code>drop(行标签名)</code>来删除某一行，不可以用该方法删除整列</p>
</li>
<li>
<p><code>shift()</code>方法，用来偏移元素<br />
参数：</p>
<ol>
<li>periods: 偏移量</li>
<li>frep: DateOffset, timedelta, or time rule string，可选参数，默认值为None，只适用于时间序列，如果这个参数存在，那么会按照参数值移动时间索引，而数据值没有发生变化。</li>
<li>axis:指定要移位的行或列，0为行，1为列</li>
<li>fill_value:指定移位后的填充值，fill_value=0，即表示移位后缺失值填充为0<br />
可以用该方法对单行/列进行操作<br />
可以用该方法来去除重复行</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">df &#x3D; pd.DataFrame(&#123;&#39;A&#39;: [1, 2, 2, 3, 4, 5, 5, 5, 6, 7, 7]&#125;)</span><br><span class="line">df1 &#x3D; df.loc[df[&#39;A&#39;].shift() !&#x3D; df[&#39;A&#39;]]</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">   A</span><br><span class="line">0  1</span><br><span class="line">1  2</span><br><span class="line">3  3</span><br><span class="line">4  4</span><br><span class="line">5  5</span><br><span class="line">8  6</span><br><span class="line">9  7</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr />
<h3 id="pandas-时间对象处理"><a class="markdownIt-Anchor" href="#pandas-时间对象处理"></a> pandas 时间对象处理</h3>
<ul>
<li>datetime库中的strptime()方法将字符串转换为时间对象，需要输入格式字符串:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">datetime.datetime.strptime(&quot;2000-12-25&quot;, &#39;%Y-%m-%d&#39;)</span><br><span class="line">&gt;&gt;&gt; 2000-12-25 00:00:00</span><br></pre></td></tr></table></figure>
<ul>
<li>pandas自动安装了dateutil库,使用parser.parse()方法，可以不用输入格式字符串:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dateutil.parser.parse(&quot;2000.12.25 12:30&quot;)</span><br><span class="line">&gt;&gt;&gt; 2000-12-25 12:30:00</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><code>pd.to_datetime()</code>：参数为批量时间字符串列表，自动返回对应的datetime对象的数组</p>
</li>
<li>
<p><code>pd.date_range()</code>：生成时间范围数组。参数为起始时间，结束时间，periods=天数，freq频率='H’小时/'W-MON’每个周一，默认为周日/'B’工作日/'A’年/'M’月份。</p>
</li>
</ul>
<h4 id="将时间对象用作series的标签"><a class="markdownIt-Anchor" href="#将时间对象用作series的标签"></a> 将时间对象用作Series的标签</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sr &#x3D; pd.Series(np.arange(100), index &#x3D; pd.date_range(&#39;2017-1-1&#39;, periods&#x3D;100))</span><br><span class="line"></span><br><span class="line">sr &gt;&gt;&gt;</span><br><span class="line">2017-01-01     0</span><br><span class="line">2017-01-02     1</span><br><span class="line">2017-01-03     2</span><br><span class="line">              ..</span><br><span class="line">2017-04-09    98</span><br><span class="line">2017-04-10    99</span><br><span class="line">Freq: D, Length: 100, dtype: int64</span><br></pre></td></tr></table></figure>
<ul>
<li>可见Series的索引为时间对象<code>dateTime</code>，方便我们的切片和索引。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 直接找到某个月</span><br><span class="line">sr[&#39;2017-04&#39;] &gt;&gt;&gt;</span><br><span class="line">2017-04-01    90</span><br><span class="line">2017-04-02    91</span><br><span class="line">2017-04-03    92</span><br><span class="line">2017-04-04    93</span><br><span class="line">2017-04-05    94</span><br><span class="line">2017-04-06    95</span><br><span class="line">2017-04-07    96</span><br><span class="line">2017-04-08    97</span><br><span class="line">2017-04-09    98</span><br><span class="line">2017-04-10    99</span><br><span class="line">Freq: D, dtype: int64</span><br></pre></td></tr></table></figure>
<ul>
<li><code>resample()</code>可以更改series的样式，参数为freq，后面可以加上sum()/mean()等统计方法，来返回整周/月/年的统计数值。</li>
</ul>
<h2 id="-code21-"><a class="markdownIt-Anchor" href="#-code21-"></a> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sr.resample(&#39;M&#39;).sum() &gt;&gt;&gt;</span><br><span class="line">2017-01-31     465</span><br><span class="line">2017-02-28    1246</span><br><span class="line">2017-03-31    2294</span><br><span class="line">2017-04-30     945</span><br><span class="line">Freq: M, dtype: int64</span><br></pre></td></tr></table></figure></h2>
<h3 id="pandas-文件处理"><a class="markdownIt-Anchor" href="#pandas-文件处理"></a> pandas 文件处理</h3>
<p>注意一些方法即可：<br />
1.<code>pd.read_csv(文件名)</code>：默认分隔符为逗号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my_csv &#x3D; pd.read_csv(&quot;test.csv&quot;);</span><br><span class="line">print(my_csv)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">  Unnamed: 0  one  two</span><br><span class="line">0          a  1.0    2</span><br><span class="line">1          b  2.0    1</span><br><span class="line">2          c  3.0    3</span><br><span class="line">3          d  NaN    4</span><br></pre></td></tr></table></figure>
<ul>
<li>会出现Unnamed，这是因为他把行索引当成了单独的一列。可以用利用参数<code>index_col=0</code>将第0列作为索引。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(pd.read_csv(&quot;test.csv&quot;, index_col&#x3D;0))</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">   one  two</span><br><span class="line">a  1.0    2</span><br><span class="line">b  2.0    1</span><br><span class="line">c  3.0    3</span><br><span class="line">d  NaN    4</span><br></pre></td></tr></table></figure>
<ul>
<li>除此之外，<code>index_col</code>也可以传入列名称，将某列设置为索引。</li>
<li>使用<code>parse_dates = [列表名]</code>，将该列元素解析为datetime对象。</li>
<li>如果文件没有第一行，<code>header=None, names=[列的名称]</code></li>
<li>注意在识别中，会令一整列都识别为同一种类型。在csv中，NaN可以被识别为浮点数，但是none或者其他数值会被识别为字符串形式。使用<code>na_values=[]</code>参数来指定列表中的某些数值被识别为NaN。</li>
</ul>
<ol start="2">
<li><code>pd.read_table(文件名)</code>：默认分隔符为制表符</li>
<li><code>dataFrame.to_csv(文件名)</code>：写入到文件<br />
参数：
<ul>
<li><code>sep</code> 指定的文件分隔符号，默认为逗号</li>
<li><code>na_rep</code> 缺失值转换的字符串，默认为空字符串</li>
<li><code>header = False</code> 不输出列名称一行</li>
<li><code>index = False</code> 不输出行索引一列</li>
<li><code>cols/columns</code> 指定输出的列，传入列表</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>Python 数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>py2neo介绍</title>
    <url>/2021/03/02/basic%20operation/py2neo%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h3 id="导入包"><a class="markdownIt-Anchor" href="#导入包"></a> 导入包</h3>
<p><code>from py2neo import Graph, Node, Relationship</code></p>
<h3 id="建立连接"><a class="markdownIt-Anchor" href="#建立连接"></a> 建立连接</h3>
<ul>
<li>与网站建立连接：py2neo.graph 函数，参数为用户名以及密码，会返回一个链接对象<br />
<code>link = Graph(&quot;http://localhost:7474&quot;,auth=(&quot;neo4j&quot;,&quot;password&quot;))</code></li>
</ul>
<h3 id="清空原数据"><a class="markdownIt-Anchor" href="#清空原数据"></a> 清空原数据</h3>
<p><code>graph.delete_all()</code></p>
<p><strong>Node和Relationship在这个驱动中都继承了PropertyDict这个类，而这个类继承类python里面的dict,所以操作和python本身的dict一模一样</strong></p>
<h3 id="节点操作"><a class="markdownIt-Anchor" href="#节点操作"></a> 节点操作</h3>
<ul>
<li>新建节点：py2neo.Node 函数，参数为标签和数据，返回一个节点对象<br />
<code>a = Node(&quot;Person&quot;, name=&quot;Alice&quot;)</code></li>
<li>放置节点：py2neo.graph.create 函数<br />
<code>graph.create(buy_node)</code></li>
</ul>
<p>一些额外操作：</p>
<ul>
<li>获取node的属性：<code>x=node[key]</code></li>
<li>设置node的属性：<code>node[key] = value</code></li>
<li>删除node的属性：<code>del node[key]</code></li>
<li>返回node里面property的个数：<code>len(node)</code></li>
<li>返回所有和这个节点有关的label：<code>node.labels</code></li>
<li>删除某个label：<code>node.labels.remove(labelname)</code></li>
<li>将node的所有property以dictionary的形式返回：<code>dic(node)</code></li>
</ul>
<h3 id="关系操作"><a class="markdownIt-Anchor" href="#关系操作"></a> 关系操作</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ab &#x3D; Relationship(a, &quot;KNOWS&quot;, b)</span><br><span class="line">graph.create(ab)</span><br></pre></td></tr></table></figure>
<p>关系同样也有类似的操作：</p>
<ul>
<li>创建relationship：<code>Relationship(start_node, type, end_node, properties)</code></li>
<li>返回Relationship的property：<code>Relationship[key]</code></li>
<li>删除某个property：<code>del Relationship[key]</code></li>
<li>将property以字典形式返回：<code>dict(relationship)</code></li>
</ul>
<h3 id="查询query"><a class="markdownIt-Anchor" href="#查询query"></a> 查询Query</h3>
<ol>
<li>可以在nodes中调用match来找点</li>
<li>或者使用py2neo.matching包里面的NodeMatcher(graph)函数构建一个matcher再查询</li>
</ol>
<p>py2neo提供了专门的查询模块：NodeMatcher和RelationshipMatcher</p>
<ul>
<li>创建matcher，返回的结果仍然是NodeMatcher对象或RelationshipMatcher对象</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph &#x3D; Graph()</span><br><span class="line">matcher_1 &#x3D; NodeMatcher(graph)</span><br><span class="line">matcher_2 &#x3D; NodeMatcher(graph)</span><br></pre></td></tr></table></figure>
<ul>
<li>使用 <strong>matcher.match()</strong> 进行查询,，可继续使用where()，first()，order_by()等进行操作。</li>
<li>where中可以选择属性名进行查找，或者使用名称进行查找</li>
</ul>
<ol>
<li>属性名：<code>where(year=2017)</code></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node &#x3D; matcher_1.match(&quot;Paper&quot;,ID&#x3D;&#39;09076&#39;).where(year&#x3D;2017)  # 匹配指定ID和year的Paper结点</span><br><span class="line">relation &#x3D; matcher_2.match(r_type&#x3D;&quot;Cited&quot;).limit(50)</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>名称：<code>where(&quot;_.name=&quot; + &quot;'&quot; + *名称 + &quot;'&quot;))</code><br />
match后返回的结果仍然能是Matcher对象，可以用first()函数得到首个实体或者使用list(Matcher)将其转换为列表。</li>
</ol>
]]></content>
      <tags>
        <tag>知识图谱</tag>
      </tags>
  </entry>
  <entry>
    <title>书写博客，修改博客的分类及标签</title>
    <url>/2021/02/02/basic%20operation/%E4%B9%A6%E5%86%99%E5%8D%9A%E5%AE%A2%EF%BC%8C%E4%BF%AE%E6%94%B9%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="如何定义文档内容样式"><a class="markdownIt-Anchor" href="#如何定义文档内容样式"></a> 如何定义文档内容样式</h1>
<p>– 在hexo主页下文档document栏front-matter部分，介绍了一些基本的参数，注意—开始—结束。</p>
<h2 id="next格式下-更改标签页和分类页"><a class="markdownIt-Anchor" href="#next格式下-更改标签页和分类页"></a> next格式下 更改标签页和分类页</h2>
<p>在themes/next/_config.yml下找到menu，可以开启/隐藏目录页。<br />
home：主页<br />
tag：标签页<br />
categories：分类页</p>
<h2 id="创建标签页"><a class="markdownIt-Anchor" href="#创建标签页"></a> 创建标签页</h2>
<p><code>hexo n page tags</code></p>
<h2 id="创建分类页"><a class="markdownIt-Anchor" href="#创建分类页"></a> 创建分类页</h2>
<p><code>hexo n page categories</code></p>
<h2 id="设置主页阅读全文"><a class="markdownIt-Anchor" href="#设置主页阅读全文"></a> ? 设置主页阅读全文</h2>
<p>在themes/next/_config.yml<br />
excerpt_description: true</p>
<h2 id="设置文章内链接样式"><a class="markdownIt-Anchor" href="#设置文章内链接样式"></a> ? 设置文章内链接样式</h2>
<p>打开文件 <code>themes/next/source/css/_common/components/post/post-body.styl</code><br />
新版本该文件全部放入.post-body下，在最后面添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.post-body p a&#123;</span><br><span class="line">    color:red;</span><br><span class="line">    border-bottom:none;</span><br><span class="line">    &amp;:hover&#123;</span><br><span class="line">      color:#8C8C8C；</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但是这样改成功不了<br />
在主题_config.yml中取消#<br />
<code>#style: source/_data/custom.styl</code><br />
然后新建<code>source/_data/custom.styl</code>，在其中插入</p>
]]></content>
      <categories>
        <category>online</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>share</tag>
      </tags>
  </entry>
  <entry>
    <title>博客主题的安装与推荐</title>
    <url>/2021/02/02/basic%20operation/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2>
<ol>
<li>
<p>在hexo官网下的Themes部分选择喜欢的目标样式，选择后点击名称，跳转到github。</p>
</li>
<li>
<p>根据github中文档中的操作信息进行操作。<br />
以Cactus为例（ github网址；<a href="https://github.com/probberechts/hexo-theme-cactus%EF%BC%89">https://github.com/probberechts/hexo-theme-cactus）</a><br />
2.1 命令行，hexo根目录下 ：<br />
$ git clone <a href="https://github.com/probberechts/hexo-theme-cactus.git">https://github.com/probberechts/hexo-theme-cactus.git</a> themes/cactus<br />
2.2 clone操作完成后，在根目录下找到config.yml文件，并修改文件内的参数theme：<br />
vim _config.yml<br />
找到 theme: yilia<br />
修改为 theme: cactus<br />
2.3 然后 hexo s 启动博客来查看</p>
</li>
<li>
<p>可以参考github主页上提供的方法来修改博客主题的内容参数。</p>
</li>
</ol>
<h2 id="更改-以next为例"><a class="markdownIt-Anchor" href="#更改-以next为例"></a> 更改， 以next为例</h2>
<p>进入主题的page文件：themes/next/config.vml<br />
在 # Schemes下设置样式</p>
<h2 id="更改头像"><a class="markdownIt-Anchor" href="#更改头像"></a> 更改头像</h2>
<p>进入主题的page文件：themes/next/config.vml<br />
在 # Avatar 下：<br />
url设置路径头像，需要是网络路径。推荐：极简图床</p>
]]></content>
  </entry>
  <entry>
    <title>启动侧边栏社交链接</title>
    <url>/2021/02/02/basic%20operation/%E5%90%AF%E5%8A%A8%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<h2 id="社交链接"><a class="markdownIt-Anchor" href="#社交链接"></a> 社交链接</h2>
<p>进入主题的page文件：<code>themes/next/config.vml</code><br />
找到 <code># Social Links</code><br />
在 <code>social</code> 下更改个人信息</p>
<h2 id="友情链接"><a class="markdownIt-Anchor" href="#友情链接"></a> 友情链接</h2>
<p>进入主题的page文件：<code>themes/next/config.vml</code><br />
找到 <code>links</code>:<br />
<code># Title: https://example.com</code></p>
<h2 id="打赏功能"><a class="markdownIt-Anchor" href="#打赏功能"></a> 打赏功能</h2>
<p>进入主题的page文件：<code>themes/next/config.vml</code><br />
找到 <code>#reward</code></p>
<h2 id="订阅公众号"><a class="markdownIt-Anchor" href="#订阅公众号"></a> 订阅公众号</h2>
<p>进入主题的page文件：<code>themes/next/config.vml</code><br />
找到 <code>follow_me</code>:</p>
<h2 id="添加fork-github"><a class="markdownIt-Anchor" href="#添加fork-github"></a> 添加fork Github</h2>
<p>制作网站：<code>https://tholman.com/github-corners/</code><br />
复制链接<br />
打开文件 <code>themes/next/layout/_layout.njk</code><br />
在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下一行粘贴代码<br />
更改<code>href=&quot;https://your-url&quot;</code>中的链接改成自己的网站地址</p>
<h2 id="添加评论功能"><a class="markdownIt-Anchor" href="#添加评论功能"></a> 添加评论功能</h2>
<p>进入主题的page文件：<code>themes/next/config.vml</code><br />
在<code>changyan</code>处设置</p>
<h2 id="添加搜索功能"><a class="markdownIt-Anchor" href="#添加搜索功能"></a> 添加搜索功能</h2>
<p><code>http://theme-next.iissnan.com/third-party-services.html#local-search</code>网站下，<code>local Search</code>中根据步骤执行操作<br />
注意：   <code>站点配置文件</code>：<code>_config.vml</code><br />
<code>主题配置文件</code>：`themes/next/config.vml</p>
<h2 id="隐藏强力驱动"><a class="markdownIt-Anchor" href="#隐藏强力驱动"></a> 隐藏强力驱动</h2>
<p>进入文件<code>themes/next/layout/_partials/footer.njk</code><br />
使用<code>&lt;!-- --&gt;</code><br />
隐藏<code>&#123;%- if theme.footer.powered %&#125;</code>栏</p>
]]></content>
  </entry>
  <entry>
    <title>部署到github</title>
    <url>/2021/02/03/basic%20operation/%E9%83%A8%E7%BD%B2%E5%88%B0github/</url>
    <content><![CDATA[<p>在<code>_config</code>下找到<code>deploy</code><br />
修改为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type: git</span><br><span class="line">repo: [github库链接]</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>
<p><code>hexo g</code> 本地生成文件<br />
<code>hexo d</code> 远程部署</p>
<p>部署时可能会报错，根据官方文档中的部署操作<code>npm install hexo-deployer-git --save</code>来安装插件</p>
]]></content>
  </entry>
  <entry>
    <title>Maven-idea</title>
    <url>/2021/03/22/maven/Maven-idea/</url>
    <content><![CDATA[<h3 id="插件"><a class="markdownIt-Anchor" href="#插件"></a> 插件</h3>
<p>在pom.xml文件的build标签下，maven编译插件可以设置项目使用的jdk版本。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--控制配置maven构建项目的参数设置，设置jdk的版本--&gt;</span><br><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;!--配置插件--&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">        &lt;!--配置具体的插件--&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;!--插件名称--&gt;</span><br><span class="line">            &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;!--插件版本--&gt;</span><br><span class="line">            &lt;version&gt;3.2.0&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;!--配置插件信息--&gt;</span><br><span class="line">            &lt;configuration&gt;</span><br><span class="line">                &lt;!--代码编译环境--&gt;</span><br><span class="line">                &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                &lt;!--代码运行环境--&gt;</span><br><span class="line">                &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">            &lt;&#x2F;configuration&gt;</span><br><span class="line">        &lt;&#x2F;plugin&gt;</span><br><span class="line">    &lt;&#x2F;plugins&gt;</span><br><span class="line">&lt;&#x2F;build&gt;</span><br></pre></td></tr></table></figure>
<h3 id="maven-配置"><a class="markdownIt-Anchor" href="#maven-配置"></a> Maven 配置</h3>
<p><code>-DarchetypeCatalog=internal</code><br />
<img src="https://i.loli.net/2021/03/22/qSpO8mhgszxYfaL.png" alt="" /><br />
<img src="https://i.loli.net/2021/03/22/YheV4BLbP9fuKHm.png" alt="" /></p>
<h3 id="创建项目"><a class="markdownIt-Anchor" href="#创建项目"></a> 创建项目</h3>
<ol>
<li>使用模版创建项目 maven-archetype-quickstart ： 普通java项目<br />
<img src="https://i.loli.net/2021/03/22/ufHWntlcivEUVPQ.png" alt="" /></li>
<li>quickstart模版没有resources目录，用时需要手动去main目录下新建该目录。<br />
然后设置为resources文件夹<br />
<img src="https://i.loli.net/2021/03/22/jpToIqCkdUWuxH3.png" alt="" /><br />
java文件夹为source-root</li>
<li>看到pox.xml</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot; xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--项目坐标--&gt;</span><br><span class="line">    &lt;groupId&gt;org.example&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;maven-moudle&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;&#x2F;packaging&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!--设置maven属性--&gt;</span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;!-- 构建项目使用的编码--&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-8&lt;&#x2F;project.build.sourceEncoding&gt;</span><br><span class="line">        &lt;!-- 编译和运行的jdk版本--&gt;</span><br><span class="line">        &lt;maven.compiler.source&gt;1.8&lt;&#x2F;maven.compiler.source&gt;</span><br><span class="line">        &lt;maven.compiler.target&gt;1.8&lt;&#x2F;maven.compiler.target&gt;</span><br><span class="line">    &lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!--依赖--&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;!--单元测试--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;junit&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;junit&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;4.11&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure>
<p>注意    修改properties中的版本为1.8，build可以省略。</p>
<h3 id="maven窗口"><a class="markdownIt-Anchor" href="#maven窗口"></a> Maven窗口</h3>
<p><img src="https://i.loli.net/2021/03/22/xR1zYVFXudaLD6b.png" alt="" /><br />
生命周期中，就是上一章讲过的命令。</p>
<h3 id="利用maven创建web工程"><a class="markdownIt-Anchor" href="#利用maven创建web工程"></a> 利用maven创建web工程</h3>
<p><img src="https://i.loli.net/2021/03/22/VehoDY48NCLdHnE.png" alt="" /><br />
以前开发时，需要手动设置Tomcat，但是现在无需这么做了。</p>
<ul>
<li>增加依赖</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;javax.servlet&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;javax.servlet-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.1.0&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;javax.servlet.jsp&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jsp-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;2.1&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2021/03/22/NWACLK7oyjZxi1G.png" alt="" /><br />
<strong>粘贴之后，如果没有自动下载，则右侧边栏点reload按钮即可。</strong></p>
<ul>
<li>这样即可创建servlet！！！<br />
<img src="https://i.loli.net/2021/03/22/X5TPymLAoU7RegM.png" alt="" /></li>
</ul>
<h3 id="maven依赖范围"><a class="markdownIt-Anchor" href="#maven依赖范围"></a> Maven依赖范围</h3>
<ul>
<li>在 <strong>dependency标签</strong>中使用<strong>scope</strong>标识</li>
<li>表示依赖使用的范围，也就是在maven构建项目时的哪些阶段起作用。<br />
阶段：清理，编译，测试，打包，安装，部署</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;junit&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;junit&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;4.11&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<p>所以junit只有在测试时使用。</p>
<ul>
<li>scope标识：
<ul>
<li>compile：默认值，支持全阶段。</li>
<li>provided：服务器提供这些东西。只在编译和测试阶段有效，在打包和安装时无需提供这个包。</li>
<li>test：只在测试时有效。</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven技巧</title>
    <url>/2021/03/22/maven/Maven%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h2 id="技巧1-刷新"><a class="markdownIt-Anchor" href="#技巧1-刷新"></a> 技巧1 ： 刷新</h2>
<ul>
<li>pom文件的依赖等更新后，idea可能无法自动更新下。<br />
<img src="https://i.loli.net/2021/03/22/KtZsDLREA958f7e.png" alt="" /><br />
或者maven窗口的刷新，上篇文章讲过。</li>
</ul>
<h2 id="技巧2-导入删除项目"><a class="markdownIt-Anchor" href="#技巧2-导入删除项目"></a> 技巧2 ： 导入删除项目</h2>
<ul>
<li>在项目中导入或者移除项目<br />
删除：<img src="https://i.loli.net/2021/03/22/OsKIJNku1RfLydr.png" alt="" /><br />
导入：首先确认是带有pom的maven项目<br />
module -&gt; + -&gt; import module<br />
<img src="https://i.loli.net/2021/03/22/1ykqhjp9MzYlDGt.png" alt="" /><br />
<img src="https://i.loli.net/2021/03/22/VAq91NDuW7mkJQI.png" alt="" /></li>
</ul>
<h2 id="maven常用操作"><a class="markdownIt-Anchor" href="#maven常用操作"></a> Maven常用操作</h2>
<h3 id="maven属性设置-properties标签"><a class="markdownIt-Anchor" href="#maven属性设置-properties标签"></a> Maven属性设置 properties标签</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--编码方式，避免中文乱码--&gt;</span><br><span class="line">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;&#x2F;project.build.sourceEncoding&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--编译jdk版本--&gt;</span><br><span class="line">    &lt;maven.compiler.source&gt;1.8&lt;&#x2F;maven.compiler.source&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--运行的jdk版本--&gt;</span><br><span class="line">    &lt;maven.compiler.target&gt;1.8&lt;&#x2F;maven.compiler.target&gt;</span><br><span class="line">&lt;&#x2F;properties&gt;</span><br></pre></td></tr></table></figure>
<h3 id="maven全局变量"><a class="markdownIt-Anchor" href="#maven全局变量"></a> Maven全局变量</h3>
<ul>
<li>两种方式：
<ul>
<li>在properties标签中通过<strong>自定义标签声明变量</strong>，标签名就是变量名。</li>
<li>在pox.xml其他位置，使用 <code>$&#123;标签名&#125;</code>设置变量的值，然后在<code>dependency标签</code>中调用。</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;spring.version&gt;5.2.0&lt;spring.version&gt;</span><br><span class="line">&lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        ...</span><br><span class="line">        &lt;version&gt; &amp;&#123;spring.version&#125; &lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>自定义全局变量一般是定义<strong>依赖的版本号</strong>，当项目中需要使用多个<strong>相同</strong>的版本号时。</li>
<li>优先使用全局变量，再使用 <code>$&#123;标签名&#125;</code> ，上述spring就是一个例子。</li>
</ul>
<h3 id="maven指定资源插件"><a class="markdownIt-Anchor" href="#maven指定资源插件"></a> Maven指定资源插件</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">  &lt;resources&gt;</span><br><span class="line">      &lt;resource&gt;</span><br><span class="line">          &lt;directory&gt;src&#x2F;main&#x2F;java&lt;&#x2F;directory&gt;    &lt;!--所在的目录--&gt;</span><br><span class="line"></span><br><span class="line">          &lt;includes&gt;                              &lt;!--包括目录下.properties，.xml文件都会被扫描到--&gt;</span><br><span class="line">              &lt;include&gt;**&#x2F;*.properties&lt;&#x2F;include&gt;</span><br><span class="line">              &lt;include&gt;**&#x2F;*.xml&lt;&#x2F;include&gt;</span><br><span class="line">          &lt;&#x2F;includes&gt;</span><br><span class="line"></span><br><span class="line">          &lt;filtering&gt;false&lt;&#x2F;filtering&gt;            &lt;!-- filtering选项false不启用过滤， *.property已经有过滤作用--&gt;</span><br><span class="line">      &lt;&#x2F;resource&gt;</span><br><span class="line">  &lt;&#x2F;resources&gt;</span><br><span class="line">&lt;&#x2F;build&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>默认没有使用<code>resources</code>时，maven执行编码时，会把<code>src/main/resources</code>目录文件拷贝到<code>target/classes</code>目录中。<br />
对于<code>src/main/java</code>目录下的非java文件不处理</li>
<li>如果需要用到<code>src/main/java</code>目录下的其他文件时，则需要将<code>resources</code>添加到<code>build标签</code>中。</li>
</ul>
]]></content>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven简介</title>
    <url>/2021/03/22/maven/Maven%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h3 id="项目的构建"><a class="markdownIt-Anchor" href="#项目的构建"></a> 项目的构建</h3>
<p>构建是面向过程的，需要完成项目代码的编译，测试，运行，打包，部署等等。</p>
<ul>
<li>maven支持的构建包括：</li>
</ul>
<ol>
<li>清理：将之前项目编译的内容删除，为新的编译工作作准备</li>
<li>编译：将程序源代码编译为执行代码 java-class文件（批量）</li>
<li>测试：可以执行测试程序代码（批量）</li>
<li>报告：生成测试结果文件</li>
<li>打包：将项目中的所有class文件，配置文件等所有资源文件都放到一个压缩文件中<br />
这个压缩文件就是结果文件，java程序为jar格式，web应用格式为war</li>
<li>安装：将生成的压缩文件安装到本地仓库</li>
<li>部署</li>
</ol>
<h3 id="核心概念"><a class="markdownIt-Anchor" href="#核心概念"></a> 核心概念</h3>
<ul>
<li>POM</li>
</ul>
<ol>
<li>一个名为<strong>pom.xml</strong>的文件，pom翻译为项目对象模型。</li>
<li>对maven来说，一个项目就是一个模型。</li>
<li>对maven做的控制操作都是通过pom实现的，所以可以说pom控制了maven构建项目的过程。</li>
</ol>
<ul>
<li>约定的目录结构：maven项目的目录和文件的位置都是规定的</li>
<li>坐标：是一个唯一的字符串，用来表示资源</li>
<li>依赖管理：管理项目可以使用的jar包</li>
<li>仓库管理</li>
<li>生命周期：maven构建项目的过程</li>
<li>插件和目标</li>
<li>继承</li>
<li>整合</li>
</ul>
<h3 id="maven仓库"><a class="markdownIt-Anchor" href="#maven仓库"></a> Maven仓库</h3>
<ul>
<li>不需要人为参与</li>
<li>例子：如果开发人员需要使用mysql驱动，则maven首先查看本地仓库，然后查找私服，然后再从中央仓库的镜像中下载到私服，再到本地仓库。</li>
<li><code>www.mvnrepository.com</code>为搜索使用的中央仓库。</li>
</ul>
<h3 id="约定的目录结构"><a class="markdownIt-Anchor" href="#约定的目录结构"></a> 约定的目录结构</h3>
<p>每一个maven的项目在磁盘中都是一个文件夹，在项目中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hello</span><br><span class="line">    |--src</span><br><span class="line">    |   |--main             # 放置主程序和配置文件</span><br><span class="line">    |   |   |--java         # 放程序包和包中的java文件</span><br><span class="line">    |   |   |--resources    # 放置配置文件</span><br><span class="line">    |   |</span><br><span class="line">    |   |--test             # 放置测试程序代码和文件，可以没有</span><br><span class="line">    |       |--java         # 放程序包和包中的java文件</span><br><span class="line">    |       |--resources    # 放置配置文件</span><br><span class="line">    |</span><br><span class="line">    |--pom.xml              # maven核心文件</span><br></pre></td></tr></table></figure>
<h4 id="引子"><a class="markdownIt-Anchor" href="#引子"></a> 引子</h4>
<ul>
<li>在java项目路径下（src）同级路径，<code>mvn compile</code> ，<strong>编译</strong>src/main目录下的所有java文件。<code>mvn test-compile</code>编译test目录下的程序。</li>
<li>会下载jar文件到本地仓库中，截取一条命令<br />
<code>Downloaded from nexus-aliyun: http://maven.aliyun.com/nexus/content/groups/public/org/codehaus/plexus/plexus-compiler-api/2.2/plexus-compiler-api-2.2.jar (25 kB at 17 kB/s)</code>，可以看到网址，这里我设置了阿里云的镜像。</li>
<li><code>https://repo.maven.apache.org</code>是<strong>中央仓库</strong>的地址。</li>
<li>build success之后，就会生成target结果目录，存放maven编译的java程序。</li>
<li>使用<code>java</code>命令测试程序：<code>(base) Ylin:classes liuyilin$ java com.bjpowernode.HellowMaven</code></li>
</ul>
<h4 id="pomxml文件"><a class="markdownIt-Anchor" href="#pomxml文件"></a> pom.xml文件</h4>
<ul>
<li>Project Object Model 项目对象模型。 Maven再pom.xml中声明一个项目的结构和内容。</li>
<li>基本信息：</li>
</ul>
<ol>
<li>
<p>modelVersion：Maven的模型，只能是最新版<strong>4.0.0</strong>。</p>
</li>
<li>
<p>坐标</p>
<ul>
<li>groupId：表示组织id，一般是<strong>公司域名的倒写</strong>。</li>
<li>artifactId：<strong>项目名称</strong>，也是模块名称，对应groupId中的子项目。</li>
<li>version：<strong>版本号</strong>，一般使用<strong>三位数字</strong>标识。如果是不稳定版本，则通常加后缀<code>-SNAPSHOT</code>.<br />
<strong>groupID, artifactId, version三者组成了坐标，用于定位互联网上唯一的一个项目。</strong></li>
</ul>
</li>
<li>
<p>packaging：打包后压缩文件的扩展名，默认为jar，可以不写。</p>
</li>
<li>
<p>依赖：dependencies和dependency，相当于java代码中的import。<br />
在使用某一功能时，官网/项目组会告知使用哪一个版本。</p>
</li>
<li>
<p>properties：属性</p>
</li>
<li>
<p>build：项目构建时候的配置信息</p>
</li>
</ol>
<h3 id="命令"><a class="markdownIt-Anchor" href="#命令"></a> 命令</h3>
<p><strong>首先需要在项目路径下</strong></p>
<ul>
<li><code>mvn compile</code> ： 编译java程序
<ul>
<li>使用了<code>maven-compiler-plugin:3.1:compile</code>和<code>maven-resources-plugin:2.6:resources</code>两个插件。</li>
<li><strong>前者</strong>编译<code>main/java</code>目录下的java编译为class文件，将class拷贝到<code>target/classes</code>目录下面。</li>
<li><strong>后者</strong>把main/resources目录下所有文件都拷贝到<code>target/classes</code>目录下。</li>
<li>不会操作test目录下内容。</li>
</ul>
</li>
<li><code>mvn test-compile</code> ： 编译测试程序
<ul>
<li>同样的操作 --&gt; test-class</li>
</ul>
</li>
<li><code>mvn test</code>：测试编译程序。<br />
会一次性执行clean清理，compile编译主程序，test-compile编译测试程序和测试四个部分。最终结果会生成一个测试报告，地址为<code>target/surefire-reports</code>。</li>
<li><code>mvn clean</code> ： 清除target</li>
<li><code>mvn package</code>：打包，即制作压缩文件，生成在target目录下。只生成src目录下的文件。</li>
<li><code>mvn install</code>：安装主程序，会根据pom中的坐标生成目录，并且安装到本地的仓库中去。<br />
<img src="https://i.loli.net/2021/03/22/2wLeF7vdNcnipYk.png" alt="" /><br />
同时别的项目中的pom文件可以直接粘贴这个坐标来直接得到这个jar包。</li>
</ul>
]]></content>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>tensorflow数据常用属性和运算</title>
    <url>/2021/03/23/tensorflow/Tensorflow%E6%95%B0%E6%8D%AE%E5%B1%9E%E6%80%A7%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h2 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h2>
<ul>
<li>scalar：标量</li>
<li>vector：一维数组</li>
<li>matrix：二维数组/矩阵</li>
<li>tensor：维度&gt;2的数组</li>
</ul>
<h3 id="创建数据"><a class="markdownIt-Anchor" href="#创建数据"></a> 创建数据</h3>
<ul>
<li><strong>tf.constant(value，dtype)</strong> : 创建一个普通的数据
<ul>
<li>dtype可以省略，主要的数据类型有</li>
</ul>
<ol>
<li>整数</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tf.int8：8位整数</span><br><span class="line">tf.int16：16位整数</span><br><span class="line">tf.int32：32位整数</span><br><span class="line">tf.int64：64位整数</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>无符号整数</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tf.uint8：8位无符号整数</span><br><span class="line">tf.uint16：16位无符号整数</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>浮点型</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tf.float16：16位浮点数</span><br><span class="line">tf.float32：32位浮点数</span><br><span class="line">tf.float64：64位浮点数</span><br><span class="line">tf.double：等同于tf.float64</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>字符串型：<code>tf.string</code></li>
<li>布尔型：<code>tf.bool</code></li>
<li>复数：</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tf.complex64：64位复数</span><br><span class="line">tf.complex128：128位复数</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="检测数据类型"><a class="markdownIt-Anchor" href="#检测数据类型"></a> 检测数据类型</h3>
<p><code>tf.is_tensor(a)</code></p>
<h3 id="数据类型转换"><a class="markdownIt-Anchor" href="#数据类型转换"></a> 数据类型转换</h3>
<ul>
<li><code>tf.convert_to_tensor</code>方法：将其他数据类型转换成tensor数据类型</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; np.arange(5)</span><br><span class="line">aa &#x3D; tf.convert_to_tensor(a)</span><br><span class="line">aa &#x3D; tf.convert_to_tensor(a, dtype&#x3D;tf.int32)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>tf.cast(aa, dtype=tf.float_32)</code>方法：转换tensor数据的数据类型</li>
</ul>
<h2 id="tensorflow数据所在设备"><a class="markdownIt-Anchor" href="#tensorflow数据所在设备"></a> tensorflow数据所在设备</h2>
<ul>
<li><code>aa.device</code>：返回数据所在设备</li>
<li><code>tf.device()</code>：默认在gpu上</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">with tf.device(&quot;cpu&quot;):</span><br><span class="line">    a &#x3D; tf.constant(1)</span><br><span class="line"></span><br><span class="line">with tf.device(&quot;gpu&quot;):</span><br><span class="line">    b &#x3D; tf.constant([1])</span><br></pre></td></tr></table></figure>
<p>cpu/gpu只能使用对应的操作，无法跨硬件进行数据交互</p>
<ul>
<li>转换</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aa &#x3D; a.gpu()</span><br><span class="line">bb &#x3D; b.cpu()</span><br></pre></td></tr></table></figure>
<h3 id="数据维度"><a class="markdownIt-Anchor" href="#数据维度"></a> 数据维度</h3>
<ul>
<li><code>a.ndim</code>：返回常数值</li>
<li><code>tf.rank(a)</code>：返回tensor类型的数值</li>
</ul>
<h3 id="variable"><a class="markdownIt-Anchor" href="#variable"></a> Variable</h3>
<p>对于线性代数<code>y=wx+b</code>，w与b除了是tensor型数据外，还需要被求导，即更新。可以设置w和b为<code>variable</code>型数据。设置Variable属性之后，就自动提供了梯度下降的功能。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; tf.range(5)</span><br><span class="line">b &#x3D; tf.Variable(a)</span><br><span class="line">b.trainable &#x3D; True</span><br></pre></td></tr></table></figure>
<h3 id="numpy方法"><a class="markdownIt-Anchor" href="#numpy方法"></a> numpy方法</h3>
<p>tensor数据的<code>numpy方法</code>可以直接返回其numpy数据<br />
对于标量，可以直接使用<code>int(a)</code>或者<code>float(a)</code></p>
<h2 id="数据运算"><a class="markdownIt-Anchor" href="#数据运算"></a> 数据运算</h2>
<ol>
<li>element-wise : <code>+ - * /</code></li>
<li>matrix-wise: <code>@ matmul</code>
<ul>
<li>[b,3,4]@[b,4,5] = [b,3,5] 多维度的操作</li>
</ul>
</li>
<li>dim-wise: <code>reduce_mean/max/min</code></li>
<li>求对数：<code>tf.math.log(a)</code> 以e为底数<br />
<code>tf.math.log(a)</code>/<code>tf.math.log(2)</code> 以2为底数</li>
<li>e的幂值：<code>tf.exp</code></li>
<li>多次方：<code>tf.pow(b,d)</code>/<code>b**d</code></li>
<li>开方：<code>tf.sqrt(a)</code></li>
<li>矩阵点乘：<code>a@b</code>/<code>tf.matmul(a,b)</code><br />
这个操作是可以并行处理的，比如[b,2,3]@[b,3,5] = [b,2,5]<br />
同时可以支持broadcast处理：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a.shape # [4,2,3]</span><br><span class="line">b.shape # [3,5]</span><br><span class="line">bb &#x3D; tf.broadcast_to(b, [4,3,5])</span><br><span class="line">a@bb    # [4,2,5]</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title>tensorflow维度变换</title>
    <url>/2021/03/23/tensorflow/Tensorflow%E7%BB%B4%E5%BA%A6%E5%8F%98%E6%8D%A2/</url>
    <content><![CDATA[<ul>
<li>图片的内存保存顺序：</li>
</ul>
<ol>
<li>[ batch, height, width ] 更加关注细节</li>
<li>[ batch, height * width ] 作为一个整体去使用</li>
<li>[ batch, 2, height/2 * width ] 将图片看作上下两个部分</li>
<li>[ batch, height, width, channel ] 增加一个通道表示</li>
</ol>
<ul>
<li>修改维度</li>
</ul>
<ol>
<li>小变大</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; tf.random.normal([4, 28, 28, 3])</span><br><span class="line">tf.reshape(a, [4, 784, 3])</span><br></pre></td></tr></table></figure>
<p>即将中间的28*28改成了一个整体784，失去了二维的信息<br />
注意，上面的784可以写成 <strong>-1</strong>，系统会自动计算出来。某一个tensor只能有一个-1来保证和确定。<br />
2. 大变小<br />
在恢复时，我们需要小的尺寸信息。比如784在变小时，需要知道height=width=28</p>
<ul>
<li>转置<br />
<code>tf.transpose()</code>函数，不会修改原来的矩阵，会返回一个新的转置矩阵。参数perm表示该位置放原先的哪一个维度。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; tf.random.normal( [4,3,2,1] )</span><br><span class="line">tf.transpose(a).shape  &#x2F;&#x2F; [1,2,3,4]</span><br><span class="line">tf.transpose(a, perm&#x3D;[0,1,3,2]).shape  &#x2F;&#x2F; [4,3,1,2]</span><br></pre></td></tr></table></figure>
<ul>
<li>展开减少维度</li>
</ul>
<ol>
<li>展开维度：使用<code>expand_dims()</code>函数<br />
在axis参数表示的后面增加维度</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#x3D; tf.random.normal([4,35,8])</span><br><span class="line">tf.expand_dims( a, axis&#x3D;0 ).shape   &#x2F;&#x2F;[1,4,35,8]</span><br><span class="line">tf.expand_dims( a, axis&#x3D;3 ).shape   &#x2F;&#x2F;[4,35,8,1]</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>减少维度：主要用于减少shape=1的维度dim</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tf.squeeze(tf.zeros([1,2,1,1,3])).shape &#x2F;&#x2F;[2,3]</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title>broadcast和tile</title>
    <url>/2021/03/23/tensorflow/broadcasting/</url>
    <content><![CDATA[<ul>
<li>例子<br />
如果tenor A与B的dimension不一致，在进行操作时，我们需要为之添加维度来支持两个tensor的计算操作。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a [ 4 ,  16,  16, 32]</span><br><span class="line">b [(1), (1), (1), 32]</span><br><span class="line">将b扩张来支持数学运算</span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2021/03/23/cWYkCjvm61rtSxV.jpg" alt="" /><br />
<strong>注意</strong>：因为这个操作是默认使用右对齐来操作，所以[4,1]和[1,3]可以进行操作，但是[4]与[1,3]不可以。因为[1,4]与[1,3]无法相加。</p>
<ul>
<li>判断方式：</li>
</ul>
<ol>
<li>均有维度</li>
<li>右对齐</li>
<li>从末尾开始遍历，要么相等，要么有一方为一或者不存在，这时插入和另一方相等的</li>
</ol>
]]></content>
      <tags>
        <tag>tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title>创建Tensor</title>
    <url>/2021/03/23/tensorflow/%E5%88%9B%E5%BB%BATensor/</url>
    <content><![CDATA[<ul>
<li>新建Tensor数组</li>
</ul>
<ol>
<li>numpy数据直接得到：<code>tf.convert_to_numpy( np.ones([2,3]) )</code></li>
<li>从list得到： <code>tf.convert_to_numpy( [2,3] )</code></li>
<li>格式化新建数组</li>
</ol>
<ul>
<li><code>tf.zeros( [2,2] )</code>，注意参数为shape</li>
<li><code>tf.zeros_like( a )</code>，参数为一个数组，根据数组a的尺寸建立<br />
上<strong>面的<code>zeros</code>可以换成<code>ones</code></strong></li>
<li><code>tf.fill( [2,2],0 )</code>，参数为尺寸和填充的元素值</li>
</ul>
<ol start="4">
<li>随机新建数组</li>
</ol>
<ul>
<li>正态分布：<code>tf.random.normal( [2,2], mean=1, stddev=1 )</code>，参数为尺寸，均值，标准差。均值标准差可以不写。</li>
<li>截断正态分布：<code>tf.random.truncated_normal( [2,2], mean=1, stddev=1 )</code><br />
范围为 <strong>[ mean - 2 * stddev, mean + 2 * stddev ]</strong></li>
</ul>
<ol start="5">
<li>均匀分布：<code>tf.random.uniform( [2,2], minval=0, maxval=1 )</code>，参数为尺寸，和值域。</li>
</ol>
<ul>
<li>随机打散功能<br />
假设有10张图片，需要随机分布其索引号。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">idx &#x3D; tf.random(10)</span><br><span class="line">idx &#x3D; tf.random.shuffle( idx )</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title>NLP术语</title>
    <url>/2021/04/16/machine%20learninng/NLP/NLP%E6%9C%AF%E8%AF%AD/</url>
    <content><![CDATA[<h2 id="一些术语"><a class="markdownIt-Anchor" href="#一些术语"></a> 一些术语</h2>
<p>BS ｜ This ｜ is ｜ a ｜ simple ｜ sentence ｜ ES</p>
<ul>
<li>Words：单词</li>
<li>Words Segmentation：分词</li>
<li>Morphology：同一词的不同形式</li>
<li>Part-of-Speech Tagging：词性标注，将词根据句法分析标注为各自的词性</li>
<li>Syntax：句法分析</li>
</ul>
<p><img src="https://i.loli.net/2021/04/16/VB5GTeRuK7Jg8LF.jpg" alt="" /></p>
<ul>
<li>
<p>Semantics：语意</p>
</li>
<li>
<p>Vector Space：向量空间</p>
</li>
<li>
<p>Norm of Vector：向量的模。有不同方式的定义方法：L-0 to L-infinity Norms</p>
</li>
<li>
<p>Matrix：矩阵，向量的向量。</p>
</li>
<li>
<p>Tensor：张量</p>
</li>
<li>
<p>Determinant：行列式。可以看作向量所夹的平面/空间的量。</p>
</li>
<li>
<p>Eigenvector and Eigenvalue：特征向量和特征值</p>
</li>
<li>
<p>Convex Set and Function：凸集合和凸函数</p>
</li>
</ul>
<h3 id="结构化"><a class="markdownIt-Anchor" href="#结构化"></a> 结构化</h3>
<p>信息具有明确的结构关系</p>
<ul>
<li>编程语言是结构化的</li>
<li>自然语言是非结构化的</li>
</ul>
<h3 id="歧义性"><a class="markdownIt-Anchor" href="#歧义性"></a> 歧义性</h3>
<p>同一词汇根据语境不同而表现为特定的语义</p>
<h2 id="自然语言的任务层次"><a class="markdownIt-Anchor" href="#自然语言的任务层次"></a> 自然语言的任务层次</h2>
<h3 id="词法分析"><a class="markdownIt-Anchor" href="#词法分析"></a> 词法分析</h3>
<p>词法分析时后续高级任务的基础，包含三个任务：</p>
<ul>
<li>中文分词：将文本分隔为有意义的词语</li>
<li>词性标注：确定每个词语的类别和浅层的其以消除</li>
<li>命名实体识别：识别专有名词</li>
</ul>
<h3 id="信息抽取"><a class="markdownIt-Anchor" href="#信息抽取"></a> 信息抽取</h3>
<p>词法分析后，我们得到了一个有意义的单词列表，并且每个单词附带了自己的词性和其他标签。<br />
根据杂乱的单词标签，我们可以利用统计学的知识抽取出有用的信息。</p>
<h3 id="文本分类和文本聚类"><a class="markdownIt-Anchor" href="#文本分类和文本聚类"></a> 文本分类和文本聚类</h3>
<ul>
<li>文本分类：整理称为同一类别</li>
<li>文本聚类：不关系具体的类别，只是将相似的文本归档在一起</li>
</ul>
<h3 id="句法分析"><a class="markdownIt-Anchor" href="#句法分析"></a> 句法分析</h3>
<p>词法分析只能得到零散的词回信息。句法分析可以得到句子的主谓宾结构，从而得到这句话的意图。<br />
经常用于搜索引擎，问答系统和机器翻译。</p>
<h3 id="语义分析和篇章分析"><a class="markdownIt-Anchor" href="#语义分析和篇章分析"></a> 语义分析和篇章分析</h3>
<p>和语法分析相对，句法分析偏重于分析语义，主要包含三个部分：</p>
<ul>
<li>词义消歧：确定一个词在具体语境中的含义</li>
<li>语义角色标注：标注句子中的谓语与其他成分的关系</li>
<li>语义依存分析：分析词语之间的语义关系</li>
</ul>
<h3 id="其他的整合性质高级任务"><a class="markdownIt-Anchor" href="#其他的整合性质高级任务"></a> 其他的整合性质高级任务</h3>
<ul>
<li>自动问答</li>
<li>自动摘要：为一篇长文档生成简短的摘要</li>
<li>机器翻译：讲一句话从一种语言翻译到另一种语言</li>
</ul>
<h3 id="语料库"><a class="markdownIt-Anchor" href="#语料库"></a> 语料库</h3>
<ul>
<li>中文分词语料库</li>
<li>词性标注语料库</li>
<li>命名实体识别语料库</li>
<li>句法分析语料库<br />
汉语中常用的句法分析语料库有CTB（Chinese Tree-bank 中文树库）</li>
<li>文本分类语料库</li>
</ul>
<h2 id="开源工具"><a class="markdownIt-Anchor" href="#开源工具"></a> 开源工具</h2>
<p>HanLP</p>
<h1 id="这个bug我一定要tmd的记下来"><a class="markdownIt-Anchor" href="#这个bug我一定要tmd的记下来"></a> 这个bug我一定要tmd的记下来：</h1>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">File &quot;&#x2F;Users&#x2F;liuyilin&#x2F;Library&#x2F;Python&#x2F;3.7&#x2F;lib&#x2F;python&#x2F;site-packages&#x2F;jpype&#x2F;_core.py&quot;, line 224, in startJVM</span><br><span class="line">    ignoreUnrecognized, convertStrings, interrupt)</span><br><span class="line">FileNotFoundError: [Errno 2] JVM DLL not found:</span><br></pre></td></tr></table></figure>
<p>旧版本解决方案：<a href="https://blog.bbzhh.com/index.php/archives/74.html">https://blog.bbzhh.com/index.php/archives/74.html</a><br />
但是对我不适用</p>
<ol>
<li>方法一：原本vm文件夹下面有两个jdk，删除一个后成功。</li>
<li>方法二：core文件下看到有选择java路径</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">_jpype.startup(jvmpath, tuple(args),</span><br><span class="line">                ignoreUnrecognized, convertStrings, interrupt)</span><br><span class="line">initializeResources()</span><br></pre></td></tr></table></figure>
<p>累了，直接暴力赋值了：直接在上方插入jvmpath地址。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">    # print(&quot;jvmpath: &quot;+jvmpath)</span><br><span class="line">    jvmpath&#x3D;&quot;&#x2F;Library&#x2F;Java&#x2F;JavaVirtualMachines&#x2F;jdk-15.0.1.jdk&#x2F;Contents&#x2F;MacOS&#x2F;libjli.dylib&quot;</span><br><span class="line">    _jpype.startup(jvmpath, tuple(args),</span><br><span class="line">                    ignoreUnrecognized, convertStrings, interrupt)</span><br><span class="line">    initializeResources()</span><br></pre></td></tr></table></figure>
<p>文件名<code>/Library/Java/JavaVirtualMachines/jdk-15.0.1.jdk/Contents/MacOS/libjli.dylib</code>可能windows的dll文件到mac下变成了dylib文件了。</p>
]]></content>
      <tags>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>字典树数据结构</title>
    <url>/2021/04/22/machine%20learninng/NLP/%E5%AD%97%E5%85%B8%E6%A0%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="匹配算法的数据结构-字典树前缀树"><a class="markdownIt-Anchor" href="#匹配算法的数据结构-字典树前缀树"></a> 匹配算法的数据结构 – 字典树/前缀树</h1>
<p>匹配算法的操作需要不断判断字符串是否在词典中，如果使用一般的集合TreeMap的话，复杂度为O(log n)，这里我们引用一种新的数据结构：字典树。<br />
字典树就是典型的前缀树：前缀相同的单词一定通过同一节点。</p>
<ul>
<li>一些定义：<br />
<strong>边</strong>代表字符<br />
<strong>字符集合</strong>定义了所有边上可能出现的字符。<br />
<strong>节点</strong>则标记是否为词尾，只是为了方便描述而加上的。<br />
如果从根可以走到<strong>终点节点</strong>，则这一条<strong>路径</strong>的所有边构成一个单词。</li>
<li>一些操作：增删改查</li>
<li>如果“自然”不存在于前缀树中，则所有以“自然”开头的单词都不存在于前缀树中，所以我们可以提前终止扫描。</li>
</ul>
<h1 id="基本数据结构"><a class="markdownIt-Anchor" href="#基本数据结构"></a> 基本数据结构</h1>
<h2 id="节点-node"><a class="markdownIt-Anchor" href="#节点-node"></a> 节点 Node</h2>
<p>在python中，是一个继承object的类，名为Node。</p>
<ul>
<li>属性：1. children字典，键表示边，值表示节点标志。  2. value值，表示当前的节点标志，即<strong>查询到的前缀</strong>。</li>
<li>方法：add_child，输入边上字符char，节点状态value，和标签overwrite判断是否覆盖。</li>
</ul>
<p>伪代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">add_child(char, value, overwrite)：</span><br><span class="line">    child &#x3D; 判断当前节点是否有待插入节点</span><br><span class="line">    如果没有待插入节：</span><br><span class="line">        child &#x3D; 新建 Node(value)</span><br><span class="line">        插入到self中的children字典中去 children[输入边字符] &#x3D; 节点标志</span><br><span class="line">    else：  &#x2F;&#x2F;（如果有这个节点，child不是none）</span><br><span class="line">        如果overwrite标志为true：</span><br><span class="line">            重写children中的value值</span><br><span class="line">    return child</span><br></pre></td></tr></table></figure>
<p>python代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># char表示子节点键，表示当前的字符串，value表示字节节点的值</span><br><span class="line"># 返回插入的child（Node类）</span><br><span class="line">def _add_child(self, char, value, overwrite&#x3D;False):</span><br><span class="line">    # 判断是否有该节点</span><br><span class="line">    child &#x3D; self._children.get(char)</span><br><span class="line">    # 未找到该子节点返回none</span><br><span class="line">    if child is None:</span><br><span class="line">        # 新建节点并且添加到子节点列表</span><br><span class="line">        child &#x3D; Node(value)</span><br><span class="line">        self._children[char] &#x3D; child</span><br><span class="line">    # 如果允许重写</span><br><span class="line">    elif overwrite:</span><br><span class="line">        child._value &#x3D; value</span><br><span class="line">    return child</span><br></pre></td></tr></table></figure>
<h2 id="字典树-trie"><a class="markdownIt-Anchor" href="#字典树-trie"></a> 字典树 Trie</h2>
<p>字典树继承了Node类，同时加入了contains，getitem(key)，setitem(方法)。<br />
- 查询，如果父节点有满足条件的边，则转移到子节点；否则失败查询不到。<br />
- 增加，本质也是查询，不过在状态转移失败时加入子节点。</p>
<ul>
<li>代码：这里使用了python的魔术方法，具体详见 <a href="/2021/04/22/python%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/" title="python魔术方法">python魔术方法</a> 。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Trie(Node):</span><br><span class="line">    def __init__(self) -&gt; None:</span><br><span class="line">        super().__init__(None)</span><br><span class="line"></span><br><span class="line">    def __contains__(self, key):</span><br><span class="line">        return self[key] is not None</span><br><span class="line"></span><br><span class="line">    def __getitem__(self, key):</span><br><span class="line">        state &#x3D; self</span><br><span class="line">        # key是一个字符串列表，不断更新state</span><br><span class="line">        for char in key:</span><br><span class="line">            print(&quot;__getitem__：&quot;, char)</span><br><span class="line">            state &#x3D; state._children.get(char)</span><br><span class="line">            if state is None:</span><br><span class="line">                return None</span><br><span class="line">        # 返回的是value值</span><br><span class="line">        return state._value</span><br><span class="line"></span><br><span class="line">    def __setitem__(self, key, value):</span><br><span class="line">        state &#x3D; self</span><br><span class="line">        # 先查询</span><br><span class="line">        for i, char in enumerate(key):</span><br><span class="line">            if i &lt; len(key) - 1:</span><br><span class="line">                # 不断返回子节点，中途出现没有则直接添加</span><br><span class="line">                state &#x3D; state._add_child(char, None, False)</span><br><span class="line">            # 找到最后的节点，只有叶节点才允许覆盖</span><br><span class="line">            else:</span><br><span class="line">                state &#x3D; state._add_child(char, value, True)</span><br></pre></td></tr></table></figure>
<p>value是我们手动赋给他们的值<br />
一般只有单词结尾的字符才有value<br />
一般是一个标注，表示这个单词的一些属性</p>
<h2 id="散列函数"><a class="markdownIt-Anchor" href="#散列函数"></a> 散列函数</h2>
<ul>
<li>散列的概念属于查找，它不以关键字的比较为基本操作，采用直接寻址技术。</li>
<li>hash函数就是把任意长的输入字符串变化成整数的一种函数。</li>
<li>相同对象，散列值必须相同。</li>
<li>完美散列：对象不同，散列值不同。</li>
</ul>
<h3 id="python中的散列"><a class="markdownIt-Anchor" href="#python中的散列"></a> python中的散列</h3>
<p>python中没有char类型，词散列函数的结果是str类型的散列函数，64位系统返回的是64位的整数。<br />
但是Unicode字符只有136690个，哈希值过于分散。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ python3</span><br><span class="line">&gt;&gt;&gt; hash(&#39;池&#39;) - hash(&#39;江&#39;)</span><br><span class="line">-18199997415614011790</span><br></pre></td></tr></table></figure>
<h3 id="java中的散列"><a class="markdownIt-Anchor" href="#java中的散列"></a> java中的散列</h3>
<p>java中支持char数据类型，并且编码为UTF-16，即每个字符映射为16位整数，恰好是完美散列。</p>
<h1 id="字典树的其他应用"><a class="markdownIt-Anchor" href="#字典树的其他应用"></a> 字典树的其他应用</h1>
<h2 id="停用词过滤"><a class="markdownIt-Anchor" href="#停用词过滤"></a> 停用词过滤</h2>
<p>HanLP提供了一个小巧的停用词词典，位于data/dictionary/stopwords.txt，收录了常见的中英文无意义词汇，每行一个词语。</p>
<ul>
<li>代码示例：</li>
</ul>
<ol>
<li>得到停用词字典树</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 加载字典到DAT</span><br><span class="line"># 从路径加载</span><br><span class="line"># 返回DAT类型的停用词字典树</span><br><span class="line">def load_from_file(path):</span><br><span class="line">    map &#x3D; JClass(&#39;java.util.TreeMap&#39;)()</span><br><span class="line">    with open(path) as src:</span><br><span class="line">        for word in src:</span><br><span class="line">            word &#x3D; word.strip()</span><br><span class="line">            map[word] &#x3D; word</span><br><span class="line">    return JClass(&#39;com.hankcs.hanlp.collection.trie.DoubleArrayTrie&#39;)(map)</span><br><span class="line"></span><br><span class="line"># 从单词列表加载</span><br><span class="line">def load_from_words(*words):</span><br><span class="line">    map &#x3D; JClass(&#39;java.util.TreeMao&#39;)()</span><br><span class="line">    for word in words:</span><br><span class="line">        map[word] &#x3D; word</span><br><span class="line">    return JClass(&#39;com.hankcs.hanlp.collection.trie.DoubleArrayTrie&#39;)(map)</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>根据停用词字典树过滤分词数组：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def remove_stop_termlist(termlist, trie):</span><br><span class="line">    return [term.word for term in termlist if not trie.containsKey(term.word)]</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>测试</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 加载字典树</span><br><span class="line">trie &#x3D; load_from_file(HanLP.Config.CoreStopWordDictionaryPath)</span><br><span class="line">HanLP.Config.ShowTermNature &#x3D; False</span><br><span class="line">text &#x3D; &quot;这个东西也就那个样子吧比较一般了&quot;</span><br><span class="line"></span><br><span class="line"># 分词</span><br><span class="line">segment &#x3D; DoubleArrayTrieSegment()</span><br><span class="line">termList &#x3D; segment.seg(text)</span><br><span class="line">print(&quot;分词结果：&quot;, termList)</span><br><span class="line"></span><br><span class="line"># 删除停用词</span><br><span class="line">print(&quot;去除停用（file）：&quot;, remove_stop_termlist(termList, trie))</span><br><span class="line"></span><br><span class="line"># 删除自定义单词</span><br><span class="line">trie &#x3D; load_from_words(&quot;比较&quot;, &#39;也&#39;, &#39;就&#39;, &#39;吧&#39;, &#39;了&#39;, &#39;这个&#39;, &#39;那个&#39;)</span><br><span class="line">print(&quot;去除停用（words)：&quot;, remove_stop_termlist(termList, trie))</span><br></pre></td></tr></table></figure>
<h2 id="停用词替换操作"><a class="markdownIt-Anchor" href="#停用词替换操作"></a> 停用词替换操作</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from jpype import JString</span><br><span class="line"></span><br><span class="line">def replace_stropwords_text(text, replacement, trie):</span><br><span class="line">    searcher &#x3D; trie.getLongestSearcher(JString(text), 0)</span><br><span class="line">    offset &#x3D; 0</span><br><span class="line">    result &#x3D; &#39;&#39;</span><br><span class="line">    while searcher.next():</span><br><span class="line">        begin &#x3D; searcher.begin</span><br><span class="line">        end &#x3D; begin + searcher.length</span><br><span class="line">        if begin &gt; offset:</span><br><span class="line">            result +&#x3D; text[offset: begin]</span><br><span class="line">        result +&#x3D; replacement</span><br><span class="line">        offset &#x3D; end</span><br><span class="line">    if offset &lt; len(text):</span><br><span class="line">        result +&#x3D; text[offset:]</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    text &#x3D; &quot;停用词的意义相对而言无关紧要的词吧&quot;</span><br><span class="line">    trie &#x3D; load_from_words(&quot;的&quot;, &quot;相对而言&quot;, &quot;吧&quot;)</span><br><span class="line">    print(&quot;不分词去掉停用词:&quot;, replace_stropwords_text(text, &quot;**&quot;, trie))</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; 不分词去掉停用词: 停用词**意义**无关紧要**词**</span><br></pre></td></tr></table></figure>
<h2 id="繁简转换"><a class="markdownIt-Anchor" href="#繁简转换"></a> 繁简转换</h2>
<p>P89</p>
]]></content>
      <tags>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>分词准确率评测</title>
    <url>/2021/04/23/machine%20learninng/NLP/%E5%88%86%E8%AF%8D%E5%87%86%E7%A1%AE%E7%8E%87%E8%AF%84%E6%B5%8B/</url>
    <content><![CDATA[<p>准确率(accuray)是用来衡量一个系统准确程度(accurate)的值。<br />
NLP分词任务重，使用 <strong>词语级别精确度，召回率和F<sub>1</sub></strong> 来衡量分词器的准确程度。他们都依赖于混淆矩阵：</p>
<h2 id="混淆矩阵-confusion-matrix"><a class="markdownIt-Anchor" href="#混淆矩阵-confusion-matrix"></a> 混淆矩阵 confusion matrix</h2>
<p><img src="https://i.loli.net/2021/04/23/pjo9wtrKsPlZG5I.png" alt="" /></p>
<ul>
<li>四种组合
<ul>
<li>TP (true positive 真阳)：预测和答案都是P</li>
<li>FP (false positive 假阳)：预测为P，答案为N</li>
<li>TN (true negative 真阴)：预测为N，答案为N</li>
<li>FN (false negative 假阴)：预测为N，答案为P</li>
</ul>
</li>
</ul>
<h3 id="精确率-precision"><a class="markdownIt-Anchor" href="#精确率-precision"></a> 精确率 precision</h3>
<p>简称p值，分母为预测阳性的数量<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P = \frac{TP}{TP + FP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.275662em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<h3 id="召回率-recall"><a class="markdownIt-Anchor" href="#召回率-recall"></a> 召回率 Recall</h3>
<p>简称R值，指正样本被找出来的概率，分母为答案阳性的数量<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">R = \frac{TP}{TP + FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.275662em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<h3 id="fsub1sub"><a class="markdownIt-Anchor" href="#fsub1sub"></a> F<sub>1</sub></h3>
<p>一般精确率和召回率很平衡，所以引入一个综合性质的指标.<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mn>2</mn><mo>∗</mo><mi>P</mi><mo>∗</mo><mi>R</mi></mrow><mrow><mi>P</mi><mo>+</mo><mi>R</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F_1 = \frac{2 * P * R}{P + R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.275662em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<h2 id="中文分词中的prf_1"><a class="markdownIt-Anchor" href="#中文分词中的prf_1"></a> 中文分词中的P,R,F_1</h2>
<ul>
<li>前面的情况针对答案等于预测数量的情况，因而针对的是分类问题。但是中午分词针对的是一个分块问题，所以我们需要将分块问题转换为分类问题。</li>
<li>针对长为n的字符串，分词的结果往往是一系列单词，每个单词可以根据其索引和长度，记为区间[i, j]。</li>
<li>标准答案的所有区间构成了集合A作为正类，分词结果的所有区间构成集合B。则分词正确的集合为A与B的交集。</li>
<li>准确率：结果中正确的数量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∣</mi><mi>A</mi><mo>∩</mo><mi>B</mi><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>B</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{|A \cap B|}{| B |}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">A</span><span class="mbin mtight">∩</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br />
召回率：答案被找出来的数量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∣</mi><mi>A</mi><mo>∩</mo><mi>B</mi><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>A</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{|A \cap B|}{| A|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">A</span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">A</span><span class="mbin mtight">∩</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
<li>当测试文本不止一个时，我们通常累加，然后计算一次P/R。</li>
</ul>
<h2 id="oov-和-iv"><a class="markdownIt-Anchor" href="#oov-和-iv"></a> OOV 和 IV</h2>
<p>OOV指“未登录词”，或者称为“新词”<br />
IV指登陆词</p>
]]></content>
      <tags>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>词典分词</title>
    <url>/2021/04/21/machine%20learninng/NLP/%E8%AF%8D%E5%85%B8%E5%88%86%E8%AF%8D/</url>
    <content><![CDATA[<h2 id="词典设置"><a class="markdownIt-Anchor" href="#词典设置"></a> 词典设置</h2>
<p>HanLP自带一个迷你核心词典，纯文本格式。每列分别为单词，词性，词频。如果遇到英文单词本身含有空格，则使用英文逗号’,'分隔的<code>.csv</code>格式。</p>
<h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3>
<ul>
<li><code>from pyhanlp import *</code>：首先导入库</li>
<li>更新字典：库中的字典路径为Hanlp.Config.CoreDictionaryPath，使用<code>Hanlp.ConfigDictionaryPath.replace('.txt', '.mini.txt')</code>，将自带mini字典替换。</li>
<li>使用<code>IOUil.loadDictionary([path])</code>设置默认字典，该方法支持将多个文件读入同一个字典中，因此需要传入一个list。</li>
<li>最后因为只考虑键不考虑字典全部，所以转换成set对象。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from pyhanlp import *</span><br><span class="line"></span><br><span class="line">def load_dictionary():</span><br><span class="line">    # 取得IOUtil工具类</span><br><span class="line">    IOUtil &#x3D; JClass(&#39;com.hankcs.hanlp.corpus.io.IOUtil&#39;)</span><br><span class="line">    # 得到词典路径：HanLP.Config.CoreDictionaryPath</span><br><span class="line">    # 加载词典</span><br><span class="line">    path &#x3D; HanLP.Config.CoreDictionaryPath.replace(&#39;.txt&#39;, &#39;.mini.txt&#39;)</span><br><span class="line">    dic &#x3D; IOUtil.loadDictionary([path])</span><br><span class="line">    return set(dic.keySet())</span><br></pre></td></tr></table></figure>
<p>之后想得到设置的字典，使用<code>dic = load_dictionary()</code>即可</p>
<h2 id="完全切分"><a class="markdownIt-Anchor" href="#完全切分"></a> 完全切分</h2>
<p>在一段文本中，找到字典匹配的所有单词，也称分词。<br />
完全切分会找到所有的单词（“北京大学”会被分为“北京大学”，“北”，“北京”，“大”，“学”，“大学”）。<br />
而我们只希望得到一整个单词，不需要这么零碎。所以，考虑越<strong>长优先级越高</strong>。</p>
<h3 id="匹配方式"><a class="markdownIt-Anchor" href="#匹配方式"></a> 匹配方式</h3>
<p>分类：<strong>正向最长匹配</strong>，<strong>逆向最长匹配</strong>，<strong>双向最长匹配</strong></p>
<h4 id="双向最长匹配"><a class="markdownIt-Anchor" href="#双向最长匹配"></a> 双向最长匹配</h4>
<p>正向匹配，和逆向匹配都会出现切分的不到位的情况。取长补短：</p>
<ol>
<li>同时执行两种匹配方式，词数不同则返回词更少的一个。</li>
<li>词数相同则返回单字更少的一个。</li>
<li>单字数量相同则返回逆向匹配的结果。</li>
</ol>
<h3 id="代码实现-2"><a class="markdownIt-Anchor" href="#代码实现-2"></a> 代码实现</h3>
<ul>
<li>正向匹配</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def forward_segment(text, dic):</span><br><span class="line">    word_list &#x3D; []</span><br><span class="line">    i &#x3D; 0</span><br><span class="line">    while i &lt; len(text):</span><br><span class="line">        longest_word &#x3D; text[i]</span><br><span class="line">        for j in range(i + 1, len(text) + 1):</span><br><span class="line">            word &#x3D; text[i: j]</span><br><span class="line">            if word in dic:</span><br><span class="line">                if len(word) &gt; len(longest_word):</span><br><span class="line">                    longest_word &#x3D; word</span><br><span class="line">        word_list.append(longest_word)</span><br><span class="line">        i +&#x3D; len(longest_word)</span><br><span class="line">    return word_list</span><br><span class="line"></span><br><span class="line"># test</span><br><span class="line">dic &#x3D; load_dictionary()</span><br><span class="line">print(forward_segment(&quot;欢迎来到北京大学参观&quot;, dic))</span><br></pre></td></tr></table></figure>
<ul>
<li>逆向匹配</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def backgroud_segment(text, dic):</span><br><span class="line">    word_list &#x3D; []</span><br><span class="line">    i &#x3D; len(text)-1</span><br><span class="line">    while i &gt;&#x3D; 0:</span><br><span class="line">        longest_word &#x3D; text[i]</span><br><span class="line">        for j in range(0, i):</span><br><span class="line">            word &#x3D; text[j: i+1]</span><br><span class="line">            # print(word)</span><br><span class="line">            if word in dic:</span><br><span class="line">                if len(word) &gt; len(longest_word):</span><br><span class="line">                    longest_word &#x3D; word</span><br><span class="line">                    break</span><br><span class="line">        word_list.insert(0, longest_word)</span><br><span class="line">        i -&#x3D; len(longest_word)</span><br><span class="line">    return word_list</span><br></pre></td></tr></table></figure>
<ul>
<li>双向匹配</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 双向最长匹配 - 统计结果列表的单字个数</span><br><span class="line">def count_single_char(word_list: list):</span><br><span class="line">    return sum(1 for word in word_list if len(word) &#x3D;&#x3D; 1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 双向最长匹配</span><br><span class="line">def bidirectional_segment(text, dic):</span><br><span class="line">    f &#x3D; forward_segment(text, dic)</span><br><span class="line">    b &#x3D; backgroud_segment(text, dic)</span><br><span class="line">    if len(f) &lt; len(b):</span><br><span class="line">        return f</span><br><span class="line">    elif len(f) &lt; len(b):</span><br><span class="line">        return b</span><br><span class="line">    elif count_single_char(f) &lt; count_single_char(b):</span><br><span class="line">        return f</span><br><span class="line">    else:</span><br><span class="line">        return b</span><br></pre></td></tr></table></figure>
<h2 id="hanlp的词典分词实现"><a class="markdownIt-Anchor" href="#hanlp的词典分词实现"></a> HanLP的词典分词实现</h2>
<ul>
<li>分词的方式有两种：DAT和ACDAT。前者适用于单词比较短的时候，而后者适用于词语比较长的时候。</li>
<li>接口：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Segment</span><br><span class="line">    |</span><br><span class="line">    |</span><br><span class="line">DictionaryBasedSegment ----- DoubleArrayTrieSegment</span><br><span class="line">                        |</span><br><span class="line">                        |--- AhoCorasickDoubleArrayTrieSegment</span><br></pre></td></tr></table></figure>
<h3 id="dat代码示例"><a class="markdownIt-Anchor" href="#dat代码示例"></a> DAT代码示例</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HanLP.Config.ShowTermNature &#x3D; False</span><br><span class="line">segment &#x3D; DoubleArrayTrieSegment()</span><br><span class="line">print(segment.seg(&quot;江苏徐州云龙湖110号真是漂亮，云龙山也nice！&quot;))</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; [江苏, 徐州, 云龙湖, 1, 1, 0, 号, 真是, 漂亮, ，, 云龙, 山, 也, n, i, c, e, ！]</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>这里第一次运行出现了错误，网上查看是因为包内缺失DoubleArrayTrieSegment，则直接在preference中删除pyhanl包，然后重新导入</strong></li>
<li>结果看到数字和单词都被分开了，而且标点也是，这不利于我们分词。</li>
<li>使用<code>segment.enablePartOfSpeechTagging(True)</code>来激活数字和英文识别</li>
<li>segment.seg()返回的是一个Term列表，我们可以调用其<strong>word</strong>和<strong>nature</strong>属性分别获得其单词和词性。</li>
</ul>
<h3 id="acdat代码示例"><a class="markdownIt-Anchor" href="#acdat代码示例"></a> ACDAT代码示例</h3>
<p><code>segment = JClass('com.hankcs.hanlp.seg.Other.AhoCorasickDoubleArrayTrieSegment')()</code></p>
]]></content>
      <tags>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>1-3监督学习和无监督学习</title>
    <url>/2021/02/04/machine%20learninng/%E5%90%B4%E6%81%A9%E8%BE%BE/1-3%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="监督学习-supervised-learning"><a class="markdownIt-Anchor" href="#监督学习-supervised-learning"></a> 监督学习 Supervised Learning</h1>
<p>先使用数据集进行训练，其中包含了输入和正确输出。然后将其应用于预测样本。<br />
有两种问题：</p>
<ul>
<li>regression problem 回归问题：预测线性的连续输出。eg. 房子价格</li>
<li>classification problem 分类问题：预测离散输出。eg. 是否有肿瘤</li>
</ul>
<h1 id="无监督学习-unsupervised-learning"><a class="markdownIt-Anchor" href="#无监督学习-unsupervised-learning"></a> 无监督学习 Unsupervised Learning</h1>
<p>仅有一个数据集，不被告知其答案。</p>
<p>Clustering algorithm 聚类算法 – 分类</p>
]]></content>
      <tags>
        <tag>wed</tag>
      </tags>
  </entry>
  <entry>
    <title>linear regression with multiple variables 多元/多变量线性回归</title>
    <url>/2021/02/04/machine%20learninng/%E5%90%B4%E6%81%A9%E8%BE%BE/%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
    <content><![CDATA[<p>学习了单个变量的线性模型之后，现在增加更多的特征。</p>
<h3 id="新的注释"><a class="markdownIt-Anchor" href="#新的注释"></a> 新的注释</h3>
<ul>
<li>n: 特征数量</li>
<li>x<sup>(i)</sup>: 第i个训练实例，为特征矩阵的第i行，是一个向量</li>
<li>x<sup>(i)</sup><sub>j</sub>: 表示特征矩阵第i行的第j个特征</li>
</ul>
<h3 id="假设-hypnosis"><a class="markdownIt-Anchor" href="#假设-hypnosis"></a> 假设 hypnosis</h3>
<p>h<sub>θ</sub>(x) = θ<sub>0</sub>+θ<sub>1</sub>x<sub>1</sub>+…+θ<sub>n</sub>x<sub>n</sub>，在这个假设中，参数是一个n+1维的向量: [θ<sub>0</sub>, θ<sub>1</sub> …θ<sub>n</sub>]，x则为第n行的特征向量。</p>
<p>为了简化假设模型，引入x<sub>0</sub>=1，<br />
则公式简化为h<sub>θ</sub>(x) = θ<sub>0</sub>x<sub>0</sub>+θ<sub>1</sub>x<sub>1</sub>+…+θ<sub>n</sub>x<sub>n</sub>，<br />
此时参数和单个训练实例都是n+1维的向量，二特征矩阵维度维m*(n+1)。公式可以简化为<strong>h<sub>θ</sub>=θ<sup>T</sup>x</strong>，T表示转制。</p>
<h3 id="代价函数-cost-function"><a class="markdownIt-Anchor" href="#代价函数-cost-function"></a> 代价函数 cost function</h3>
<p>与单变量线性回归类似，代价函数是所有建模误差的平方和：<br />
J(θ<sub>0</sub>, θ<sub>1</sub> … θ<sub>n</sub>) = 1/2m * ∑(h<sub>θ</sub>x - y)<sup>2</sup></p>
<h3 id="梯度下降算法-gradient-descent-algorithm"><a class="markdownIt-Anchor" href="#梯度下降算法-gradient-descent-algorithm"></a> 梯度下降算法 gradient descent algorithm</h3>
<p>θ<sub>j</sub> := θ<sub>j</sub> - α*d/dθ<sub>j</sub>*J(θ<sub>0</sub>, θ<sub>1</sub> … θ<sub>n</sub>)<br />
即：θ<sub>j</sub> := θ<sub>j</sub> - α*d/dθ<sub>j</sub>* 1/2m *∑(h<sub>θ</sub>x - y)<sup>2</sup><br />
即：θ<sub>j</sub> := θ<sub>j</sub> - α*d/dθ<sub>j</sub>* 1/2m *∑(θ<sub>0</sub>x<sub>0</sub>+θ<sub>1</sub>x<sub>1</sub>+…+θ<sub>n</sub>x<sub>n</sub>-y)<sup>2</sup><br />
去除求导符号后：θ<sub>j</sub> := θ<sub>j</sub> - α* 1/m *∑( (θ<sub>0</sub>x<sub>0</sub>+θ<sub>1</sub>x<sub>1</sub>+…+θ<sub>n</sub>x<sub>n</sub>-y)*x<sub>j</sub> )</p>
<h3 id="实践注意事项"><a class="markdownIt-Anchor" href="#实践注意事项"></a> 实践注意事项</h3>
<h4 id="特征缩放-feature-scaling"><a class="markdownIt-Anchor" href="#特征缩放-feature-scaling"></a> 特征缩放 feature Scaling</h4>
<p>在计算多维度问题时，我们要保证这些特征都具有相近的尺度，这帮助算法更快地收敛。<br />
解决方法： 尽量将特征的尺度缩放到[-1,1]之间。</p>
<h4 id="学习率-learning-rate"><a class="markdownIt-Anchor" href="#学习率-learning-rate"></a> 学习率 learning rate</h4>
<p>梯度下降算法的迭代收到学习率的影响<br />
如果学习率α过小，则收敛次数会非常高<br />
如果学习率α过大，则可能会越过局部最小值导致无法收敛<br />
常见的学习率有：0.01，0.03，0.1，0.3，1，3，10</p>
<h3 id="多项式回归-polynomial-regression"><a class="markdownIt-Anchor" href="#多项式回归-polynomial-regression"></a> 多项式回归 Polynomial Regression</h3>
<p>线性回归不一定适合所有的数据，有时我们需要曲线来模拟我们的数据，即二次方程或者其他多项式方程。<br />
通常需要先观察数据，然后决定准备尝试怎样的模型。<br />
特征缩放对多项式回归模型很重要。</p>
]]></content>
      <tags>
        <tag>wed</tag>
      </tags>
  </entry>
  <entry>
    <title>正规方程 Normal Equation</title>
    <url>/2021/02/04/machine%20learninng/%E5%90%B4%E6%81%A9%E8%BE%BE/%E6%AD%A3%E8%A7%84%E6%96%B9%E7%A8%8B/</url>
    <content><![CDATA[<p>对于某些线性回归问题，正规方程可能是更好的解决方法。</p>
<h3 id="正规方程-normal-equation"><a class="markdownIt-Anchor" href="#正规方程-normal-equation"></a> 正规方程 Normal Equation</h3>
<ul>
<li>直接求导使假设公式导数为0时，即代价函数最小值时的参数。</li>
<li>方法：假设训练集特征矩阵为X(含x<sub>0</sub>=1)，且训练集结果为向量y则利用正规方程求出向量θ=(X<sup>T</sup>X)<sup>-1</sup>X<sup>T</sup>y。</li>
<li>答案的推导方式如下：<br />
J(θ) = 1/2m * ∑(h<sub>θ</sub>x - y)<sup>2</sup><br />
h<sub>θ</sub>(x) = θ<sub>0</sub>x<sub>0</sub>+θ<sub>1</sub>x<sub>1</sub>+…+θ<sub>n</sub>x<sub>n</sub><br />
转化为向量表达形式：<br />
J(θ) = 1/2 * (Xθ-y)<sup>2</sup><br />
h<sub>θ</sub>(x) = θ<sup>T</sup>X<br />
其中：X为m*n的矩阵(m为样本数量，n为特征数量)，θ为n*1的矩阵，y为m*1的矩阵。<br />
对J(θ)进行变换：<br />
<img src="http://i1.fuimg.com/733078/dbe5fdc00218a958.png" alt="Markdown" /><br />
接下来对J(θ)偏导：<br />
用到求导法则 <strong>dAB/dB = A<sup>T</sup></strong> 和 <strong>dX<sup>T</sup>*AX/dX = 2AX</strong><br />
得到<img src="http://i1.fuimg.com/733078/21528b3ec5615718.png" alt="Markdown" /><br />
令dJ(θ)/dθ = 0, 就会得到结果θ=(X<sup>T</sup>X)<sup>-1</sup>X<sup>T</sup>y</li>
</ul>
<hr />
<ul>
<li>这个方法也称为最小二乘法建立线性回归方程，有篇博客导出答案的方式不同，但是写的很易理解，此处引用: <code>https://blog.csdn.net/u010687164/article/details/86160221</code><br />
截取结果为<img src="http://i1.fuimg.com/733078/cb74a06ca058b911.png" alt="Markdown" /></li>
</ul>
<hr />
<ul>
<li>在 Octave 中，正规方程写作：<code>pinv(X'*X)*X'*y</code></li>
</ul>
<hr />
<ul>
<li>
<p>注意：对于那些不可逆的矩阵（通常是因为特征之间不独立，如同时包含英尺为单位的尺<br />
寸和米为单位的尺寸两个特征，也有可能是特征数量大于训练集的数量），正规方程方法是<br />
不能用的。</p>
</li>
<li>
<p>优势：</p>
<ol>
<li>正规方程无需选择学习率</li>
<li>可以一次性运算得出</li>
</ol>
</li>
<li>
<p>劣势：</p>
<ol>
<li>需要计算(X<sup>T</sup>)<sup>-1</sup>，矩阵逆运算的算法复杂度为O(n<sup>3</sup>)所以不适用于特征数量n比较大的情况</li>
<li>不适合逻辑回归模型</li>
</ol>
</li>
<li>
<p>正规方程的不可逆性质：<br />
其实，奇异矩阵是不可逆的，但在Octave中，pinv()函数仍旧可以计算。</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>wed</tag>
      </tags>
  </entry>
  <entry>
    <title>Neo4j数据库</title>
    <url>/2021/03/02/machine%20learninng/%E5%90%B4%E6%81%A9%E8%BE%BE/%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h6 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h6>
<p>利用图模型，将相关的信息都联系起来。</p>
<h6 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h6>
<p>应用于搜索引擎，医疗领域，金融领域反欺诈，推荐系统。</p>
<h6 id="数据"><a class="markdownIt-Anchor" href="#数据"></a> 数据</h6>
<ul>
<li>分类：
<ol>
<li>结构化数据和非结构化数</li>
<li>图片，视频，音频，语言</li>
</ol>
</li>
<li>来源：多种关系抽取的nlp技术，命名实体识别</li>
</ul>
<h6 id="neo4j来开发知识图谱"><a class="markdownIt-Anchor" href="#neo4j来开发知识图谱"></a> Neo4j来开发知识图谱</h6>
<p>在解压的目录下<code>./bin/neo4j start</code>打开，在浏览器中进入<code>http://localhost:7474/</code><br />
使用完毕，输入<code>./neo4j stop</code>关闭数据库</p>
<h6 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h6>
<p>创建节点：<code>create (名称:标签 &#123;n:n&#125;)</code>，后面为字典形式的数据<br />
关系：<code>-&gt;</code>自动生成箭头，可以在里面放置中括号表示关系内容：<code>-[:包工程&#123;金额:10000&#125;]-&gt;</code><br />
删除：<code>match (n:Person &#123;name:&quot;LYL&quot;, age:20&#125;) delete n</code>，有关系的点需要先删除关系<br />
使用set添加/更改标签<code>match (n:Person) where id(n)=789 set n:好人 return n</code> / <code>match (n:Person) where id(n)=789 set n.战斗力:999 return n</code></p>
]]></content>
      <tags>
        <tag>知识图谱</tag>
      </tags>
  </entry>
  <entry>
    <title>分类问题和逻辑回归</title>
    <url>/2021/02/05/machine%20learninng/%E5%90%B4%E6%81%A9%E8%BE%BE/%E5%88%86%E7%B1%BB%E9%97%AE%E9%A2%98%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</url>
    <content><![CDATA[<h2 id="分类问题-classification-problem"><a class="markdownIt-Anchor" href="#分类问题-classification-problem"></a> 分类问题 Classification problem</h2>
<p>在分类问题中，我们需要预测的变量y是离散的值，比如：</p>
<ol>
<li>判断垃圾邮件</li>
<li>判断诈骗交易</li>
<li>判断病症</li>
</ol>
<p>逻辑回归算法(Logistic Regression)是目前最广泛使用的一种学习算法。</p>
<h2 id="简单介绍"><a class="markdownIt-Anchor" href="#简单介绍"></a> 简单介绍</h2>
<p>首先讨论<strong>二元分类问题</strong>：<br />
我们将<strong>因变量(dependent variable)</strong> 分为 <strong>负向类(negative class)</strong> 和 <strong>正向类(positive class)</strong> 。因变量则为{0-负向类,1-正向类}。<br />
假设公式为h<sub>θ</sub>(x)，它的值域是没有限制的，因此我们需要一个逻辑回归算法，使其值域永远在0-1之间。</p>
<ol>
<li>h<sub>θ</sub>(x) &gt; 0.5 --&gt; y=1</li>
<li>h<sub>θ</sub>(x) &lt; 0.5 --&gt; y=0</li>
</ol>
<p>因此，选择一个合理的假设公式满足上述条件很重要。</p>
<h2 id="假设表示-hypothesis-representation"><a class="markdownIt-Anchor" href="#假设表示-hypothesis-representation"></a> 假设表示 Hypothesis Representation</h2>
<p>根据线性回归模型我们只能预测连续的值，然而对于分类问题，我们需要输出 0 或 1。<br />
逻辑回归的模型为 <strong>h<sub>θ</sub>(x) = g(θ<sup>T</sup>X)</strong></p>
<ol>
<li>X 表示特征向量</li>
<li>g 表示逻辑函数(logistic function)<br />
一个常用的逻辑函数为 Sigmoid function， 形为 g(z) = (1+e<sup>-z</sup>)<sup>-1</sup><br />
<img src="http://i1.fuimg.com/733078/faf75921b0ad1e04.png" alt="Markdown" /></li>
</ol>
<h2 id="判定边界-decision-boundary"><a class="markdownIt-Anchor" href="#判定边界-decision-boundary"></a> 判定边界 Decision Boundary</h2>
<p>根据上面g(z)的图，可知：</p>
<ol>
<li>z=0 : g(z)=0.5</li>
<li>z&gt;0 : g(z)&gt;0.5</li>
<li>z&lt;0 : g(z)&lt;0.5</li>
</ol>
<p>又因为z=θ<sup>T</sup>X：</p>
<ol>
<li>θ<sup>T</sup>X&gt;0 --&gt; g(z)&gt;0 --&gt; y=1</li>
<li>θ<sup>T</sup>X&lt;0 --&gt; g(z)&lt;0 --&gt; y=0</li>
</ol>
<h2 id="代价函数-cost-function"><a class="markdownIt-Anchor" href="#代价函数-cost-function"></a> 代价函数 Cost Function</h2>
<ul>
<li>
<p>在线性函数中，我们定义的代价函数是所有模型误差的平方和。但是在逻辑回归算法，该代价函数的算法得到的图像是一个非凸函数，有许多局部最小值，所以不实用。</p>
</li>
<li>
<p>重新定义逻辑回归的代价函数为：J(θ) = 1/m ∑ Cost( h<sub>θ</sub>(x<sup>i</sup>), y<sup>i</sup>)。<br />
其中，Cost(h<sub>θ</sub>(x<sup>i</sup>), y<sup>i</sup>) =</p>
</li>
</ul>
<ol>
<li>-log(h<sub>θ</sub>(x))       if y=1</li>
<li>-log(1 - h<sub>θ</sub>(x))   if y=0</li>
</ol>
<p><img src="http://i1.fuimg.com/733078/bfb48430f10bc97c.png" alt="Markdown" /></p>
<ul>
<li>这样构建的𝐶𝑜𝑠𝑡(ℎ<sub>𝜃</sub>(𝑥), 𝑦)函数的特点是：</li>
</ul>
<ol>
<li>当实际的 𝑦=1 且 ℎ𝜃(𝑥)也为 1 时误差为 0， 当 𝑦 = 1 但ℎ𝜃(𝑥)不为 1 时误差随着ℎ<sub>𝜃</sub>(𝑥)变小而变大；</li>
<li>当实际的 𝑦=0 且ℎ<sub>𝜃</sub>(𝑥)也为 0 时，代价为 0，当 𝑦 = 0 但ℎ<sub>𝜃</sub>(𝑥)不为 0 时误差随着 ℎ<sub>𝜃</sub>(𝑥)的变大而变大。</li>
</ol>
<ul>
<li>
<p>简化代价函数𝐶𝑜𝑠𝑡(ℎ<sub>𝜃</sub>(𝑥), 𝑦)函数：<br />
𝑦 = 0 --&gt; −𝑦 = 0，𝑦 = 1 --&gt; 1−𝑦 = 0<br />
𝐶𝑜𝑠𝑡(ℎ<sub>𝜃</sub>(𝑥), 𝑦) = −𝑦 × 𝑙𝑜𝑔(ℎ<sub>𝜃</sub>(𝑥)) − (1 − 𝑦) × 𝑙𝑜𝑔(1 − ℎ<sub>𝜃</sub>(𝑥))<br />
带入代价函数可以得到：<br />
𝐽(𝜃) = -1/𝑚 ∑ [𝑦<sup>(𝑖)</sup> log (ℎ<sub>𝜃</sub>(𝑥<sup>(𝑖)</sup>)) + (1 − 𝑦<sup>(𝑖)</sup>) log (1 − ℎ<sub>𝜃</sub>(𝑥<sup>(𝑖)</sup>))]</p>
</li>
<li>
<p>梯度下降算法来求得能使代价函数最小的参数：<br />
𝜃<sub>j</sub> := 𝜃<sub>j</sub> − 𝛼 d/d𝜃<sub>𝑗</sub> × 𝐽(𝜃)</p>
</li>
<li>
<p>对J(0)求导后得到：<br />
𝜃<sub>j</sub> := 𝜃<sub>𝑗</sub> − 𝛼 × 1/𝑚 ∑ (ℎ<sub>𝜃</sub>(x<sup>(𝑖)</sup> − y<sup>(𝑖)</sup> ) * x<sup>(𝑖)</sup><sub>𝑗</sub></p>
</li>
<li>
<p>注意：</p>
</li>
</ul>
<ol>
<li>此时也需要同时更新所有的参数 𝜃。</li>
<li>在运行梯度下降算法之前，进行特征缩放依旧是非常必要的。</li>
<li>还有一些常被用来令代价函数最小的算法，这些算法更加复杂和优越，而且通常不需要人工选择学习率，通常比梯度下降算法要更加快速。这些算法有：共轭梯度(Conjugate Gradient)，局部优化法(Broyden fletcher goldfarb shann,BFGS)和有限内存局部优化法(LBFGS)。<br />
fminunc 是 matlab 和 octave中都带的一个最小值优化函数，我们可以直接使用。<br />
<img src="http://i2.tiimg.com/733078/61d030dbf3abc4ba.png" alt="Markdown" /></li>
</ol>
<h2 id="简化的成本函数和梯度下降"><a class="markdownIt-Anchor" href="#简化的成本函数和梯度下降"></a> 简化的成本函数和梯度下降：</h2>
<ul>
<li>
<p>通过上文，我们得到更新参数的公式为：<br />
𝜃<sub>j</sub> := 𝜃<sub>𝑗</sub> − 𝛼 × 1/𝑚 ∑ (ℎ<sub>𝜃</sub>(x<sup>(𝑖)</sup> − y<sup>(𝑖)</sup> ) * x<sup>(𝑖)</sup><sub>𝑗</sub><br />
我们的目标是求出使代价J(𝜃)最小的参数𝜃。</p>
</li>
<li>
<p>着眼于后面的公式：∑ (ℎ<sub>𝜃</sub>(x<sup>(𝑖)</sup> − y<sup>(𝑖)</sup> ) * x<sup>(𝑖)</sup><sub>𝑗</sub><br />
其实就是在i=1到m上求和</p>
</li>
<li>
<p>则单个看来ℎ<sub>𝜃</sub>(x<sup>(𝑖)</sup> − y<sup>(𝑖)</sup> ) * x<sup>(𝑖)</sup><sub>𝑗</sub><br />
就是预测误差乘x<sup>(𝑖)</sup><sub>𝑗</sub></p>
</li>
<li>
<p>这样看，更新𝜃的公式和原来梯度下降法是一个公式，但是逻辑回归的假设函数和线性回归的假设函数是不同的，所以两者的梯度下降完全不同。</p>
</li>
<li>
<p>操作的注意事项：</p>
</li>
</ul>
<ol>
<li>推荐用向量化的方式，来同时更新这n个参数。</li>
<li>特征需要缩放</li>
</ol>
<h2 id="优化"><a class="markdownIt-Anchor" href="#优化"></a> 优化：</h2>
<p>首先明确：在梯度下降法中，每次计算的是𝐽(𝜃)和𝐽=0…n时的偏导数项</p>
<h2 id="多分类问题一对多问题-multi-class-classification_-one-vs-all"><a class="markdownIt-Anchor" href="#多分类问题一对多问题-multi-class-classification_-one-vs-all"></a> 多分类问题/一对多问题 Multi class Classification_ One-vs-all：</h2>
<ul>
<li>举例：
<ol>
<li>自动将邮件归类到不同的文件夹中，或者增加不同的标签</li>
<li>判断一个病人的的多种病症</li>
</ol>
</li>
</ul>
<p><img src="http://i1.fuimg.com/733078/289b167f17248823.png" alt="Markdown" /></p>
<ul>
<li>
<p>训练方法：<br />
将上图作为一个例子：在训练类别1时，将其他类别全部设置成负向类<br />
<img src="http://i1.fuimg.com/733078/09d8a1faf81a9b94.png" alt="Markdown" /></p>
</li>
<li>
<p>模型的使用：<br />
为了做出预测，我们给出输入一个新的 𝑥 值，用这个做预测。我们要做的就是在我们三个分类器里面输入 𝑥，然后我们选择一个让 ℎ<sub>𝜃</sub><sup>(𝑖)</sup>(𝑥)最大的𝑖，即max<sub>i</sub> ℎ<sub>𝜃</sub><sup>(𝑖)</sup>(𝑥)。</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>wed</tag>
      </tags>
  </entry>
  <entry>
    <title>神经网络-1</title>
    <url>/2021/02/14/machine%20learninng/%E5%90%B4%E6%81%A9%E8%BE%BE/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C-1/</url>
    <content><![CDATA[<h3 id="神经网络-neural-networks"><a class="markdownIt-Anchor" href="#神经网络-neural-networks"></a> 神经网络 Neural Networks</h3>
<h4 id="非线性假设-non-linear-hypotheses"><a class="markdownIt-Anchor" href="#非线性假设-non-linear-hypotheses"></a> 非线性假设 Non-linear Hypotheses</h4>
<p>我们之前学的内容，无论是线性回归还是逻辑回归都有一些缺点：特征太多时候，计算的负荷θ会非常大。之前我们已经看到过，使用非线性的多项式项，能够帮助我们建立更好的分类模型。</p>
<p>假设我们有非常多的特征，例如大于 100 个变量，我们希望用这 100 个特征来构建一个非线性的多项式模型，结果将是数量非常惊人的特征组合，即便我们只采用两两特征的组合(𝑥1𝑥2 + 𝑥1𝑥3 + 𝑥1𝑥4+. . . +𝑥2𝑥3 + 𝑥2𝑥4+. . . +𝑥99𝑥100)，我们也会有接近 5000 个组合而成的特征。这对于一般的逻辑回归来说需要计算的特征太多了。</p>
<h2 id="假设我们希望训练一个模型来识别视觉对象例如识别一张图片上是否是一辆汽车我们怎样才能这么做呢一种方法是我们利用很多汽车的图片和很多非汽车的图片然后利用这些图片上一个个像素的值饱和度或亮度来作为特征-假使我们采用的都是-50x50-像素的小图片并且我们将所有的像素视为特征则会有2500-个特征如果我们要进一步将两两特征组合构成一个多项式模型则会有约250022个接近-3-百万个特征-普通的逻辑回归模型不能有效地处理这么多的特征这时候我们需要神经网络"><a class="markdownIt-Anchor" href="#假设我们希望训练一个模型来识别视觉对象例如识别一张图片上是否是一辆汽车我们怎样才能这么做呢一种方法是我们利用很多汽车的图片和很多非汽车的图片然后利用这些图片上一个个像素的值饱和度或亮度来作为特征-假使我们采用的都是-50x50-像素的小图片并且我们将所有的像素视为特征则会有2500-个特征如果我们要进一步将两两特征组合构成一个多项式模型则会有约250022个接近-3-百万个特征-普通的逻辑回归模型不能有效地处理这么多的特征这时候我们需要神经网络"></a> 假设我们希望训练一个模型来识别视觉对象（例如识别一张图片上是否是一辆汽车），我们怎样才能这么做呢？一种方法是我们利用很多汽车的图片和很多非汽车的图片，然后利用这些图片上一个个像素的值（饱和度或亮度）来作为特征。<br />
假使我们采用的都是 50x50 像素的小图片，并且我们将所有的像素视为特征，则会有2500 个特征，如果我们要进一步将两两特征组合构成一个多项式模型，则会有约2500^2/2个（接近 3 百万个）特征。<br />
普通的逻辑回归模型，不能有效地处理这么多的特征，这时候我们需要神经网络。</h2>
<h4 id="模型表示-model-representation"><a class="markdownIt-Anchor" href="#模型表示-model-representation"></a> 模型表示 Model Representation</h4>
<ul>
<li>神经元(Processing unit/Nucleus)，含有许多输入/树突(input/Dendrite)，并且有一个输出/轴突(output/Axon)。<br />
神经网络是大量神经元相互连接并且通过电脉冲来交流的网络。</li>
<li>神经网络模型建立在很多神经元之上，每一个神经元又是一个个学习模型，也叫激活单元(activation unit)。其采纳一些特征作为输入，并且根据本身的模型提供输出。<br />
在神经元网络中，参数又可以称为权重(weight):<br />
<img src="http://i1.fuimg.com/733078/addf33d5ca37425c.png" alt="Markdown" /></li>
<li>我们设计出了类似于神经元的神经网络：其中𝑥1, 𝑥2, 𝑥3是输入单元（input units），我们将原始数据输入给它们。𝑎1, 𝑎2, 𝑎3是中间单元，它们负责将数据进行处理，然后呈递到下一层。最后是输出单元，它负责计算ℎ<sub>𝜃</sub>(𝑥)。<br />
<img src="http://i1.fuimg.com/733078/28523b22b4dfda8f.png" alt="Markdown" /></li>
<li>神经网络模型是许多逻辑单元按照不同层级组织起来的网络，每一层的输出变量都是下一层的输入变量。下图为一个 3 层的神经网络，第一层成为输入层（Input Layer），最后一层称为输出层(Output Layer), 中间一层成为隐藏层（Hidden Layers）。我们为每一层都增加一个偏差单位(bias unit)：<br />
<img src="http://i2.tiimg.com/733078/9cfb3b23bde0ab29.png" alt="Markdown" /></li>
<li>引入一些标记：</li>
</ul>
<ol>
<li>𝑎<sub>𝑖</sub><sup>(𝑗)</sup>：第j层的第i个激活单元</li>
<li>𝜃<sup>(𝑗)</sup>：从第j层映射到j+1层时权重的矩阵，尺寸为以第𝑗+1层的激活单元数量 * (第j层的激活单元数+1)<br />
<img src="http://i1.fuimg.com/733078/242beb9ed73fa505.png" alt="Markdown" /></li>
</ol>
<ul>
<li>（我们把这样从左到右的算法称为前向传播算法( FORWARD PROPAGATION )<br />
把𝑥, 𝜃, 𝑎分别用矩阵表示，我们可以得到 𝜃 ⋅ 𝑋 = 𝑎：<br />
<img src="http://i1.fuimg.com/733078/aedec1681bbc01f0.png" alt="Markdown" /><br />
<img src="http://i1.fuimg.com/733078/c81f673420074c84.png" alt="Markdown" /><br />
令 𝑧<sup>(2)</sup> = 𝜃<sup>(1)</sup>𝑥，则 𝑎<sup>(2)</sup> = 𝑔(𝑧<sup>(2)</sup>) ，计算后添加 𝑎<sub>0</sub>(2) = 1。 计算输出的值为：<br />
<img src="http://i1.fuimg.com/733078/f78d784ce3e4add6.png" alt="Markdown" /><br />
则 𝑧<sup>(3)</sup> = 𝜃<sup>(2)</sup>𝑎<sup>(2)</sup>，则 ℎ<sub>𝜃</sub>(𝑥) = 𝑎<sup>(3)</sup> = 𝑔(𝑧<sup>(3)</sup>）</li>
<li>如果我们要对整个训练集进行计算，我们需要将训练集特征矩阵进行转置，使得<strong>同一个实例的特征都在同一列里</strong>。即：<br />
𝑧<sup>(2)</sup> = 𝛩<sup>(1)</sup> × 𝑋<sup>T</sup>,  𝑎<sup>(2)</sup> = 𝑔(𝑧<sup>(2)</sup></li>
<li>为了更好了了解 Neuron Networks 的工作原理，我们先把左半部分遮住：<br />
<img src="http://i2.tiimg.com/733078/60c801668092241a.png" alt="Markdown" /><br />
其实神经网络就像是 logistic regression，只不过我们把 logistic regression 中的输入向量[𝑥1 ∼ 𝑥3] 变成了中间层的[𝑎<sub>1</sub><sup>(2)</sup> ∼ 𝑎<sub>3</sub><sup>(2)</sup>], 即:<br />
ℎ<sub>𝛩</sub>(𝑥) = 𝑔 (𝜃<sub>0</sub><sup>(2)</sup>𝑎<sub>0</sub><sup>(2)</sup> + 𝜃<sub>1</sub><sup>(2)</sup>𝑎<sub>1</sub><sup>(2)</sup> + 𝜃<sub>2</sub><sup>(2)</sup>𝑎<sub>2</sub><sup>(2)</sup> + 𝜃<sub>3</sub><sup>(2)</sup>𝑎<sub>3</sub><sup>(2)</sup><br />
我们可以把𝑎0, 𝑎1, 𝑎2, 𝑎3看成更为高级的特征值，也就是𝑥0, 𝑥1, 𝑥2, 𝑥3的进化体，并且它们是由 𝑥与决定的，因为是梯度下降的，所以𝑎是变化的，并且变得越来越厉害，<strong>所以这些更高级的特征值远比仅仅将𝑥次方厉害</strong>，也能更好的预测新数据。</li>
</ul>
<hr />
<h4 id="特征和直观理解-examples-and-intuitions"><a class="markdownIt-Anchor" href="#特征和直观理解-examples-and-intuitions"></a> 特征和直观理解 Examples and Intuitions</h4>
<p>在神经网络中，<strong>原始特征只是输入层</strong>，在我们上面三层的神经网络例子中，第三层也就是<strong>输出层做出的预测利用的是第二层的特征</strong>，而非输入层中的原始特征，我们可以认为第二层中的特征是神经网络通过学习后自己得出的<strong>一系列用于预测输出变量的新特征</strong>。</p>
<h5 id="逻辑运算"><a class="markdownIt-Anchor" href="#逻辑运算"></a> 逻辑运算</h5>
<ul>
<li>神经网络中，单层神经元（无中间层）的计算可用来表示逻辑运算，比如逻辑与(AND)、逻辑或(OR)。<br />
<img src="http://i1.fuimg.com/733078/64ef1d73e684dec1.png" alt="Markdown" /><br />
<img src="http://i1.fuimg.com/733078/2db78bad2c8f6412.png" alt="Markdown" /></li>
<li>OR，AND和NOT整体一样，区别只在于的取值不同。<br />
<img src="http://i1.fuimg.com/733078/0b5307d86268b040.png" alt="Markdown" /></li>
<li>我们可以利用神经元来组合成更为复杂的神经网络以实现更复杂的运算。例如我们要实<br />
现 XNOR 功能（输入的两个值必须一样，均为 1 或均为 0），即：<br />
(-30,20,20)表示 x<sub>1</sub> and x<sub>2</sub><br />
(10,-20,-20)表示 (NOT x<sub>1</sub>)AND(NOT x<sub>2</sub>)<br />
(-10,20,20)表示 OR<br />
所以：<br />
<img src="http://i1.fuimg.com/733078/a09637588f0f960f.png" alt="Markdown" /></li>
</ul>
<hr />
<h4 id="多分类问题-multiclass-classification"><a class="markdownIt-Anchor" href="#多分类问题-multiclass-classification"></a> 多分类问题 Multiclass Classification</h4>
<p>不止两种分类时，比如区别图片是路人，汽车，摩托车…，这时在输出层我们要有四个值，依次表示是某个事物的可能。<br />
eg. 输入向量x有三个维度，两个中间层，输出层有4个神经元来表示4类：<br />
<img src="http://i1.fuimg.com/733078/e251635a803acb2a.png" alt="Markdown" /></p>
<hr />
<h4 id="代价函数-cost-function"><a class="markdownIt-Anchor" href="#代价函数-cost-function"></a> 代价函数 Cost Function</h4>
<h5 id="新引进的标记"><a class="markdownIt-Anchor" href="#新引进的标记"></a> 新引进的标记：</h5>
<p>m：训练样本<br />
x：输入信号<br />
y：输出信号<br />
L：神经网络层数<br />
S<sub>I</sub>：每层神经元的个数<br />
S<sub>l</sub>：输出层神经元个数<br />
S<sub>L</sub>：最后一层处理单元的个数</p>
<h5 id="多分类问题-multiclass-classification-2"><a class="markdownIt-Anchor" href="#多分类问题-multiclass-classification-2"></a> 多分类问题 Multiclass Classification</h5>
<p>将神经网络的分类定义为两种情况：二类分类和多类分类，<br />
二类分类：S<sub>L</sub> = 0, 𝑦 = 0 𝑜𝑟 1表示哪一类；<br />
𝐾类分类：S<sub>L</sub> = 𝑘, 𝑦<sub>i</sub> = 1表示分到第 i 类；(𝑘 &gt; 2)</p>
<h5 id="代价函数-cost-function-2"><a class="markdownIt-Anchor" href="#代价函数-cost-function-2"></a> 代价函数 Cost Function</h5>
<p>已学过逻辑回归问题中我们的代价函数为：<br />
<img src="http://i1.fuimg.com/733078/1b4e2ae5559c57c0.png" alt="Markdown" /></p>
<p>而神经网络中的ℎ<sub>𝜃</sub>(𝑥)是一个维度为𝐾的向量，并且我们训练集中的因变量也是同样维度的一个向量，因此我们的代价函数会比逻辑回归更加复杂一些，为： ℎ<sub>𝜃</sub>(𝑥) ∈ ℝ<sup>𝐾</sup> ，(ℎ<sub>𝜃</sub>(𝑥))<sub>𝑖</sub> = 𝑖<sup>𝑡ℎ</sup>output<br />
<img src="http://i1.fuimg.com/733078/ebbadc3aed8b50ba.png" alt="Markdown" /></p>
<ul>
<li>可能有k种预测情况，我们可以利用循环在k个预测中选择可能性最高的那一项，与y中市局数据进行对比</li>
<li>正则化项：正则化的那一项只是排除了每一层𝜃0后，每一层的𝜃 矩阵的和。最里层的循环𝑗循环所有的行（由𝑠<sub>𝑙</sub> +1 层的激活单元数决定），循环𝑖则循环所有的列，由该层（𝑠𝑙层）的激活单<br />
元数所决定。即：ℎ<sub>𝜃</sub>(𝑥)与真实值之间的距离为每个样本-每个类输出的加和，对参数进行regularization 的 bias 项处理所有参数的平方和。</li>
</ul>
]]></content>
      <tags>
        <tag>wed</tag>
      </tags>
  </entry>
  <entry>
    <title>神经网络-2</title>
    <url>/2021/02/16/machine%20learninng/%E5%90%B4%E6%81%A9%E8%BE%BE/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C-2/</url>
    <content><![CDATA[<h3 id="反向传播算法-back-propagation-algorithm"><a class="markdownIt-Anchor" href="#反向传播算法-back-propagation-algorithm"></a> 反向传播算法 Back-propagation Algorithm</h3>
<h5 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h5>
<p>为了使用代价函数的的偏导数来更新参数，我们需要一种反向传播算法，即首先计算最后一层的误差，然后逐层反求前面各层的误差，直到倒数第二层。</p>
<h5 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h5>
<p>假设训练集仅有一个实例 (x<sup>(1)</sup>, y<sup>(1)</sup>)，神经网络为一个四层的神经网络，其中K=4，S<sub>L</sub>=4，L=4。<br />
前向传播为<br />
<img src="http://i2.tiimg.com/733078/ff0090163658f50a.png" alt="Markdown" /></p>
<p>从最后一层的误差开始计算，误差为激活单元的预测(a<sub>k</sub><sup>(4)</sup>)与实际值(y<sup>k</sup>)之间的误差，这里用<strong>δ<sup>(4)</sup> = a<sup>(4)</sup>-y</strong>。<br />
然后使用该值来计算第三层的误差：𝛿<sup>(3)</sup> = (𝛩<sup>(3)</sup>)<sup>𝑇</sup>𝛿(4) ∗ 𝑔′(𝑧<sup>(3)</sup>)，第二层同上。<br />
我们不做任何正则化处理时有： 𝜕/𝜕𝛩<sub>𝑖𝑗</sub><sup>(𝑙)</sup> 𝐽(𝛩) = 𝑎<sub>𝑗</sub><sup>(𝑙)</sup>𝛿<sub>𝑖</sub><sup>𝑙+1</sup>，其中：<br />
𝑙 代表目前所计算的是第几层。<br />
𝑗 代表目前计算层中的激活单元的下标，也将是下一层的第𝑗个输入变量的下标。<br />
𝑖 代表下一层中误差单元的下标，是受到权重矩阵中第𝑖行影响的下一层中的误差单元的下标。</p>
<p>如果我们考虑正则化处理，并且我们的训练集是一个特征矩阵而非向量。在上面的特殊<br />
情况中，我们需要计算每一层的误差单元来计算代价函数的偏导数。在更为一般的情况中，<br />
我们同样需要计算每一层的误差单元，但是我们需要为整个训练集计算误差单元，此时的误<br />
差单元也是一个矩阵，我们用𝛥<sub>𝑖𝑗</sub><sup>(𝑙)</sup>来表示这个误差矩阵。第 𝑙 层的第 𝑖 个激活单元受到第 𝑗个参数影响而导致的误差。</p>
]]></content>
      <tags>
        <tag>wed</tag>
      </tags>
  </entry>
  <entry>
    <title>linear regression 线性回归模型</title>
    <url>/2021/02/04/machine%20learninng/%E5%90%B4%E6%81%A9%E8%BE%BE/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
    <content><![CDATA[<h2 id="引子"><a class="markdownIt-Anchor" href="#引子"></a> 引子：</h2>
<p>房价用线性来表示。</p>
<h2 id="一些用于计算的系数"><a class="markdownIt-Anchor" href="#一些用于计算的系数"></a> 一些用于计算的系数：</h2>
<ul>
<li>m：样本数量</li>
<li>x：input value</li>
<li>y：output value</li>
<li>(x, y)： single training example</li>
<li>(x<sup>i</sup>, y<sup>i</sup>)：value in x row and y column</li>
</ul>
<h2 id="监督算法的流程"><a class="markdownIt-Anchor" href="#监督算法的流程"></a> 监督算法的流程：</h2>
<ol>
<li>给定训练集合</li>
<li>通过学习算法训练模型，在这里通常有一个假设函数 hypothesis，从input x到output y<br />
这里提到了linear regression 线性回归模型</li>
</ol>
<h2 id="linear-regression-线性回归模型"><a class="markdownIt-Anchor" href="#linear-regression-线性回归模型"></a> linear regression 线性回归模型</h2>
<p>对于假设函数：h<sub>θ</sub>(x) = θ<sub>0</sub> + θ<sub>1</sub>x<br />
parameter 参数： θ<sub>0</sub>和θ<sub>1</sub><br />
目标：我们需要找到参数，使h<sub>θ</sub>(x)和实际y的差距尽可能的小，即 minimize h<sub>θ</sub>(x)-y的最小θ<sub>0</sub>和θ<sub>1</sub>x。</p>
<p>过程：</p>
<ol>
<li>代价函数cost function：(1/2m） * ∑( h<sub>θ</sub>(x)-y )<sup>2</sup>：求和所有的差值并且除以样本数量，来减小平均误差。系数2是用来在求导时抵消平方的影响。<br />
用 J(θ<sub>0</sub>, θ<sub>1</sub>) 表示代价函数<br />
代价函数也被称之为平方误差函数 squared error function</li>
<li>简化形式：忽略θ<sub>0</sub>, 代价函数简化为J(θ<sub>1</sub>) = (1/2m） * ∑(h<sub>θ</sub>(x)-y)<sup>2</sup></li>
<li>简化之后关注完整形式,通常使用等高线二维图。<br />
–&gt; 真正需要的是一种有效的算法，能够自动地找出这些使代价函数J取最小值的参数θ<sub>0</sub>和θ<sub>1</sub>，这里我们使用<strong>梯度下降法</strong>。</li>
</ol>
<h1 id="gradient-descent-梯度下降"><a class="markdownIt-Anchor" href="#gradient-descent-梯度下降"></a> Gradient descent 梯度下降</h1>
<p>定义：是一个用来求函数最小值的算法</p>
<p>思路： 开始和i时候i随机选择参数组合(θ<sub>1</sub>,θ<sub>2</sub>…θ<sub>n</sub>)，计算代价函数，然后我们寻找下一个能让代价函数下降最多的参数组合。持续这么做，直到求出一个局部最小值(local minimum)。</p>
<p>注意：选择不同的初始参数，可能会找到不同的局部最小值，通常都设置为0。</p>
<p>公式：θ<sub>j</sub> := θ<sub>j</sub> - α*d/dθ<sub>j</sub> (J(θ<sub>0</sub>, θ<sub>1</sub>))         (j=0/1)<br />
细节：</p>
<ol>
<li><strong>:=</strong> colon equal 表示赋值</li>
<li><strong>α</strong> learning rate 学习率：用来控制梯度下降的速度</li>
<li><strong>(J(θ<sub>0</sub>, θ<sub>1</sub>))’</strong> 对代价函数进行求导</li>
<li>需要同时更新两个参数：<br />
a. temp<sub>0</sub> := θ<sub>1</sub> - α*<em>d/dθ<sub>0</sub></em> (J(θ<sub>0</sub>, θ<sub>1</sub>))<br />
b. temp<sub>1</sub> := θ<sub>1</sub> - α*<em>d/dθ<sub>1</sub></em> (J(θ<sub>0</sub>, θ<sub>1</sub>))<br />
c. θ<sub>0</sub> := temp<sub>0</sub><br />
d. θ<sub>1</sub> := temp<sub>1</sub><br />
本质：根据每次的差值来更新参数</li>
</ol>
<p>在更新时，对于求导部分J(θ<sub>0</sub>, θ<sub>1</sub>)=(1/2m)* ∑(h<sub>θ</sub>(x)-y)<sup>2</sup></p>
<ul>
<li>j=0: d/dθ<sub>0</sub> J(θ<sub>0</sub>, θ<sub>1</sub>) = 1/m * ∑ ( h<sub>θ</sub>(x)-y )</li>
<li>j=1: d/dθ<sub>1</sub> J(θ<sub>0</sub>, θ<sub>1</sub>) = 1/m * ∑ ( h<sub>θ</sub>(x)-y ) * x, x是因为链式法则h对x<sub>1</sub>进行求导</li>
</ul>
<p><strong>刚刚采用的梯度下降算法，通常称之为批量梯度下降 ‘Batch’ Gradient Descent ，即每一步梯度下降都用了所有的数据集</strong>,有一种计算代价函数最小值的数值解法，不需要梯度下降这种迭代算法，称为正规方程(normal equations)。实际上在数据量较大的情况下，梯度下降法比正规方程要更适用一些。</p>
]]></content>
      <tags>
        <tag>wed</tag>
      </tags>
  </entry>
  <entry>
    <title>过拟合与正则化线性回归</title>
    <url>/2021/02/10/machine%20learninng/%E5%90%B4%E6%81%A9%E8%BE%BE/%E8%BF%87%E6%8B%9F%E5%90%88%E4%B8%8E%E6%AD%A3%E5%88%99%E5%8C%96%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
    <content><![CDATA[<h3 id="过拟合-over-fitting"><a class="markdownIt-Anchor" href="#过拟合-over-fitting"></a> 过拟合 Over - fitting</h3>
<h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义：</h4>
<p>如果我们有非常多的特征，我们通过学习得到的假设可能能够<strong>非常好地适应训练集</strong>(代价函数可能几乎为0)，但是可能<strong>难以精确新的数据</strong>。</p>
<h4 id="举例"><a class="markdownIt-Anchor" href="#举例"></a> 举例</h4>
<ol>
<li>
<p>对于回归问题<br />
<img src="http://i2.tiimg.com/733078/d3d5477a86a7327c.png" alt="Markdown" /><br />
欠拟合：第一个模型是线性模型，<strong>不能够很好地适应我们的训练集</strong>。<br />
过拟合：第三个模型<strong>过于强调原始数据</strong>，丢失了算法的本质。如果给出了一个新的值使之预测，会表现得很差。<br />
所以，中间的模型最合适。</p>
</li>
<li>
<p>对于分类问题<br />
<img src="http://i2.tiimg.com/733078/7d6e6ad68b6939ad.png" alt="Markdown" /><br />
就以多项式理解，𝑥的次数越高，拟合的越好，但相应的预测的能力就可能变差。</p>
</li>
</ol>
<h4 id="解决方式"><a class="markdownIt-Anchor" href="#解决方式"></a> 解决方式</h4>
<ol>
<li>丢弃一些不能帮助我们正确预测的特征。可以是手工选择保留哪些特征，或者使用一些模型选择的算法(eg. PCA)。</li>
<li>正则化: 保留所有的特征，但是减少参数的大小(magnitude)。</li>
</ol>
<hr />
<h3 id="正则化-regularization"><a class="markdownIt-Anchor" href="#正则化-regularization"></a> 正则化 Regularization</h3>
<h4 id="代价函数-cost-function"><a class="markdownIt-Anchor" href="#代价函数-cost-function"></a> 代价函数 Cost function</h4>
<ul>
<li>上面的回归问题中如果我们的模型是：ℎ<sub>𝜃</sub>(𝑥) = 𝜃<sub>0</sub> + 𝜃<sub>1</sub>𝑥<sub>1</sub> + 𝜃<sub>2</sub>𝑥<sub>2</sub><sup>2</sup> + 𝜃<sub>3</sub>𝑥<sub>3</sub><sup>3</sup> + 𝜃<sub>4</sub>𝑥<sub>4</sub><sup>4</sup></li>
<li>从上述比较图中可以发现，正是那些高次项导致了过拟合的现象，所以我们可以尝试<strong>使高次项的系数接近于0</strong>，即在一定程度上减少这些参数𝜃的值。</li>
<li>实践：减小𝜃<sub>3</sub>和𝜃<sub>4</sub>的大小：修改代价函数，在𝜃<sub>3</sub>和𝜃<sub>4</sub>设置一些惩罚：</li>
<li>修改后的代价函数如下：min 1/2𝑚 [∑ (ℎ<sub>𝜃</sub>(𝑥<sup>i</sup>) − 𝑦<sup>i</sup>)<sup>2</sup>+ 1000𝜃<sub>3</sub><sup>2</sup> + 10000𝜃<sub>4</sub><sup>2</sup>]<br />
这样的结果中确保了系数𝜃<sub>3</sub>和𝜃<sub>4</sub>足够小，通过这样的代价函数选择出的𝜃<sub>3</sub>和𝜃<sub>4</sub>，对预测结果的影响就比之前要小许多。</li>
<li>如果存在非常多的特征，我们并不知道需要惩罚哪些特征时，我们会选择惩罚所有特征并且让代价函数最优化的软件来选择这些惩罚的程度：𝐽(𝜃) = 1/2𝑚 [∑ (ℎ<sub>𝜃</sub>(𝑥<sup>(𝑖)</sup>) − 𝑦<sup>(𝑖)</sup>)<sup>2</sup> + 𝜆 ∑ 𝜃<sub>j</sub><sup>2</sup>]</li>
<li>其中，𝜆被称为正则化参数（Regularization Parameter）,如果选择的正则化参数 λ 过大，则会把所有的参数都最小化了，导致模型变成 ℎ𝜃(𝑥) = 𝜃0，也就是上图中红色直线所示的情况，造成欠拟合。<br />
<img src="http://i2.tiimg.com/733078/7ee5c45456390709.png" alt="Markdown" /></li>
<li>原理：那为什么增加的一项𝜆 = ∑ 𝜃𝑗 𝑛 2 𝑗=1 可以使𝜃的值减小呢？<br />
因为如果我们令 𝜆 的值很大的话，为了使 Cost Function 尽可能的小，所有的 𝜃 的值<br />
（不包括𝜃<sub>0</sub>）都会在一定程度上减小。<br />
但若 λ 的值太大了，那么𝜃（不包括𝜃0）都会趋近于 0，这样我们所得到的只能是一条<br />
平行于𝑥轴的直线。</li>
</ul>
<h4 id="正则化线性回归模型"><a class="markdownIt-Anchor" href="#正则化线性回归模型"></a> 正则化线性回归模型</h4>
<p>正则化线性回归的代价函数为：<br />
<img src="http://i2.tiimg.com/733078/fc437c9792dbabd9.png" alt="Markdown" /><br />
在前面我们学到令代价函数最小的方法为梯度下降法和正规方程法。</p>
<ol>
<li>梯度下降法，分为两种情况，因为我们并没有正则化𝜃<sub>0</sub>，所以：<br />
<img src="http://i2.tiimg.com/733078/182cfe94391930ae.png" alt="Markdown" />。<br />
可以看出，正则化线性回归的梯度下降算法的变化在于，每次都在原有算法更新规则的<br />
基础上令𝜃值减少了一个额外的值。</li>
<li>正规方程<br />
<img src="http://i1.fuimg.com/733078/f50fee99c6db63db.png" alt="Markdown" /><br />
图中的矩阵尺寸为 (𝑛 + 1) ∗ (𝑛 + 1)</li>
</ol>
<h4 id="正则化逻辑回归模型"><a class="markdownIt-Anchor" href="#正则化逻辑回归模型"></a> 正则化逻辑回归模型</h4>
<p>我们也给代价函数增加一个正则化的表达式<br />
<img src="http://i1.fuimg.com/733078/250b4ee6bb110a8a.png" alt="Markdown" /><br />
可以通过梯度下降算法最小化代价函数。</p>
]]></content>
      <tags>
        <tag>wed</tag>
      </tags>
  </entry>
  <entry>
    <title>KNN algorithm</title>
    <url>/2021/04/06/machine%20learninng/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98/KNN%20algorithm/</url>
    <content><![CDATA[<p><strong>K近邻算法</strong></p>
<h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3>
<ol>
<li>首先设定参数为k</li>
<li>将新数据的每个特征与样本数据中的每个特征进行比较，选出样本数据中与新数据差异最小(这里可以用距离表示)的k个实例。</li>
<li>然后，用这k个实例中出现次数最多的分类来作为新数据的分类。</li>
</ol>
<h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3>
<h4 id="归一化特征值-standardization"><a class="markdownIt-Anchor" href="#归一化特征值-standardization"></a> 归一化特征值 Standardization</h4>
<ul>
<li>问题：如果我们选用的距离度量为欧式距离，如果数据预先没有经过归一化，那么那些绝对值大的特征值在欧式距离计算的时候起了决定性作用。</li>
<li>描述：
<ol>
<li>梯度下降法求解的模型一般需要归一化。</li>
<li>一般关注特征值的具体值的模型需要归一化处理，而一般关注特征值的分布情况的则无需归一化。</li>
</ol>
</li>
<li>公式：
<ol>
<li><strong>Min-Max/Linear normalization 线性函数归一化</strong>： newValue = (oldValue - min) / (max - min) ，最终结果的值域为 [0, 1]</li>
<li><strong>Z-score normalization 零均值归一化</strong>： newValue = (oldValue - 均值) / 标准差 , 最终结果值域为 [-1, 1]</li>
<li><strong>Sum normalization 特征归一化</strong>：newValue = oldValue / featureSum, featureSum是指所有实例的该特征值的和， 最终结果值域为 [0, 1]</li>
</ol>
</li>
<li>线性函数归一化 代码实现：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 归一化特征值：消除特征之间量级不同导致的影响</span><br><span class="line">def autoNom(dataSet):</span><br><span class="line">    # 得到最大最小值</span><br><span class="line">    mini &#x3D; dataSet.min(0)</span><br><span class="line">    max &#x3D; dataSet.max(0)</span><br><span class="line">    # 极差</span><br><span class="line">    ranges &#x3D; max - mini</span><br><span class="line">    m &#x3D; dataSet.shape[0]    # m为行数</span><br><span class="line">    # 生成与最小值之差组成的矩阵</span><br><span class="line">    normDataSet &#x3D; dataSet - tile(mini, (m, 1))</span><br><span class="line">    # 将最小值之差除以范围组成矩阵</span><br><span class="line">    normDataSet &#x3D; normDataSet &#x2F; tile(ranges, (m, 1))  # element wise divide</span><br><span class="line">    return normDataSet, ranges, mini</span><br></pre></td></tr></table></figure>
<h4 id="手写识别系统"><a class="markdownIt-Anchor" href="#手写识别系统"></a> 手写识别系统</h4>
<ul>
<li>数据准备：需要将一个32*32的图片向量化，即<strong>img2vector</strong>。步骤为将所有行都拼接在首行尾部，最终得到1*1024的一个向量。</li>
<li>数据划分：通常使用90%的数据作为训练样本，10%的数据作为测试样本。而测试样本是随机选择的</li>
</ul>
<h4 id="得到前k个数据"><a class="markdownIt-Anchor" href="#得到前k个数据"></a> 得到前k个数据</h4>
<p>numpy.ndarry的argsort()函数可以返回一个数组，其中从前到后一次表示了将原数组从小到大排序后的idx值。</p>
<h3 id="弊端"><a class="markdownIt-Anchor" href="#弊端"></a> 弊端</h3>
<ol>
<li>在面对庞大的数据时，当特征数量很多时，knn算法的执行效率不高。</li>
<li>knn算法无法给出任何数据的基础结构信息。因为，我们无法得知平均实力样本和典型实力样本的特征。</li>
</ol>
]]></content>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>循环神经网络</title>
    <url>/2021/04/17/machine%20learninng/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<p>循环神经网络 Recurrent Neural Network / RNN<br />
是一种具有记忆力的网络，允许信息长久地保存在神经网络中。<br />
适用于数据具有前后依赖性。</p>
<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2>
<ul>
<li>先前的神经网络，层与层之间相互连接，但是每层上的各个节点是无连接的。</li>
<li>循环神经网络的隐藏层的值不仅仅取决于当前这次的输入，还取决于上一次隐藏层的值。<br />
<img src="https://i.loli.net/2021/04/17/BHOdJxYNg39Kq8a.png" alt="" /></li>
<li>我们将当前时间记为t，上一步时间则为t-1。输入记为x，隐藏层为s，输出为o。则从图上可以看到，s<sub>t</sub>同时受到x和s<sub>t-1</sub>的影响。公式表示为：</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>o</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>V</mi><mo>∗</mo><msub><mi>s</mi><mi>t</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>s</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>U</mi><mo>∗</mo><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><mi>W</mi><mo>∗</mo><msub><mi>s</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
o_t &amp;= V * s_t\\
s_t &amp;= U * x_t + W * s_{t-1}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="长短期记忆网络-long-short-term-memory-lstm"><a class="markdownIt-Anchor" href="#长短期记忆网络-long-short-term-memory-lstm"></a> 长短期记忆网络 Long Short Term Memory / LSTM</h2>
<ul>
<li>对于实际问题来说，有时需要更加久远的历史信息，有时仅需要临近的历史信息。</li>
<li>传统的神经网路的每一个隐藏单元都只是执行一个简单的激活函数的操作，但是LSTM中<strong>每个模块内有四层结构</strong>：3个sigmoid层和1个tanh层。这四层结构构成了三种<strong>门单元</strong>，用于信息选择性通过。</li>
<li>这三层门单元分别是<strong>遗忘门</strong>，<strong>输入门</strong>和<strong>输出门</strong>。</li>
<li>简单的循环神经网络只需要传递一个隐藏状态 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">h_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，而长短期记忆网络还需要传递候选状态 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">c_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，和候选内部状态 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>c</mi><mo>^</mo></mover><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\hat{c}_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li>
</ul>
<h3 id="遗忘门"><a class="markdownIt-Anchor" href="#遗忘门"></a> 遗忘门</h3>
<p><img src="https://i.loli.net/2021/04/17/KYEfCt2V4mdU7hI.png" alt="" /></p>
<ul>
<li>一个sigmoid函数。根据<strong>当前的输入</strong>和<strong>上一时刻的隐藏输出</strong>来决定内部状态有多少被遗忘。</li>
<li>数学原理：把t-1时的长期记忆输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">c_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>乘上一个遗忘因子<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">f_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。遗忘因子是由短期记忆<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">h_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>以及事件信息<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>来计算。</li>
<li><strong>遗忘因子</strong>计算公式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mi>f</mi></msub><mo>∗</mo><mo stretchy="false">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy="false">]</mo><mo>+</mo><msub><mi>b</mi><mi>f</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_t = \sigma(W_f * [h_{t-1}, x_t] + b_f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
<h3 id="输入门"><a class="markdownIt-Anchor" href="#输入门"></a> 输入门</h3>
<p><img src="https://i.loli.net/2021/04/17/7MaGKPunZkOijfx.png" alt="" /></p>
<ul>
<li>一个sigmoid函数和一个tanh函数。根据当前的输入和上一时刻的隐藏输出决定<strong>什么样的新信息</strong>被存放在细胞状态。针对遗忘门中丢弃的属性信息，在本单元模块找到相应的新的属性信息，添加进去，以补充丢弃的属性信息。</li>
<li>两个函数的作用：
<ol>
<li>sigmoid层，决定什么值需要更新</li>
<li>tanh层，创建一个新的候选值向量，生成候选记忆</li>
</ol>
</li>
<li>数学原理：根据遗忘因子和上一个隐藏层传递的值得到遗忘之后的保留值；根据上次输出和本次输入得到遗忘的补充值。</li>
<li>计算公式：</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>i</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mi>t</mi></msub><mo>∗</mo><mo stretchy="false">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy="false">]</mo><mo>+</mo><msub><mi>b</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mover accent="true"><mi>c</mi><mo>^</mo></mover><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mi>c</mi></msub><mo>∗</mo><mo stretchy="false">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy="false">]</mo><mo>+</mo><msub><mi>b</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>c</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><mi>t</mi></msub><mo>∗</mo><msub><mi>c</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>i</mi><mi>t</mi></msub><mo>∗</mo><msub><mover accent="true"><mi>c</mi><mo>^</mo></mover><mi>t</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
i_t &amp;= \sigma( W_t*[h_{t-1}, x_t]+b_i )\\
\hat{c}_t &amp;= tanh( W_c*[h_{t-1}, x_t]+b_c)\\
c_t &amp;= f_t*c_{t-1} + i_t*\hat{c}_t
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.500000000000002em;vertical-align:-2.000000000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.6599999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.6599999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="输出门"><a class="markdownIt-Anchor" href="#输出门"></a> 输出门</h3>
<p><img src="https://i.loli.net/2021/04/17/8CERardikXpT6P5.png" alt="" /></p>
<ul>
<li>一个sigmoid函数。根据当前候选状态，输入和上一时刻的隐藏输出来决定该时刻的隐藏输出。<br />
首先我们使用一个Sigmiod函数来去确定细胞状态的哪部分需要输出，然后把细胞状态通过tanh层处理，两者相乘得到最终我们想要输出的信息。</li>
<li>数学原理：通过一个Sigmoid函数得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>o</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">o_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>o</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">o_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">tanh(c_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>相乘得到最终的输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">h_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li>
<li>计算公式：</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>o</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mi>o</mi></msub><mo stretchy="false">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy="false">]</mo><mo>+</mo><msub><mi>b</mi><mi>o</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>h</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>o</mi><mi>t</mi></msub><mo>∗</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
o_t &amp;= \sigma( W_o[h_{t-1}, x_t] + b_o )\\
h_t &amp;= o_t* tanh( c_t )
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="优势"><a class="markdownIt-Anchor" href="#优势"></a> 优势</h3>
<p>LSTM有进有出且当前的cell informaton是通过input gate控制之后叠加的，而RNN是叠乘，因此LSTM可以防止梯度消失或者爆炸，会比RNN好一点。</p>
<h2 id="门控制循环单元-gated-recurrent-unit-gru"><a class="markdownIt-Anchor" href="#门控制循环单元-gated-recurrent-unit-gru"></a> 门控制循环单元 Gated Recurrent Unit / GRU</h2>
<p><a href="https://blog.csdn.net/m0_38088359/article/details/83960108?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control&amp;dist_request_id=1331978.12945.16186698740003693&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control">推荐博客链接</a></p>
<ul>
<li>也是循环神经网络的一种，思想与LSTM一致：通过内部模块来控制信息的流动，所以可以看作LSTM的一个变体。</li>
<li>利用<strong>更新门</strong>替代输入门和遗忘门，通过<strong>重置门</strong>控制当前时刻的候选状态的计算是否依赖于上一个时刻。<br />
<strong>重置门有助于捕捉时间序列里短期的依赖关系。更新门有助于捕捉时间序列里长期的依赖关系。</strong></li>
<li>只需要传递<strong>隐藏状态</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">h_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<strong>候选隐藏状态</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>t</mi><mo>^</mo></mover><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\hat{t}_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0285199999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87852em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span></span></span><span style="top:-3.18408em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
</ul>
]]></content>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>卷积神经网络</title>
    <url>/2021/04/12/machine%20learninng/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<p>卷积神经网络一般由一个或者多个卷积层，池化层和全连接层组成。</p>
<h1 id="组成"><a class="markdownIt-Anchor" href="#组成"></a> 组成</h1>
<h2 id="卷积层-convolution-layer"><a class="markdownIt-Anchor" href="#卷积层-convolution-layer"></a> 卷积层 Convolution Layer</h2>
<ul>
<li>作用：使用卷积操作来提取特征，同时发掘数据的局部关联性质和空间不变性质。</li>
<li>卷积层由一些可优化的<strong>滤波器</strong>组成。尺寸上，每个滤波器都比较小但是通道数和输入数据相同。<br />
滤波器每滑动一次都会计算出当前覆盖区域的<strong>内积</strong>，所以在滑过整个图片后会生成一个二维的<strong>特征图 Feature Map</strong>。</li>
<li>滤波器每当看到它期望的视觉特征就会被激活。</li>
<li>一般而言，从前向后不同的卷积层提取的特征会逐渐复杂化。实际上这与人类大脑处理信息的模式是一致的。</li>
</ul>
<h3 id="滤波器-filter"><a class="markdownIt-Anchor" href="#滤波器-filter"></a> 滤波器 Filter</h3>
<ul>
<li>即一组固定的权重，也称<strong>卷积核Kernel</strong>。</li>
<li>操作：</li>
</ul>
<ol>
<li>在图像的某个位置上覆盖滤波器；</li>
<li>将滤波器中的值与图像中的对应像素的值相乘；</li>
<li>把上面的乘积加起来，得到的和是输出图像中目标像素的值；</li>
<li>对图像的所有位置重复此操作</li>
</ol>
<ul>
<li>滤波器的通道数应该与输入数据体的通道数保持一致。比如如果输入一张32*32的灰度图像时，对应的滤波器深度应该为1；而输入一张大小为32*32*3的彩色图片时，对应的滤波器深度应该为3，表示颜色通道数为3。</li>
<li>某种程度上来说，构建卷积神经网络的任务就是找出最优的滤波器，使这些滤波器对特定的特征有更高的激活值，从而完成特定的任务，比如分类，检测目标等。</li>
<li>二维和三维卷积本质上一致</li>
</ul>
<h3 id="一些超参数"><a class="markdownIt-Anchor" href="#一些超参数"></a> 一些超参数</h3>
<ul>
<li>通道 Channel或深度 Depth</li>
<li>步长 Stride：每次滤波器平移的距离。步长可以决定输出数据体的尺寸。</li>
<li>填充 Padding：在输入数据体边缘填充特定元素。最常用的元素是0，即零填充。</li>
<li>填充的尺寸：可以控制输出数据体的尺寸，常用于保证输入输出尺寸相同。</li>
</ul>
<p>设数据尺寸W*W，卷积层滤波器尺寸F，步长S和零填充的数量P。则输出数据体的宽度和高度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>W</mi><mo>−</mo><mi>F</mi><mo>+</mo><mn>2</mn><mi>P</mi></mrow><mi>S</mi></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\frac{W-F+2P}{S} + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<ul>
<li>这些超参数之间是相互限制的，来保证输入和输出数据尺寸为相同的整数。</li>
</ul>
<h2 id="relu激活函数"><a class="markdownIt-Anchor" href="#relu激活函数"></a> ReLu激活函数</h2>
<ul>
<li>传统的sigmoid函数存在<strong>梯度弥散</strong>的问题，而ReLu函数在x&gt;0时的梯度为1，所以可以避免这个问题。</li>
<li>稀疏激活性：ReLu函数在负半区的导数值为0。这就意味着，一旦神经元的激活值进入负半区，它就不会经历训练。</li>
<li>计算速度快</li>
</ul>
<h2 id="池化层-pooling-layer"><a class="markdownIt-Anchor" href="#池化层-pooling-layer"></a> 池化层 Pooling Layer</h2>
<p><img src="https://i.loli.net/2021/04/12/2ElXc1AxdIoDgzZ.png" alt="" /></p>
<ul>
<li>一般会在连续的卷积层之间周期性地插入一个池化层，在该层处理输入数据的准则被称为<strong>池化函数</strong>。</li>
<li>池化层的作用：
<ol>
<li>用于降低数据体的空间尺寸，以减少参数数量和计算资源</li>
<li>Translation Invariance：当数据中像素在邻域发生微小位移时，池化层的输出是不变的，用于防止过拟合。</li>
</ol>
</li>
</ul>
<h3 id="池化函数"><a class="markdownIt-Anchor" href="#池化函数"></a> 池化函数</h3>
<ul>
<li>在某一个输出位置上，计算并且输出数据中相邻部分的某种<strong>统计特征</strong>。</li>
<li>分类：
<ol>
<li>最大池化</li>
<li>平均池化</li>
<li>L2范式池化</li>
</ol>
</li>
</ul>
<h2 id="softmax分类层"><a class="markdownIt-Anchor" href="#softmax分类层"></a> Softmax分类层</h2>
<h3 id="softmax函数"><a class="markdownIt-Anchor" href="#softmax函数"></a> Softmax函数</h3>
<p>得分集合S中有j个元素，第i个元素的Softmax值为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>S</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>S</mi><mi>i</mi></msub></msup><mrow><mo>∑</mo><msup><mi>e</mi><msub><mi>S</mi><mi>j</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">y_i = Softmax(S_i)= \frac{e^{S_i}}{\sum{e^{S_j}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">t</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6940419999999998em;vertical-align:-0.656677em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0373649999999999em;"><span style="top:-2.5183299999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9595285714285715em;"><span style="top:-2.9714357142857146em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.05764em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5091600000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.05764em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.656677em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br />
这样可以保证某样本中元素的概率和为1</p>
<h3 id="交叉熵损失函数"><a class="markdownIt-Anchor" href="#交叉熵损失函数"></a> 交叉熵损失函数</h3>
<ul>
<li><a href="https://blog.csdn.net/b1055077005/article/details/100152102">https://blog.csdn.net/b1055077005/article/details/100152102</a></li>
<li>公式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>r</mi><mi>o</mi><mi>s</mi><mi>s</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo stretchy="false">(</mo><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo separator="true">,</mo><msub><mi>S</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></msubsup><mrow><mrow><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><msub><mi>l</mi><mi>i</mi></msub></mrow><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mfrac><msup><mi>e</mi><msub><mi>S</mi><mi>i</mi></msub></msup><mrow><msub><mo>∑</mo><mi>j</mi></msub><msup><mi>e</mi><msub><mi>S</mi><mi>j</mi></msub></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">crossentropy( label, S_i )= - \sum_{i=1}^C{ {label_i}log(\frac{e^{S_i}}{\sum_j{e^{S_j}}}) }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.841262em;vertical-align:-0.803897em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0373649999999999em;"><span style="top:-2.5183299999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.14964714285714287em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.46032428571428574em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9595285714285715em;"><span style="top:-2.9714357142857146em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.05764em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5091600000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.05764em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.803897em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span>，注意该公式是对于softmax激活函数的交叉熵损失函数，而sigmoid损失函数还有另一种不同的交叉熵损失函数。</li>
<li>样本正确类别的SoftMax越大，其损失函数数值越小。</li>
</ul>
<p><img src="https://i.loli.net/2021/04/12/i8ZbJB2KajpPrWL.png" alt="" /></p>
<h1 id="卷积神经网络的特点"><a class="markdownIt-Anchor" href="#卷积神经网络的特点"></a> 卷积神经网络的特点</h1>
<p>和全连接神经网络相比，卷积神经网络有两个改进：<strong>参数共享</strong>和<strong>局部连接</strong>。</p>
<h2 id="参数共享"><a class="markdownIt-Anchor" href="#参数共享"></a> 参数共享</h2>
<ul>
<li>滤波器上面的权重参数会重复作用于它滑动过程中的每一个位置。</li>
<li>这样所有位置都只需要学习一个共同的参数合集。</li>
<li>根据某个数据集合训练出的卷积核，往往也被用于另一类似数据集合。比如得到图像的轮廓，这是因为图像结构具有平移不变性。</li>
</ul>
<h2 id="局部连接稀疏连接"><a class="markdownIt-Anchor" href="#局部连接稀疏连接"></a> 局部连接/稀疏连接</h2>
<ul>
<li>在计算机视觉中，图像中的某一块区域中，像素之间的相关性与像素之间的距离同样相关，距离较近的像素间相关性强，距离较远则相关性就比较弱，由此可见局部相关性理论也适用于计算机视觉的图像处理领域。</li>
<li>某一<strong>输出层（feature map）<strong>中一个元素点（这里我们还是称之为像素点）对应的输入层区域的大小，被称作</strong>感受视野（receptive field）</strong>。视野大小等于滤波器的大小。</li>
<li>在高维度输入时，实现全连接是不现实的。可以让每个神经元只连接输入数据的一个局部区域，即每个位置的输出仅仅依赖于输入数据的一个特定区域。</li>
</ul>
<h1 id="经典神经网路的架构"><a class="markdownIt-Anchor" href="#经典神经网路的架构"></a> 经典神经网路的架构</h1>
<h2 id="lenet5"><a class="markdownIt-Anchor" href="#lenet5"></a> LeNet5</h2>
<p><a href="https://cuijiahua.com/blog/2018/01/dl_3.html">https://cuijiahua.com/blog/2018/01/dl_3.html</a><br />
<img src="https://i.loli.net/2021/04/12/xfVZz3uyQGeOBAa.png" alt="" /><br />
<img src="https://i.loli.net/2021/04/12/UOpgXujZ1yveSBw.png" alt="" /></p>
<ul>
<li>Input输入层，本层不算LeNet-5的网络结构</li>
<li>C1层-卷积层<br />
输入尺寸：32*32<br />
卷积核大小：5*5<br />
卷积核种类：6<br />
输出featuremap大小：28*28<br />
可训练参数：（5*5+1） * 6（每个滤波器5*5=25个unit参数和一个bias参数，一共6个滤波器）</li>
<li>S2层-池化层（下采样层）<br />
使用 2*2核 进行池化，于是得到了S2，6个14*14的 特征图（28/2=14）。S2这个pooling层是对C1中的2*2区域内的像素求和乘以一个权值系数再加上一个偏置，然后将这个结果再做一次映射。<br />
采样区域：2*2<br />
采样方式：4个输入相加，乘以一个可训练参数，再加上一个可训练偏置。结果通过sigmoid<br />
采样种类：6</li>
<li>C3层-卷积层<br />
卷积核大小：5*5<br />
卷积核种类：16<br />
输出featureMap大小：10*10 (14-5+1)=10
<ul>
<li>这里是通过对S2的6个特征图特殊组合计算得到的16个特征图</li>
<li>存在的一个方式是：C3的前6个特征图以S2中3个相邻的特征图子集为输入。接下来6个特征图以S2中4个相邻特征图子集为输入。然后的3个以不相邻的4个特征图子集为输入。最后一个将S2中所有特征图为输入。</li>
<li>则：可训练参数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>6</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>3</mn><mo>∗</mo><mn>5</mn><mo>∗</mo><mn>5</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>6</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>4</mn><mo>∗</mo><mn>5</mn><mo>∗</mo><mn>5</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>3</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>4</mn><mo>∗</mo><mn>5</mn><mo>∗</mo><mn>5</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>6</mn><mo>∗</mo><mn>5</mn><mo>∗</mo><mn>5</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>1516</mn></mrow><annotation encoding="application/x-tex">6*(3*5*5+1)+6*(4*5*5+1)+3*(4*5*5+1)+1*(6*5*5+1)=1516</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord">1</span><span class="mord">6</span></span></span></span></li>
</ul>
</li>
<li>S4层-池化层（下采样层）<br />
采样方式：4个输入相加，乘以一个可训练参数，再加上一个可训练偏置。结果通过sigmoid<br />
采样种类：16<br />
输出featureMap大小：5*5（10/2）<br />
神经元数量：5*5*16=400</li>
<li>C5层-卷积层<br />
卷积核大小：5*5<br />
卷积核种类：120 是自己设定的<br />
输出featureMap大小：1*1（5-5+1）</li>
<li>F6层-全连接层<br />
输入：c5 120维向量<br />
计算方式：计算输入向量和权重向量之间的点积，再加上一个偏置，结果通过sigmoid函数输出。<br />
可训练参数:84*(120+1)=10164<br />
F6层有84个节点，对应于一个7x12的比特图，-1表示白色，1表示黑色，这样每个符号的比特图的黑白色就对应于一个编码</li>
<li>Output层-全连接层<br />
<img src="https://i.loli.net/2021/04/17/7GRv6cmbkplFa3Y.png" alt="" /></li>
</ul>
<h2 id="alexnet"><a class="markdownIt-Anchor" href="#alexnet"></a> AlexNet</h2>
<h2 id="vgg"><a class="markdownIt-Anchor" href="#vgg"></a> VGG</h2>
<h2 id="googlenet"><a class="markdownIt-Anchor" href="#googlenet"></a> GoogLeNet</h2>
<h2 id="resnet"><a class="markdownIt-Anchor" href="#resnet"></a> ResNet</h2>
<h1 id="卷积神经网络的反向传播"><a class="markdownIt-Anchor" href="#卷积神经网络的反向传播"></a> 卷积神经网络的反向传播</h1>
<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2>
<ul>
<li>卷积神经网络由卷积层，池化层，全连接层构成，而这也是我们需要进行反向传播部分。</li>
<li>核心： <strong>二维卷积</strong></li>
<li>首先，引入变量 <strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>δ</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">\delta^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></strong> 表示损失函数l对第l层变换结果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">z^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span> （激活函数的参数）的导数，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mi>l</mi></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial z^l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。<br />
在这里首先得到每层的 <strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>δ</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">\delta^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></strong>，然后利用 <strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>δ</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">\delta^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></strong> 逐层对参数进行求导。</li>
</ul>
<h2 id="池化层误差"><a class="markdownIt-Anchor" href="#池化层误差"></a> 池化层误差</h2>
<ul>
<li>描述：常用最大池化或者平均池化两种策略。要使用缩小后区域的误差，还原前一层较大区域的误差。这个过程叫做upsample。
<ul>
<li>对于最大池化，仅有当前区域的最大值贡献了池化后的值，所以最大值被给予了全部的权重1。所以如果该区域的误差为w，则池化前的误差表示为：只有最大值承担所有误差的责任w，其他区域都为0。</li>
<li>对于平均池化，所有元素都贡献了误差，为 误差/总元素数。</li>
</ul>
</li>
<li>公式推导：
<ul>
<li>如果当前池化层为l，则需要使用upsample操作得到当前层输入值的误差 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi><mi>p</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mo stretchy="false">(</mo><msup><mi>δ</mi><mi>l</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">upsample(\delta^l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br />
池化层上一层是卷积层，在卷积操作后会使用激活函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span><br />
所以上一层卷积层的线性误差导数为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>δ</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mi>u</mi><mi>p</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mo stretchy="false">(</mo><msup><mi>δ</mi><mi>l</mi></msup><mo stretchy="false">)</mo><mo>⊙</mo><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta^{l-1}=upsample(\delta^l)\odot\sigma&#x27;(z^{l-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
</ul>
<h2 id="二维卷积层误差"><a class="markdownIt-Anchor" href="#二维卷积层误差"></a> 二维卷积层误差</h2>
<ul>
<li>描述：原图的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>误差，等于卷积结果的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>误差经过零填充后，与卷积核旋转180度后的卷积。</li>
<li>公式推导：上层误差：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>δ</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><msup><mi>δ</mi><mi>l</mi></msup><mo>∗</mo><mi>r</mi><mi>o</mi><mi>t</mi><mn>180</mn><mo stretchy="false">(</mo><msup><mi>W</mi><mi>l</mi></msup><mo stretchy="false">)</mo><mo>⊙</mo><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta^{l-1} = \delta^l * rot180(W^l) \odot \sigma&#x27;(z^{l-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord">1</span><span class="mord">8</span><span class="mord">0</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
<h2 id="张量卷积层误差"><a class="markdownIt-Anchor" href="#张量卷积层误差"></a> 张量卷积层误差</h2>
<p>对于张量卷积层而言，后一层的每一个通道都是由前一层的各个通道经过卷积再求和得到的，和神经网络类似。<br />
<img src="https://i.loli.net/2021/04/19/VbuT2KBaiWpS9Ze.png" alt="" /><br />
第l层的通道1通过卷积影响了第l+1层的通道1和通道2，那么求第l层通道1的delta误差时，就应该根据求得的二维卷积的delta误差传播方式，将第l+1层通道1和通道2的delta误差传播到第l层的delta误差进行简单求和即可。</p>
<ul>
<li>
<p>已知第l层<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>误差，求loss损失函数对该层的卷积核参数的导数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>w</mi><mi>l</mi></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial w^l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<ul>
<li>本层的W是一个4维度张量，可以看作 卷积核个数*通道数 个二维卷积核，每一个卷积核对应了输入图像的对应通道和输出图像的对应通道。我们只需要分析每个二维卷积核的导数，再组成4维张量即可。</li>
<li>已规定 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>δ</mi><mi>l</mi></msup><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>C</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mi>l</mi></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\delta^l=\frac{\partial C}{\partial z^l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
<li>卷积层上的线性关系 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>l</mi></msup><mo>=</mo><msup><mi>a</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><msup><mi>w</mi><mi>l</mi></msup><mo>+</mo><msup><mi>b</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">z^l = a^{l-1} * w^l + b^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span>，a为本层的输入值。</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>w</mi><mi>l</mi></msup></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mi>l</mi></msup></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mi>l</mi></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>w</mi><mi>l</mi></msup></mrow></mfrac><mo>=</mo><msup><mi>δ</mi><mi>l</mi></msup><msup><mi>a</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial w^l} = {\frac{\partial l}{\partial z^l}}\frac{\partial z^l}{\partial w^l}={\delta^l}a^{l-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4003399999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0429199999999998em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>关键就是求卷积核每个元素所对应的输入值a</li>
</ul>
<p><img src="https://i.loli.net/2021/04/19/n2iqjdoIrWtwsX7.png" alt="" /><br />
这个例子中，卷积核上的A的导数即为原图左上角3*3的每个值与\delta相乘后求和。</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">b^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span>是一个列向量，它给<strong>卷积结果</strong>(是在对输入通道卷积求和之后操作，每个卷积核为1个单独的元素，不是列向量)的每一通道都加上了同一个标量。所以在反向传播时，它的<strong>导数</strong>等于卷积结果的delta误差在每一个通道上将所有delta误差进行<strong>求和</strong>的结果。因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>b</mi><mi>l</mi></msup></mrow></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\frac{\partial z}{\partial b^l}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>b</mi><mi>l</mi></msup></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mi>l</mi></msup></mrow></mfrac><mo>∗</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mi>l</mi></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>b</mi><mi>l</mi></msup></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mi>l</mi></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial b^l} = \frac{\partial l}{\partial z^l}*\frac{\partial z^l}{\partial b^l} = \frac{\partial l}{\partial z^l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.4003399999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0429199999999998em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ul>
</li>
</ul>
<h1 id="训练卷积神经网络的过程"><a class="markdownIt-Anchor" href="#训练卷积神经网络的过程"></a> 训练卷积神经网络的过程</h1>
<ol>
<li>初始化神经网络，设定激活函数，网络结构。初始化卷积层卷积核W和偏置b，全连接层权重W和偏置b。设置迭代次数，batch和学习率。</li>
<li>从训练集合中取出一个batch的数据。</li>
<li>从batch中取出一个数据，包含输入x和标注y。</li>
<li>输入x，得到各层输出参数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">z^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">a^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span>。</li>
<li>根据输出和y得到损失函数l的值。</li>
<li>计算输出层的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>δ</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">\delta^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span>.</li>
<li>后向传播求得每层误差<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>δ</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">\delta^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span>：
<ul>
<li>全连接层：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>δ</mi><mi>l</mi></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>W</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><msup><mi>δ</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>⊙</mo><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mi>l</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta^l = (W^{l+1})^T \delta^{l+1} \odot \sigma&#x27;(z^l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>卷积层：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>e</mi><mi>l</mi><mi>t</mi><msup><mi>a</mi><mi>l</mi></msup><mo>=</mo><msup><mi>δ</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>∗</mo><mi>R</mi><mi>O</mi><mi>T</mi><mn>180</mn><mo stretchy="false">(</mo><msup><mi>w</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>⊙</mo><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mi>l</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">delta^l =\delta^{l+1} * ROT180(w^{l+1}) \odot \sigma&#x27;(z^l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">1</span><span class="mord">8</span><span class="mord">0</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>池化层：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>e</mi><mi>l</mi><mi>t</mi><msup><mi>a</mi><mi>l</mi></msup><mo>=</mo><mi>u</mi><mi>p</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mo stretchy="false">(</mo><mi>d</mi><mi>e</mi><mi>l</mi><mi>t</mi><msup><mi>a</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>⊙</mo><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mi>l</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">delta^l = upsample(delta^{l+1}) \odot \sigma&#x27;(z^l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
<li>利用每一层的delta误差求出损失函数对该层参数的导数：
<ul>
<li>全连接层：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>w</mi><mi>l</mi></msup></mrow></mfrac><mo>=</mo><msup><mi>δ</mi><mi>l</mi></msup><mo stretchy="false">(</mo><msup><mi>a</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial w^l} = \delta^l (a^{l-1})^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>,    <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>b</mi><mi>l</mi></msup></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mi>l</mi></msup></mrow></mfrac><mo>=</mo><msup><mi>δ</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial b^l}=\frac{\partial l}{\partial z^l}=\delta^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></li>
<li>全连接层：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>w</mi><mi>l</mi></msup></mrow></mfrac><mo>=</mo><msup><mi>δ</mi><mi>l</mi></msup><mo>∗</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>a</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial w^l} = \delta^l *\sigma(a^{l-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>,    <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>b</mi><mi>l</mi></msup></mrow></mfrac><mo>=</mo><msub><mo>∑</mo><mi>x</mi></msub><msub><mo>∑</mo><mi>y</mi></msub><msup><mi>δ</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">\frac{\partial l}{\partial b^l}=\sum_{x}\sum_{y}\delta^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2375279999999997em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285713em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.284926em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
</li>
<li>将求得的导数累加到batch求得的导数和之上，初始化为0，重复到3直到batch结束。</li>
<li>梯度下降</li>
<li>跳转到步骤2直到迭代完毕。</li>
</ol>
]]></content>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>浅层神经网络</title>
    <url>/2021/04/11/machine%20learninng/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B5%85%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<h2 id="浅层神经网络"><a class="markdownIt-Anchor" href="#浅层神经网络"></a> 浅层神经网络</h2>
<ul>
<li>双层结构：输入层，隐藏层和输出层。在计算神经网络的层数时，不会计算输入层，所以第一层为隐藏层，第二层为输出层。</li>
<li>正向传播：利用权重和偏移量得到中间结果，然后利用激活函数处理中间结果得到中间值。这个激活后的中间值会被当成下一步的中间值。<br />
隐藏层中的每一个节点受到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的影响都不同，因此对应的权重w和偏移量b也不同。隐藏层的每一个节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>a</mi><mn>1</mn><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">a^{[1]}_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span></span>都有自己的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>w</mi><mi>i</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">w^{[1]}_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>b</mi><mi>i</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">b^{[1]}_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span></span>，上标表示在隐藏层的第几层，下标表示该层第i个节点的权重向量。可以讲同一层的点的w和b使用矩阵表示，并且使<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">z=wx+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></li>
</ul>
<h3 id="bp后向传播算法"><a class="markdownIt-Anchor" href="#bp后向传播算法"></a> BP后向传播算法</h3>
<ul>
<li>描述：利用损失函数进行反向求导来优化参数（w，b）<br />
逻辑回归的反向传播过程其实就是最简单的BP算法应用。</li>
</ul>
<h4 id="单个样本的正向传播"><a class="markdownIt-Anchor" href="#单个样本的正向传播"></a> 单个样本的正向传播：</h4>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mover><mo stretchy="true">→</mo><mpadded width="+0.6em" lspace="0.3em"><mrow><msup><mi>w</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup><mo separator="true">,</mo><msup><mi>b</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup></mrow></mpadded></mover><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>z</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><msup><mi>w</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup><mi>x</mi><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><mi>t</mi><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mover><mo stretchy="true">→</mo><mpadded width="+0.6em" lspace="0.3em"><mrow><msup><mi>w</mi><mrow><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msup><mo separator="true">,</mo><msup><mi>b</mi><mrow><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msup></mrow></mpadded></mover><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>z</mi><mrow><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><msup><mi>w</mi><mrow><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msup><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mover><mo stretchy="true">→</mo><mpadded width="+0.6em" lspace="0.3em"><mi>y</mi></mpadded></mover><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">(</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x \xrightarrow {w^{[1]}, b^{[1]}}
\begin{pmatrix}
 z^{[1]} = w^{[1]} x + b^{[1]} \\
 a^{[1]} = t( z^{[1]} ) \\
\end{pmatrix}
\xrightarrow {w^{[2]}, b^{[2]}}
\begin{pmatrix}
 z^{[2]} = w^{[2]}a^{[1]}  + b^{[2]} \\
 \hat{y}^{[1]} = \sigma( z^{[2]} ) \\
\end{pmatrix}
\xrightarrow {y}(L(\hat{y},y))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3096999999999999em;vertical-align:-0.010999999999999899em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel x-arrow"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2987em;"><span style="top:-3.322em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight x-arrow-pad"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-2.689em;"><span class="pstrut" style="height:2.7em;"></span><span class="hide-tail" style="height:0.522em;min-width:1.469em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.010999999999999899em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4960000000000004em;vertical-align:-0.9980000000000004em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.498em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.3619999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9980000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel x-arrow"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2987em;"><span style="top:-3.322em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight x-arrow-pad"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-2.689em;"><span class="pstrut" style="height:2.7em;"></span><span class="hide-tail" style="height:0.522em;min-width:1.469em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.010999999999999899em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4960000000000004em;vertical-align:-0.9980000000000004em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.498em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.3619999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">2</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9980000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel x-arrow"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.923392em;"><span style="top:-3.322em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight x-arrow-pad"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="svg-align" style="top:-2.689em;"><span class="pstrut" style="height:2.7em;"></span><span class="hide-tail" style="height:0.522em;min-width:1.469em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.01100000000000001em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>y表示数据集的标注值，L为loss函数。</p>
<ul>
<li>在神经网络中，损失函数使用平方差函数</li>
<li>过程：梯度下降的思想，首先我们拟定初始参数，一般是一组接近0的数，然后输入样本值x，通过正向计算得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>，然后得到损失函数L。<br />
最后对参数进行提哦啊正，根据上次的参数值得到本次参数值。</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><mo>=</mo><mi>W</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mspace width="2em"/><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">W = W - \alpha\frac{\partial L}{\partial W} \qquad
b = b - \alpha\frac{\partial L}{\partial b}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>为学习率</p>
<ul>
<li>使用链式法则进行后向求导：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow></mfrac><mo>⊙</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mn>2</mn></msup></mrow></mfrac><mo>⊙</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mn>2</mn></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>a</mi><mn>1</mn></msup></mrow></mfrac><mo>⊙</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>a</mi><mn>1</mn></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mn>1</mn></msup></mrow></mfrac><mo>⊙</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mn>1</mn></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>w</mi><mn>1</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial \hat{y}}\odot \frac{\partial \hat{y}}{\partial z^2}\odot \frac{\partial z^2}{\partial a^1}\odot \frac{\partial a^1}{\partial z^1}\odot \frac{\partial z^1}{\partial w^1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3612159999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.277216em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.36292em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.36292em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.36292em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">b^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span>同理。</li>
</ul>
<h4 id="多个样本的正向传播"><a class="markdownIt-Anchor" href="#多个样本的正向传播"></a> 多个样本的正向传播</h4>
<p>求出每一个样本的dw和db没，然后相加在除以样本数量n。</p>
]]></content>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>深层神经网络</title>
    <url>/2021/04/11/machine%20learninng/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<h4 id="约定"><a class="markdownIt-Anchor" href="#约定"></a> 约定</h4>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></msub><mi mathvariant="normal">/</mi><msub><mi>L</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">L_{[0]} / L_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：输入层<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">L_{[1]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>：第一层输出层<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">n^{[i]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span>：第i层的节点数量<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">z^{[i]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span>：第i层的线性变换之后的结果，也称中间结果<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">a^{[i]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span>：第i层的激活函数的返回值，也称激活值。同样，该值也是第i+1层的输入值<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>a</mi><mi>n</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">a^{[i]}_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161392em;vertical-align:-0.11659199999999997em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>：第i层的第n个元素的激活值<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>g</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">g^{[i]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span>：第i层的激活函数<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><msub><mo stretchy="false">]</mo><mi>n</mi></msub></mrow></msup></mrow><annotation encoding="application/x-tex">x^{[i]_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight"><span class="mclose mtight">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>：第i个样本的第n个特征值<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\hat y^{[i]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span>：第i个样本的预测值<br />
于是有标记关系：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msup><mi>z</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>w</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup><msup><mo stretchy="false">)</mo><mrow><mo stretchy="false">[</mo><mi>T</mi><mo stretchy="false">]</mo></mrow></msup><mo>∗</mo><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><msup><mi>g</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
&amp; z^{[i]} = (w^{[i]}) ^ {[T]} * a^{[i-1]} + b^{[i]}\\
&amp; a^{[i]} = g^{[i]}(z^{[i]})
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.196em;vertical-align:-1.348em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.848em;"><span style="top:-3.848em;"><span class="pstrut" style="height:2.9379999999999997em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.9379999999999997em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.348em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.848em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.3120000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.348em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h4 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h4>
<p>每一个节点实际上表示一个线性变化与一个非线性变换的符合。</p>
<h5 id="反向传播"><a class="markdownIt-Anchor" href="#反向传播"></a> 反向传播</h5>
<ul>
<li>在反向传播中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">L_{[n]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>层的输入是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">L_{[n+1]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>层的输出</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">L_{[n]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>层输出的是三个导数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">d_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">d_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">d_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">d_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">d_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>直接用于当前层的参数的梯度下降。<br />
而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">d_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>则被输出到上一层，以继续求得上一层的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">d_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">d_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mi>t</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>z</mi><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a = t(z), z=wx+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></li>
<li>由上一章节求反向传播的偏导数可以得到，问题主要在于求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。<br />
向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">da^{[n+1]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span>中的每一个元素分别对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">da^{[n]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span>求偏导数，然后再对这些结果求和就得到了该单元的偏导数。</li>
<li>根据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>w</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></msup><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a^{[n+1]} = σ(z^{[n]})= σ(w^{[n]}a^{[n]}+b^{[n]})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，从后向前推导：
<ol>
<li>先对其激活函数求偏导数</li>
<li>然后对线性变换求偏导数<br />
于是求得当前层的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><msup><mi>w</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></msup></msub></mrow><annotation encoding="application/x-tex">d_{w^{[n]}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9250649999999999em;vertical-align:-0.23062499999999997em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4693750000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8220357142857143em;"><span style="top:-2.8220357142857138em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23062499999999997em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><msup><mi>b</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></msup></msub></mrow><annotation encoding="application/x-tex">d_{b^{[n]}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9250649999999999em;vertical-align:-0.23062499999999997em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4693750000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8220357142857143em;"><span style="top:-2.8220357142857138em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23062499999999997em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><msup><mi>a</mi><mrow><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></msup></msub></mrow><annotation encoding="application/x-tex">d_{a^{[n]}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9250649999999999em;vertical-align:-0.23062499999999997em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4693750000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8220357142857143em;"><span style="top:-2.8220357142857138em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23062499999999997em;"><span></span></span></span></span></span></span></span></span></span></li>
</ol>
</li>
</ul>
<h5 id="参数与超参数"><a class="markdownIt-Anchor" href="#参数与超参数"></a> 参数与超参数</h5>
<ul>
<li>参数：不断变化的值，即权重w和偏置b，通常会随机设置为接近于0的数字。</li>
<li>超参数：开发者人为设定的值，一旦设定好就使用这个固定的值。依赖于经验。<br />
种类有学习率，迭代次数，隐藏层的层数，但愿书，激活函数，冲量和批量等。</li>
</ul>
]]></content>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习简介</title>
    <url>/2021/04/11/machine%20learninng/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h2 id="深度学习框架的优势"><a class="markdownIt-Anchor" href="#深度学习框架的优势"></a> 深度学习框架的优势</h2>
<ol>
<li>简化计算图的搭建<br />
<img src="https://i.loli.net/2021/04/11/Cir2TsJO4EzHNWf.png" alt="" /></li>
</ol>
<ul>
<li>计算图是一种描述函数的语言，其中节点代表输入值，边代表函数操作。</li>
<li>计算图可以用于描述表达式，可以更加精确描述网络中的参数传播过程。</li>
</ul>
<ol start="2">
<li>
<p>简化偏导数的计算<br />
计算图以模块化的方式完整表达了函数体的内部逻辑关系，所以对复杂函数求导的过程就变成了简单地从输入到输出进行遍历的过程。绝大多数深度学习框架都选择基于计算图的声明式求解。</p>
</li>
<li>
<p>高效运行<br />
移植性：可以将代码部署到GPU或CPU上</p>
</li>
</ol>
<h2 id="深度学习的单层神经网络-逻辑回归"><a class="markdownIt-Anchor" href="#深度学习的单层神经网络-逻辑回归"></a> 深度学习的单层神经网络 – 逻辑回归</h2>
<ul>
<li>典型的深度学习的计算过程包含三个过程：
<ol>
<li>正向传播 Forward Propagating</li>
<li>反向传播 Backward Propagating</li>
<li>梯度下降 Gradient Descent</li>
</ol>
</li>
<li>损失函数：线性回归中，损失函数通常为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L(\hat{y},y)=\frac{1}{2}(\hat{y}-y)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，属于凸优化问题，但是在逻辑回归中，该损失函数的优化问题将会变成非凸的。<br />
所以逻辑回归中通常使用对数损失函数(Logarithmic Loss Function): <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">[</mo><mi>y</mi><mi>l</mi><mi>o</mi><mi>g</mi><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">L(\hat{y},y) = -[ylog y^2 + (1-y)log(1-\hat{y})]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></li>
<li>成本函数：全部训练样本的总成本：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><mo>∑</mo><mrow><mi>L</mi><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msup><mo separator="true">,</mo><msup><mi>y</mi><mi>i</mi></msup><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">J(w,b)=\frac{1}{m}\sum{L(\hat{y}^i,y^i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></li>
<li>向量化：通过矩阵相乘来代替循环遍历的诸葛相乘以缩短训练时间。</li>
</ul>
<h3 id="凸函数和凸优化问题"><a class="markdownIt-Anchor" href="#凸函数和凸优化问题"></a> 凸函数和凸优化问题</h3>
<ul>
<li>凸函数：函数表示的区域任意两点连成的直线上的任意一点都落在该函数表示的区域内部</li>
<li>凸优化问题：定义在凸集中的凸函数最优化的问题。<strong>局部最优解同时也是全局最优解</strong></li>
</ul>
<h2 id="激活函数"><a class="markdownIt-Anchor" href="#激活函数"></a> 激活函数</h2>
<p>数据的分布绝大多数是非线性的，而一般神经网络的计算是线性的，引入激活函数，是在神经网络中引入非线性，强化网络的学习能力。所以激活函数的最大特点就是非线性。</p>
<ul>
<li>Sigmoid激活函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\sigma(x) = \frac{1}{1+e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>
<ul>
<li>取值范围：(0, 1)</li>
<li>缺点：计算量大，反向传播求误差梯度时，求导涉及除法，</li>
<li>Sigmoid导数取值范围是[0, 0.25]，由于神经网络反向传播时的“链式反应”，很容易就会出现梯度消失的情况。例如对于一个10层的网络， 第10层的误差相对第一层卷积的参数的梯度将是一个非常小的值，这就是所谓的 <strong>“梯度消失”</strong>。</li>
<li>Sigmoid的输出不是0均值（即zero-centered）；这会导致后一层的神经元将得到上一层输出的非0均值的信号作为输入，随着网络的加深，会<strong>改变数据的原始分布</strong>。</li>
</ul>
</li>
<li>tanh激活函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">tanh(x) = \frac{e^{x}-e^{-x}}{e^{x}+e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3906960000000002em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.987365em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8476642857142858em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>
<ul>
<li>tanh的输出范围时(-1, 1)，解决了Sigmoid函数的不是zero-centered输出问题</li>
<li>tanh导数范围在(0, 1)之间，相比sigmoid的(0, 0.25)，梯度消失（gradient vanishing）问题会得到缓解，但仍然还会存在。</li>
</ul>
</li>
<li>ReLu激活函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>l</mi><mi>u</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">relu=max(0, x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span><br />
<a href="https://zhuanlan.zhihu.com/p/73214810">https://zhuanlan.zhihu.com/p/73214810</a>
<ul>
<li>ReLU的有效导数是常数1，解决了深层网络中出现的梯度消失问题，也就使得深层网络可训练。</li>
<li>对ReLU求导，在输入值分别为正和为负的情况下，导数是不同的</li>
<li>要防范ReLU的梯度爆炸</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>INT202 AVL树和深度有界查找树</title>
    <url>/2021/04/16/inclass/INT202/INT202-AVLTree/</url>
    <content><![CDATA[<h1 id="avl-tree"><a class="markdownIt-Anchor" href="#avl-tree"></a> AVL Tree</h1>
<h2 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h2>
<ul>
<li><strong>高度平衡规则 height-balance property</strong>：对于树T的每个内部节点v，v的字节点的高度最多相差1。</li>
</ul>
<p><img src="https://i.loli.net/2021/04/16/DxskpIMz9wZQ5PW.jpg" alt="" /></p>
<ul>
<li><strong>定理</strong>：一颗存储n个数据节点的AVL树的高度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span><br />
证明：假设某棵树的<strong>最少的内部节点数量</strong>为n(h)，高度为h，则有n(1)=1，n(2)=2。<br />
则对于h&gt;2，n(h)=1+n(h-1)+n(h-2)&gt;2n(h-2)<br />
所以每当h增加2，原式至少加倍。则有n(h)&gt;2^{i}n(h-2i)<br />
因为已知n(1)与n(2)，选择h-2i&gt;=1，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mo stretchy="false">⌈</mo><mrow><mi>h</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i=\lceil{h/2}\rceil-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathdefault">h</span><span class="mord">/</span><span class="mord">2</span></span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>:</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>&gt;</mo><msup><mn>2</mn><mrow><mo stretchy="false">⌈</mo><mrow><mi>h</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mi>n</mi><mo stretchy="false">(</mo><mi>h</mi><mo>−</mo><mn>2</mn><mo stretchy="false">⌈</mo><mrow><mi>h</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mo stretchy="false">⌉</mo><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>&gt;</mo><mo>=</mo><msup><mn>2</mn><mrow><mo stretchy="false">⌈</mo><mrow><mi>h</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>&gt;</mo><mo>=</mo><msup><mn>2</mn><mrow><mo stretchy="false">⌈</mo><mrow><mi>h</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>&gt;</mo><mi>h</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>h</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>&lt;</mo><mn>2</mn><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>+</mo><mn>2</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
n(h) &amp;&gt; 2^{\lceil {h/2} \rceil-1}*n(h-2\lceil{h/2}\rceil+2)\\
     &amp;&gt;= 2^{\lceil {h/2} \rceil-1}*n(1)\\
     &amp;&gt;= 2^{\lceil {h/2} \rceil-1}\\
\\
logn(h) &amp;&gt; h/2 - 1\\
h &amp;&lt; 2logn(h)+2\\
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.294em;vertical-align:-4.397000000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.897em;"><span style="top:-6.9590000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span><span style="top:-5.361em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.762999999999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.262999999999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-0.7629999999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span><span style="top:0.7370000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.397em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.897em;"><span style="top:-6.9590000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌈</span><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span><span class="mclose mtight">⌉</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mopen">⌈</span><span class="mord"><span class="mord mathdefault">h</span><span class="mord">/</span><span class="mord">2</span></span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span><span style="top:-5.361em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌈</span><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span><span class="mclose mtight">⌉</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-3.762999999999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌈</span><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span><span class="mclose mtight">⌉</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-0.762999999999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">h</span><span class="mord">/</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:0.737000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.397000000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>所以存储n个关键字的AVL树的高度最多为 2logn(h)+2。</p>
<h2 id="插入操作"><a class="markdownIt-Anchor" href="#插入操作"></a> 插入操作</h2>
<ul>
<li>当插入一个外部节点w，可能会使节点变为<strong>不平衡的unbalanced</strong>。</li>
<li><strong>操作</strong>：<br />
从点w向上找到第一个非平衡点z<br />
令y表示z的子节点，z的祖先节点；<br />
令x表示y的子节点，x可能是w点或者w点的祖先节点。<br />
然后通过<strong>三节点重构法 tri-node restructuring</strong>重构根为z的子树：</li>
</ul>
<p><img src="https://i.loli.net/2021/04/16/ORCyKHEkWxFnuv8.jpg" alt="" /><br />
<img src="https://i.loli.net/2021/04/16/QOcr5gvhP6pfGjZ.jpg" alt="" /></p>
<ul>
<li>常常称这种方法为<strong>旋转rotation</strong>：<br />
<img src="https://i.loli.net/2021/04/16/mJZ4WRa8ir9xgYB.jpg" alt="" /></li>
</ul>
<h2 id="删除操作"><a class="markdownIt-Anchor" href="#删除操作"></a> 删除操作</h2>
<ul>
<li>首先模仿普通的二叉树上的操作，如果违反了高度平衡性质。则从先前被删除节点的父节点w到根路径上找不平衡的节点进行重构。<br />
单次重构可能不能使树恢复平衡，这时需要继续向上找节点重构，直到根。<br />
<img src="https://i.loli.net/2021/04/16/Nnk3W47ydqFAXzS.jpg" alt="" /></li>
</ul>
<h2 id="性能"><a class="markdownIt-Anchor" href="#性能"></a> 性能</h2>
<ul>
<li>单次重构 restructure：O(1)</li>
<li>搜索 Search：O(log n)</li>
</ul>
<p>因为插入和删除都是由一次搜索和一次或者多次重构组成的，所以：</p>
<ul>
<li>插入 Insertion：O(log n)</li>
<li>删除 Removal：O(log n)</li>
</ul>
<h1 id="multi-way-search-tree-多路搜索树"><a class="markdownIt-Anchor" href="#multi-way-search-tree-多路搜索树"></a> Multi-Way Search Tree 多路搜索树</h1>
<p>深度有界查找树：树的查找操作往往和其深度有关系。有些树会定义一个深度函数使得每个外部节点的（伪）深度相同。如此，该树的查找和更新操作的时间复杂度为O(log n)。</p>
<h2 id="定义-2"><a class="markdownIt-Anchor" href="#定义-2"></a> 定义</h2>
<ol>
<li>是一棵有序树</li>
<li>树中的内部节点有<strong>最少两个</strong>子节点</li>
<li>并且每个节点存储了一个<strong>集合</strong>，集合元素为形如 <strong>(k<sub>i</sub>,o<sub>i</sub>)<strong>的键值对。<br />
每个节点的集合大小为</strong>该子节点数量-1</strong></li>
<li>每个节点v存储了键k<sub>1</sub>, k<sub>2</sub>, … k<sub>d-1</sub>，子节点为 v<sub>1</sub>, v<sub>2</sub>, … v<sub>d</sub>：
<ul>
<li>v1 &lt; k1</li>
<li>k<sub>i-1</sub> &lt; v<sub>i</sub> &lt; k<sub>i</sub></li>
<li>v<sub>d</sub> &gt; k<sub>d</sub></li>
</ul>
</li>
<li>外部节点即叶子节点不存储数据项，只作为占位符。</li>
</ol>
<ul>
<li>一棵二叉树是一个特殊的多路查找树。</li>
</ul>
<h2 id="查找操作"><a class="markdownIt-Anchor" href="#查找操作"></a> 查找操作</h2>
<p><img src="https://i.loli.net/2021/04/16/PQDwRkrzT47b3En.jpg" alt="" /></p>
<h1 id="24树"><a class="markdownIt-Anchor" href="#24树"></a> (2,4)树</h1>
<h2 id="定义-3"><a class="markdownIt-Anchor" href="#定义-3"></a> 定义</h2>
<ul>
<li>大小性质：每个节点最多有4个子节点</li>
<li>深度性质：所有外部节点的深度相同</li>
</ul>
<p><img src="https://i.loli.net/2021/04/16/DboF8xMasH7cRwm.jpg" alt="" /></p>
<h2 id="插入操作-2"><a class="markdownIt-Anchor" href="#插入操作-2"></a> 插入操作</h2>
<p>从根节点向下查找，如果待插入节点未出现，则应该查找停止在叶节点z处。<br />
设v是z的父节点，把数据项插入在节点v处，并且给v添加一个新的子节点w，该w为z左边的外部节点。<br />
这时可能会出现<strong>上溢overflow</strong>现象：插入之后子节点数变为5，此时需要<strong>分裂split</strong>操作。</p>
<ul>
<li>时间复杂度：O(log n)</li>
</ul>
<h3 id="分裂操作"><a class="markdownIt-Anchor" href="#分裂操作"></a> 分裂操作</h3>
<p><strong>简单来说，将第三个数据项向上抛给父节点。</strong><br />
<img src="https://i.loli.net/2021/04/16/NYa8wkrM5Xeisop.jpg" alt="" /></p>
<ul>
<li>时间复杂度：O(1)</li>
<li>分裂操作完成后，v的父节点u会出现新的上溢，则需要继续向上分裂传播。</li>
</ul>
<p><img src="https://i.loli.net/2021/04/16/CEc63PyvDWz1J8x.jpg" alt="" /></p>
<h2 id="删除操作-2"><a class="markdownIt-Anchor" href="#删除操作-2"></a> 删除操作</h2>
<ul>
<li>首先从上到下找到待删除节点<br />
<strong>简单来说，就是使用下一个比该元素大的替换掉</strong></li>
</ul>
<ol>
<li>如果该节点在倒数第二层，则直接删除，并且删除其右子叶节点。</li>
<li>如果该节点在内部，假设其存储在节点z的第i个数据项(k<sub>i</sub>, x<sub>i</sub>)中，将数据项(k<sub>i</sub>, x<sub>i</sub>)与z的第i个子节点的<strong>最左</strong>内部节点v交换。如果交换后数据项满足1）则删除，否则重复该操作。<br />
<img src="https://i.loli.net/2021/04/16/Oht8A3gqsbLIpxy.jpg" alt="" /></li>
</ol>
<h3 id="下溢-underflow"><a class="markdownIt-Anchor" href="#下溢-underflow"></a> 下溢 underflow**</h3>
<p>在删除数据项后，原本的 2-nodes节点v（有两个子节点），会成为一个没有数据项仅有一个子节点的1-node节点。</p>
<ul>
<li>为了修正<strong>下溢情况</strong><br />
1）如果v的临近节点存在一个3-nodes或者4-node的兄弟节点w，进行<strong>转移transfer</strong>操作：<br />
<strong>简单来说，就是从父节点中拿一个节点，然后兄弟节点还回去。（自己的债兄弟替你还。</strong><br />
            将w与v的父节点数据值转移到v中<br />
           将w靠近v的数据项转移到父节点对应位置中<br />
<img src="https://i.loli.net/2021/04/17/PHT6Len72R9jkvG.jpg" alt="" /><br />
2）如果v只有一个临近节点或者v的两个临近节点都是2-nodes节点，进行<strong>合并 fusion</strong>操作：<br />
<strong>简单来说，就是兄弟俩都不富裕，从父亲那里拿一个元素，兄弟二人合并。</strong><br />
           将已经进行删除操作的空节点与临近节点进行合并，即只保留临近节点<br />
           从父节点中转移一个数据项填充到合并后的节点中</li>
</ul>
<p><img src="https://i.loli.net/2021/04/17/TxV6t9cskNypoMQ.jpg" alt="" /></p>
<p><img src="https://i.loli.net/2021/04/17/wOo8Au6xfNlPEZp.jpg" alt="" /></p>
<p><img src="https://i.loli.net/2021/04/17/mn1wqPkSFM3Azha.jpg" alt="" /></p>
<h1 id="时间复杂度总结"><a class="markdownIt-Anchor" href="#时间复杂度总结"></a> 时间复杂度总结</h1>
<p>对于findElement，insertElement，removeElement操作</p>
<ul>
<li>BST：所有的操作都是O(h)，h为其高度</li>
<li>AVL Tree，(2,4) Tree：所有的操作都是O(log n)，n为节点数</li>
</ul>
<h2 id="黑红树-p113"><a class="markdownIt-Anchor" href="#黑红树-p113"></a> 黑红树 P113</h2>
]]></content>
      <tags>
        <tag>INT202</tag>
      </tags>
  </entry>
  <entry>
    <title>INT202-DataStructure</title>
    <url>/2021/04/19/inclass/INT202/INT202-DataStructure/</url>
    <content><![CDATA[<h2 id="stack-栈"><a class="markdownIt-Anchor" href="#stack-栈"></a> Stack 栈</h2>
<h3 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h3>
<ul>
<li>一个对象容器，遵循后进先出原则(last in first out)。只有最近出入的对象才可以被删除。</li>
</ul>
<h3 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h3>
<ol>
<li>push(Obj)</li>
<li>pop()</li>
<li>isEmpty()</li>
<li>isFull()</li>
<li>initialize()</li>
</ol>
<h3 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h3>
<p><img src="https://i.loli.net/2021/04/19/GCWjbXMKPfB57aH.jpg" alt="" /></p>
<h3 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h3>
<ol>
<li>可以使用栈进行递归和过程调用</li>
<li><strong>表示运算</strong><br />
将元素从前向后压入栈。遇到运算符号则先取出一个，然后放置运算符号，然后再取出一个进行运算。将结果继续压入栈。<br />
比如：&quot;x y w z / z *&quot;表示 x*(y-w/z)；而 “x y w / z - *” 则表示 x*(y/w-z)</li>
<li>逃出迷宫：栈中记录当前位置可以选择的下一步的坐标。从栈中弹出一个元素，表示行走到这个格子，然后继续压入可以走的下一步坐标。一直重复直终点坐标被弹出栈。</li>
</ol>
<h2 id="queue-队列"><a class="markdownIt-Anchor" href="#queue-队列"></a> Queue 队列</h2>
<h3 id="定义-2"><a class="markdownIt-Anchor" href="#定义-2"></a> 定义</h3>
<ul>
<li>先进先出原则 (FIFO)，只有队列中存在时间最早的元素才能被取出。</li>
</ul>
<h3 id="方法-2"><a class="markdownIt-Anchor" href="#方法-2"></a> 方法</h3>
<ol>
<li>enqueue(o)：将对象o插入队列尾</li>
<li>dequeue()：删除并且返回头对象，队列为空时出错。</li>
<li>size()</li>
<li>isEmpty()</li>
<li>isFull()</li>
<li>front()：返回但不删除头元素，队列为空时出错。</li>
</ol>
<h3 id="实现-2"><a class="markdownIt-Anchor" href="#实现-2"></a> 实现</h3>
<p>使用数组表示，定义两个变量f和r：</p>
<ul>
<li>f：第一个元素Q的下标</li>
<li>r：下一个可用用单元的下标</li>
</ul>
<p>起初,队列为空，f=r=0。进行dequeue操作时，将f递增至下一个单元的下标。进行enqueue时，将r递增至Q中下一个可用单元的下标。<br />
不断插入和拿出操作可能使f和r都移到了队列最后，但是此时队列为空，所以设置<strong>循环数组</strong>。每次递增的时候，我们进行取模计算(f+1) mod N或者(r+1) mod N。</p>
<p><img src="https://i.loli.net/2021/04/19/XSnVbjQaKwdWL37.jpg" alt="" /></p>
<h3 id="应用-2"><a class="markdownIt-Anchor" href="#应用-2"></a> 应用</h3>
<ol>
<li>利用队列进行多道程序设计(multiprogramming)，使用循环协议：将所有的可运行线程存储在队列Q中，在CPU可以提供工作时，对Q进行dequeue操作，得到线程T。在运行线程T之前，会启动一个计时器，CPU于是运行进程直到进程结束/阻塞或者计时器停止。当计时器结束之后，CPU会将程序计数器压入T的方法栈顶然后将T放置在Q队尾。</li>
</ol>
<h2 id="list-adt-表"><a class="markdownIt-Anchor" href="#list-adt-表"></a> List ADT 表</h2>
<h3 id="定义-3"><a class="markdownIt-Anchor" href="#定义-3"></a> 定义</h3>
<p>每个节点存储一个元素，和指向下一个节点的指针。</p>
<h3 id="方法-3"><a class="markdownIt-Anchor" href="#方法-3"></a> 方法</h3>
<ul>
<li>引用方法</li>
</ul>
<ol>
<li>first()：返回第一个元素</li>
<li>last()：返回最后一个元素</li>
<li>isFirst§</li>
<li>isLast§</li>
<li>before§：返回p之前的位置</li>
<li>after§</li>
</ol>
<ul>
<li>更新方法</li>
</ul>
<ol>
<li>replaceElement(p, e)：使用e替换位置p处的元素</li>
<li>swapElement(p, q)：交换p，q处的元素</li>
<li>insertFirst(e)</li>
<li>insertLast(e)</li>
<li>insertBefore(p, e)：位置p前插入元素e</li>
<li>insertAfter(p, e)</li>
<li>remove§</li>
</ol>
]]></content>
      <tags>
        <tag>INT202</tag>
      </tags>
  </entry>
  <entry>
    <title>INT202-FundamentalTecs</title>
    <url>/2021/04/18/inclass/INT202/INT202-FundamentalTecs/</url>
    <content><![CDATA[<h2 id="贪心算法-greedy-method"><a class="markdownIt-Anchor" href="#贪心算法-greedy-method"></a> 贪心算法 Greedy Method</h2>
<ul>
<li>贪心算法并不总是导致最优解。</li>
<li>可以用贪心算法得到最优解的问题，称具有贪心选择性质 greedy-choice property。</li>
</ul>
<h3 id="分数背包问题-fractional-knapsack-problem-fkp"><a class="markdownIt-Anchor" href="#分数背包问题-fractional-knapsack-problem-fkp"></a> 分数背包问题 Fractional Knapsack Problem / FKP</h3>
<ul>
<li>允许得到某些物品的任意部分，所以应该多拿价值(总价值/总质量)大的的物体</li>
<li>符号：x为物品数量，b为物品总价值，w为物品总重量</li>
<li>贪心算法简介：
<ol>
<li>多拿价值最大的</li>
<li>通过堆数据结构，每此拿出物体的时间为O(log n)</li>
<li>如果某一物体别拿完了，则转向下一个价值最大的物体，直到装满。</li>
</ol>
</li>
</ul>
<p><img src="https://i.loli.net/2021/04/18/xSZeQM6bmXPFBWT.jpg" alt="" /></p>
<ul>
<li>时间复杂度为O(nlog n)</li>
</ul>
<h3 id="间隔调度-interval-scheduling"><a class="markdownIt-Anchor" href="#间隔调度-interval-scheduling"></a> 间隔调度 Interval Scheduling</h3>
<ul>
<li>我们有一组事务需要处理，每个事务i都有一个开始时间s<sub>i</sub>和一个完成时间f<sub>i</sub>。</li>
<li>如果两个事务i，j满足，f<sub>i</sub> &lt; s<sub>j</sub>或者f<sub>j</sub> &lt; s<sub>i</sub>，我们称这两个事务是不冲突的 non-conflicting。</li>
<li>策略：1）找时间最短的事务 2）找最早结束的事务-&gt;使机器最早空闲</li>
<li>算法：(<strong>take short intervals first</strong>) 选择最早完成（finish first）的事务，删除所有与之冲突的事务。然后循环该操作。</li>
</ul>
<p>首先对事务集合进行排序<br />
<img src="https://i.loli.net/2021/04/18/k8YjvRZ14IAmoqJ.jpg" alt="" /></p>
<ul>
<li>时间复杂度：O(nlog n)，因为绝大多数时间都会花费在排序上。</li>
</ul>
<h3 id="事务调度-task-scheduling"><a class="markdownIt-Anchor" href="#事务调度-task-scheduling"></a> 事务调度 Task Scheduling</h3>
<ul>
<li>要求：以不冲突的方式用尽可能少的机器调度所有的事务。</li>
<li>策略：按照事务起始时间进行分配（所以需要先按照起始时间排序），分配给可用的机器上，如果无机器可用，则新增机器。</li>
<li>算法：</li>
</ul>
<p><img src="https://i.loli.net/2021/04/18/lsaxq3XAFoSdh1J.jpg" alt="" /></p>
<h2 id="动态规划-dynamic-programming"><a class="markdownIt-Anchor" href="#动态规划-dynamic-programming"></a> 动态规划 Dynamic Programming</h2>
<p>与分治法类似，只不过使用<strong>已经计算好的数据引用</strong>来代替<strong>原来的重复递归调用</strong>。</p>
<h3 id="0-1背包问题-the-0-1-knapsack-problem"><a class="markdownIt-Anchor" href="#0-1背包问题-the-0-1-knapsack-problem"></a> 0-1背包问题 The {0-1} Knapsack Problem</h3>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>k</mi></msub><mtext> </mtext><mo>=</mo><mtext> </mtext><mo stretchy="false">{</mo><mi>i</mi><mi mathvariant="normal">∣</mi><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S_k\ =\ \{i|i=1,2,..,k\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">i</span><span class="mord">∣</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">}</span></span></span></span>：表示还没被选择的物体集合<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo stretchy="false">[</mo><mi>k</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">B[k, w]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">]</span></span></span></span>：表示包裹剩余最大重量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>时，可以从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">S_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中选择物体的最大总价值。<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">]</mo><mtext> </mtext><mo>=</mo><mtext> </mtext><mn>0</mn></mrow><annotation encoding="application/x-tex">B[0, w]\ =\ 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p>
<ul>
<li>重量最多为w的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">S_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的最优子集合，要么是不选择当前物品：重量最多为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">S_{k-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>的最优子集合；要么是选择当前物品：重量最多为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>−</mo><msub><mi>w</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">{w-w_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">S_{k-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>的最优子集合。</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo stretchy="false">[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mi>f</mi><mtext> </mtext><mi>w</mi><mo>&lt;</mo><msub><mi>w</mi><mi>k</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><mtext> </mtext><mi>B</mi><mo stretchy="false">[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>b</mi><mi>k</mi></msub><mo>+</mo><mi>B</mi><mo stretchy="false">[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>w</mi><mo>−</mo><msub><mi>w</mi><mi>k</mi></msub><mo stretchy="false">]</mo><mtext> </mtext><mo stretchy="false">}</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">T(n) = \begin{cases}
B[k-1, w] &amp; {if\ w&lt;w_k}\\
max\{\ B[k-1, w],\ b_k+B[k-1, w-w_k]\ \} &amp; otherwise
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">]</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">{</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace"> </span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
]]></content>
      <tags>
        <tag>INT202</tag>
      </tags>
  </entry>
  <entry>
    <title>INT202-Introduction</title>
    <url>/2021/04/19/inclass/INT202/INT202-Introduction/</url>
    <content><![CDATA[<h2 id="时间复杂度"><a class="markdownIt-Anchor" href="#时间复杂度"></a> 时间复杂度</h2>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>表示输入大小为n时的运行时间。</li>
<li>一些基本操作：
<ol>
<li>赋值</li>
<li>调用方法</li>
<li>执行算数运算</li>
<li>比较两个数</li>
<li>通过下标访问</li>
<li>跟踪对象引用</li>
<li>从方法中返回</li>
</ol>
</li>
</ul>
<h3 id="ram-random-access-machine-随机存储器"><a class="markdownIt-Anchor" href="#ram-random-access-machine-随机存储器"></a> RAM/ Random Access Machine 随机存储器</h3>
<p>通常我们默认基本操作的运行时间是常数时间。RAM要求只统计基本方法的数量</p>
<ul>
<li>
<p>例子：对于一段程序<br />
<img src="https://i.loli.net/2021/04/19/fKRbpL1FWq4SkAx.jpg" alt="" /></p>
</li>
<li>
<p>第一层：2</p>
</li>
<li>
<p>第二层：迭代的条件为 j&lt;=n-1，最终结束时，j=n。时间复杂度为(3n-1)：</p>
<ol>
<li>1 + n + 2 (n-1)<br />
首先赋值为1，然后对比n次，然后自增和赋值(n-1)次</li>
<li>n + n + n-1<br />
赋值对比n次，自增(n-1)次</li>
</ol>
</li>
<li>
<p>第三层：这一行执行(n-1)次，取值和对比共2(n-1)次</p>
</li>
<li>
<p>第四层：最好的情况为0，最差的情况为2(n-1 )</p>
</li>
<li>
<p>第五层：1</p>
</li>
</ul>
<p>所以，最好情况下，执行了5n次；最好的情况下，执行可7n-2次。</p>
<h3 id="递归算法分析"><a class="markdownIt-Anchor" href="#递归算法分析"></a> 递归算法分析</h3>
<ul>
<li>a base case</li>
<li>递归算法通常可以用算式来表达运行时间。</li>
</ul>
<h3 id="大o符号"><a class="markdownIt-Anchor" href="#大o符号"></a> 大O符号</h3>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>i</mi><mi>s</mi><mtext> </mtext><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mtext> </mtext><mi>i</mi><mi>f</mi><mtext> </mtext><mi mathvariant="normal">∃</mi><msub><mi>n</mi><mn>0</mn></msub><mo separator="true">,</mo><mtext> </mtext><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mo>=</mo><mi>c</mi><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>f</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>a</mi><mi>l</mi><mi>l</mi><mtext> </mtext><mi>n</mi><mo>&gt;</mo><mo>=</mo><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">f(n)\ is\  O(g(n))\  if\  \exists{n_0},\ f(n)&lt;=c*g(n)\ for\ all\ n&gt;=n_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord">∃</span><span class="mord"><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>i</mi><mi>s</mi><mtext> </mtext><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mtext> </mtext><mi>i</mi><mi>f</mi><mtext> </mtext><mi mathvariant="normal">∃</mi><msub><mi>n</mi><mn>0</mn></msub><mo separator="true">,</mo><mtext> </mtext><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mo>=</mo><mi>c</mi><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>f</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>a</mi><mi>l</mi><mi>l</mi><mtext> </mtext><mi>n</mi><mo>&gt;</mo><mo>=</mo><msub><mi>n</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">f(n)\ is\  \Omega(g(n))\  if\  \exists{n_0},\ f(n)&gt;=c*g(n)\ for\ all\ n&gt;=n_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mspace"> </span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord">∃</span><span class="mord"><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>i</mi><mi>s</mi><mtext> </mtext><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mtext> </mtext><mi>i</mi><mi>f</mi><mtext> </mtext><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>i</mi><mi>s</mi><mtext> </mtext><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mtext> </mtext><mi>a</mi><mi>n</mi><mi>d</mi><mtext> </mtext><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>i</mi><mi>s</mi><mtext> </mtext><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)\ is\  \Theta(g(n))\  if\ f(n)\ is\  O(g(n))\ and\ f(n)\ is\  \Omega(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mspace"> </span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mspace"> </span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span>表示渐近相等，只相差个常数因子。</p>
<h2 id="空间复杂度"><a class="markdownIt-Anchor" href="#空间复杂度"></a> 空间复杂度</h2>
<p>工作空间，即变量占用的空间数量。</p>
]]></content>
      <tags>
        <tag>INT202</tag>
      </tags>
  </entry>
  <entry>
    <title>INT202-MasterMethod</title>
    <url>/2021/04/17/inclass/INT202/INT202-MasterMethod/</url>
    <content><![CDATA[<h2 id="the-master-method-主方法"><a class="markdownIt-Anchor" href="#the-master-method-主方法"></a> The Master Method 主方法</h2>
<p>主方法是表示广泛的递归方程渐进特征的通用方法。</p>
<h3 id="形式"><a class="markdownIt-Anchor" href="#形式"></a> 形式</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace width="1.4226377952755906em"/><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mspace width="1.4226377952755906em"/></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mo>&lt;</mo><mi>d</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>b</mi><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline"></mspace><mi>w</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>e</mi><mspace width="1.4226377952755906em"/><mi>d</mi><mo>&gt;</mo><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>a</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>c</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>b</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\hspace{5mm} T(n) = \begin{cases}

c \hspace{5mm} &amp; {n&lt;d} \\
aT(n/b)+f(n)  &amp;  otherwise

\end{cases}\\

where \hspace{5mm}  d&gt;=1, a&gt;0, c&gt;0, b&gt;1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mspace" style="margin-right:1.4226377952755906em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:1.4226377952755906em;"></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">d</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:1.4226377952755906em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<ul>
<li>分治法将问题T分为a个子问题，每个子问题的规模最多为n/b，递归求解每个子问题，然后将子问题的解归并成为整个问题的解。</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>表示把问题划分成为子问题并且归并为原问题的解所需要的时间。</li>
</ul>
<h3 id="解法"><a class="markdownIt-Anchor" href="#解法"></a> 解法</h3>
<ul>
<li>通过将f(n)与特殊函数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup></mrow><annotation encoding="application/x-tex">n^{log_{b}a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span></span></span></span></span>进行比较，然后得出结果，一共有三种情况：</li>
</ul>
<p><img src="https://i.loli.net/2021/04/18/Y8Qq95TsDZkXNcJ.jpg" alt="" /></p>
<ul>
<li>解法：先求特殊函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup></mrow><annotation encoding="application/x-tex">n^{log_{b}a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span></span></span></span></span>，然后和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>做比较判断属于哪一种情况，最后套公式。</li>
</ul>
<p><img src="https://i.loli.net/2021/04/18/nj2Q9spaZU5N6xH.jpg" alt="" /></p>
<h2 id="矩阵相乘"><a class="markdownIt-Anchor" href="#矩阵相乘"></a> 矩阵相乘</h2>
<ul>
<li>当两个(2*2)的矩阵相乘时，需要计算<strong>8次</strong>元素相乘。</li>
<li>将这些元素看成子矩阵时，这个乘法就变成了分治算法：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>8</mn><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">T(n) = 8T(n/2) + bn^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
<h3 id="strassens-algorithm"><a class="markdownIt-Anchor" href="#strassens-algorithm"></a> Strassen’s algorithm</h3>
<p>这样的2*2矩阵相乘，只需要七个子矩阵的乘法即可得到答案。<br />
<img src="https://i.loli.net/2021/04/18/CyhkzedrmSo42cU.jpg" alt="" /><br />
<img src="https://i.loli.net/2021/04/18/i32HGymLp8SXxVr.jpg" alt="" /><br />
<img src="https://i.loli.net/2021/04/18/MAiNpnQr2P5qulR.jpg" alt="" /></p>
<h3 id="counting-inversion"><a class="markdownIt-Anchor" href="#counting-inversion"></a> Counting inversion</h3>
<ul>
<li>对于一行数字：a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub> … a<sub>n</sub><br />
一次颠倒 inversion 表示：i&lt; j, 但是 a<sub>i</sub> &gt; a<sub>j</sub></li>
<li>解法：一种方法是，每两个元素之间都进行比较，比较次数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{n(n-1)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，时间复杂度为O(n<sup>2</sup>)<br />
可以用分治法求解，时间复杂度降为O(nlog n)。</li>
<li>分治求法：不断将列表划分为长度相同/差1的两个列表，然后判断两个子列表的颠倒次数，然后合并。</li>
</ul>
<p><img src="https://i.loli.net/2021/04/18/8sgytJBrVvD4oGw.png" alt="" /></p>
]]></content>
      <tags>
        <tag>INT202</tag>
      </tags>
  </entry>
  <entry>
    <title>INT202-SortingAlgorithm</title>
    <url>/2021/04/17/inclass/INT202/INT202-SortingAlgorithm/</url>
    <content><![CDATA[<h1 id="pq排序"><a class="markdownIt-Anchor" href="#pq排序"></a> PQ排序</h1>
<h2 id="pq排序-priority-queue"><a class="markdownIt-Anchor" href="#pq排序-priority-queue"></a> PQ排序 Priority Queue</h2>
<p>集合中的每个元素都有一个相关的键，该键决定了从集合拿出元素的优先级。</p>
<h3 id="基本方法"><a class="markdownIt-Anchor" href="#基本方法"></a> 基本方法</h3>
<ol>
<li>insertItem(k, e): 将键值对为（k, e）的元素插入PQ</li>
<li>removeMin(): 删除最小的元素</li>
<li>minElement(): 返回最小的元素</li>
<li>minKey(): 返回最小元素的键</li>
</ol>
<h4 id="时间复杂度"><a class="markdownIt-Anchor" href="#时间复杂度"></a> 时间复杂度</h4>
<ul>
<li>
<p>insertItem(k, e)：O(1)<br />
insertItem(k, e)一种操作方式是insertLast(k, e)。因为有k来决定该元素的次序，所以在插入时不用考虑其位置。</p>
</li>
<li>
<p>其余的三个操作都需要检查序列中的所有元素，才能找到最小的元素，所以余下三个操作时间复杂度都为O(n)</p>
</li>
</ul>
<h3 id="sorting-algorithm"><a class="markdownIt-Anchor" href="#sorting-algorithm"></a> sorting algorithm</h3>
<p>设集合C有n个元素</p>
<ol>
<li>利用n个insertItem操作序列，将C中的元素放入一个初始为空的优先队列中去</li>
<li>利用n个removeMin操作序列，按照非降序从P中提取元素并且放入C中</li>
</ol>
<p>时间复杂度为O(n^2)</p>
<hr />
<h2 id="堆数据结构-heap-data-structure"><a class="markdownIt-Anchor" href="#堆数据结构-heap-data-structure"></a> 堆数据结构 Heap Data Structure</h2>
<ol>
<li>将数据项存储在一棵二叉树的内部节点中，外部节点仅仅作为占位符。</li>
<li>Heap-Order 堆序性质：在内部节点中，子节点<strong>大于</strong>父节点。</li>
</ol>
<h3 id="表示方法"><a class="markdownIt-Anchor" href="#表示方法"></a> 表示方法</h3>
<ul>
<li>可以使用数组 Array 来表示<strong>堆序性质的完全二叉树 heap-order complete binary tree</strong>，索引从1开始，即根位于索引为1的位置。</li>
<li>对于任何位置在i的节点：
<ol>
<li>其左子节点在数组中的索引为 2*i</li>
<li>其右子节点在数组中的索引为 2*i+1</li>
<li>其父节点在数组中的索引为 i/2 （向下取整）</li>
</ol>
</li>
</ul>
<h2 id="利用堆数据结构实现pq排序"><a class="markdownIt-Anchor" href="#利用堆数据结构实现pq排序"></a> 利用堆数据结构实现PQ排序</h2>
<h3 id="组成"><a class="markdownIt-Anchor" href="#组成"></a> 组成</h3>
<ol>
<li>heap：一个完全二叉树<strong>T</strong>，里面的键满足了堆序性质，并且存放在一个数组中。</li>
<li>last：<strong>T</strong>中最后一个节点的引用。</li>
<li>comp：一个比较器，决定了关键字之间的全序关系。并且维持保证将最小元素储存在T的根节点。</li>
</ol>
<h3 id="定理"><a class="markdownIt-Anchor" href="#定理"></a> 定理</h3>
<p>一个存储n个关键字的完全二叉树的高度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>=</mo><mo stretchy="false">⌈</mo><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">h = \lceil{log(n+1)}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span><span class="mclose">⌉</span></span></span></span><br />
<img src="https://i.loli.net/2021/04/17/jRy7u3v5OBkds9A.jpg" alt="" /></p>
<h3 id="用向量表示堆"><a class="markdownIt-Anchor" href="#用向量表示堆"></a> 用向量表示堆</h3>
<p><img src="https://i.loli.net/2021/04/17/476ETezkVZahQdl.jpg" alt="" /></p>
<h3 id="插入操作-insertitem"><a class="markdownIt-Anchor" href="#插入操作-insertitem"></a> 插入操作 insertItem</h3>
<ol>
<li>找到外部节点z</li>
<li>将数据项k插入z</li>
<li>重新存储堆数据结构，需要使用<strong>向上冒泡</strong>的方式</li>
</ol>
<h4 id="堆向上冒泡-up-heap-bubbling"><a class="markdownIt-Anchor" href="#堆向上冒泡-up-heap-bubbling"></a> 堆向上冒泡 Up-heap bubbling</h4>
<ul>
<li>将插入后的节点和其父节点进行比较，如果小于父节点数据，则与父节点的键值对交换位置。这个操作会不断重复。</li>
<li>最坏的情况下需要一路传到根节点，所以时间复杂度和高度有关，为O(log n)</li>
</ul>
<h3 id="删除操作-removemin"><a class="markdownIt-Anchor" href="#删除操作-removemin"></a> 删除操作 removeMin</h3>
<p>具有最小关键字的元素存储在堆T的根r中，所以不能简单地直接删除。</p>
<ol>
<li>交换根的元素与最后一个节点w的元素</li>
<li>将最后一个节点删除，保留一个叶节点占位符号</li>
<li>进行<strong>堆向下冒泡</strong>处理</li>
</ol>
<h4 id="堆向下冒泡-down-heap-bubbling"><a class="markdownIt-Anchor" href="#堆向下冒泡-down-heap-bubbling"></a> 堆向下冒泡 Down-heap bubbling</h4>
<p>交换操作后，根节点会变得很大，需要向下与其子节点进行交换。<br />
直到交换后符合子节点大于或等于父节点的要求。</p>
<ul>
<li>时间复杂度和高度有关，为O(log n)</li>
</ul>
<h3 id="堆排序-heap-sorting"><a class="markdownIt-Anchor" href="#堆排序-heap-sorting"></a> 堆排序 Heap sorting</h3>
<p>假设有n个元素存储在堆中：</p>
<ul>
<li>空间复杂度：O(n)</li>
<li>方法 insertItem, removeMin 的时间复杂度为O(log n)</li>
<li>方法 size, isEmpty, minKey, minElement 的时间复杂度为O(1)</li>
<li>方法 sort 的时间复杂度为O(n logn)</li>
</ul>
<h1 id="divide-and-conquer-分治法"><a class="markdownIt-Anchor" href="#divide-and-conquer-分治法"></a> Divide-and-Conquer 分治法</h1>
<h2 id="步骤"><a class="markdownIt-Anchor" href="#步骤"></a> 步骤</h2>
<ol>
<li>Divide 划分：如果输入元素数量小于某一个<strong>阀值threshold</strong>，则直接求解这个小问题，并返回解，否则将数据集合分成2或3个<strong>不相交disjoint</strong>集合。</li>
<li>Recur 递归：递归求解子集合关联问题。</li>
<li>Conquer 归并：取子集合的解，并合并成为原问题的解。</li>
</ol>
<h2 id="mergesort"><a class="markdownIt-Anchor" href="#mergesort"></a> MergeSort</h2>
<p><img src="https://i.loli.net/2021/04/17/rzwmlQ9eAZBpd7K.jpg" alt="" /></p>
<h2 id="归并排序树-merge-sort-tree"><a class="markdownIt-Anchor" href="#归并排序树-merge-sort-tree"></a> 归并排序树 merge-sort tree</h2>
<ul>
<li>我们可以用一个二叉树T来表示该算法的执行过程。这个二叉树被称为<strong>归并排序树 merge-sort tree</strong>。</li>
<li>T中的每个节点都表示了归并排序的一次<strong>递归调用</strong></li>
<li>T的高度约为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">⌈</mo><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil{log n}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span></span><span class="mclose">⌉</span></span></span></span></li>
</ul>
<h2 id="时间复杂度-2"><a class="markdownIt-Anchor" href="#时间复杂度-2"></a> 时间复杂度</h2>
<ul>
<li>归并排序树T上的每一个内部节点v都需要进行划分和归并操作，这两个操作的运行时间与该节点上的序列尺寸成正比。归并排序的时间等于T中所有节点花费时间的总和。</li>
<li>设节点v的深度为i，则该节点的序列的大小为n/2<sup>i，则该节点上花费的时间为O(n/(2</sup>i))，每层有2^i个节点，则每层花费的总时间为 O((2^i) * n/(2^i))=O(n)。一共有logn层，所以归并排序的时间复杂度为O(nlogn)</li>
</ul>
<h1 id="quick-sort-快速排序"><a class="markdownIt-Anchor" href="#quick-sort-快速排序"></a> Quick Sort 快速排序</h1>
<ul>
<li>步骤</li>
</ul>
<ol>
<li>Divide 划分：随机选择一个元素x(该元素习惯被称<strong>枢纽元素 pivot</strong>，通常选择集合S中的最右边的元素)，并且将集合S分成三个序列：
<ul>
<li>L：小于x的元素集合</li>
<li>E：等于x的元素集合</li>
<li>G：大于x的元素集合</li>
</ul>
</li>
<li>Recur 递归：对L，G集合进行递归操作</li>
<li>Conquer 归并：依次从L，E和G集合中向S插入元素</li>
</ol>
<ul>
<li>同样可以用二叉树来表示</li>
<li>运行时间：T中节点v上的运行时间与其输入大小s(v)成正比。因为集合E的存在，v的子节点的输入大小之和最多为s(v)-1。</li>
</ul>
<p><img src="https://i.loli.net/2021/04/17/pXGDcQPVx6E8hKl.jpg" alt="" /></p>
]]></content>
      <tags>
        <tag>INT202</tag>
      </tags>
  </entry>
  <entry>
    <title>INT202-Tree</title>
    <url>/2021/04/19/inclass/INT202/INT202-Tree/</url>
    <content><![CDATA[<p>树是一种分层存储元素的抽象数据类型。</p>
<h2 id="一些术语定义"><a class="markdownIt-Anchor" href="#一些术语定义"></a> 一些术语定义</h2>
<ul>
<li>root 根：顶层元素</li>
<li>parent node， child node</li>
<li>siblings 兄弟节点</li>
<li>external node 外部节点/ leave 叶节点</li>
<li>internal node 内部节点，根节点属于内部节点</li>
<li>ordered tree 有序树：每个节点的子节点存在一个定义的线性关系，即可以使用正确固定的顺序规则来遍历。比如有区分的第一个孩子，第二个孩子。</li>
<li>depth 深度：某节点的祖先数量。<strong>根节点深度为0。</strong></li>
<li>height 高度：一棵树的一个外部节点的最大深度</li>
</ul>
<h2 id="一些操作"><a class="markdownIt-Anchor" href="#一些操作"></a> 一些操作</h2>
<ul>
<li>access methods：
<ul>
<li>root(): O(1)</li>
<li>parent(v): O(1)</li>
<li>children(v)：返回V的子节点迭代器,O(c_v 子节点个数)</li>
</ul>
</li>
<li>query methods：
<ul>
<li>isInternal(v)</li>
<li>isExternal(v)</li>
<li>isRoot(v)</li>
</ul>
</li>
<li>generic methods:
<ul>
<li>size()</li>
<li>elements()：返回所有存在节点中的元素的一个迭代器</li>
<li>positions()：返回所有节点的一个迭代器</li>
<li>swapElements(v, w)</li>
<li>replaceElements(v, w)</li>
</ul>
</li>
</ul>
<h3 id="tree-traversal-遍历树"><a class="markdownIt-Anchor" href="#tree-traversal-遍历树"></a> Tree Traversal 遍历树</h3>
<ul>
<li>Pre-order traversal：根-&gt;子节点，父节点总是比子节点先被访问。</li>
<li>Post-order traversal：子节点-&gt;根，子节点总是比父节点先被访问。</li>
<li>In-order traversal</li>
</ul>
<h2 id="binary-tree-二叉树"><a class="markdownIt-Anchor" href="#binary-tree-二叉树"></a> Binary tree 二叉树</h2>
<p>每个节点最多有两个子节点。节点被标为左子节点和右子节点。</p>
<ul>
<li>proper binary tree 真二叉树：每个内部节点都恰好有两个叶节点。</li>
</ul>
<h2 id="structure-数据结构"><a class="markdownIt-Anchor" href="#structure-数据结构"></a> Structure 数据结构</h2>
<p>每个节点是一个对象，存储值和指针，指针指向父节点和子节点。</p>
<ul>
<li>对于满足约束：（每个节点最多有t个子节点，有固定的深度）的树，可以使用数组A来表示。<br />
对于二叉树来说，节点A[i]的子节点为A[2<em>i+1]和A[2</em>i+2]，父节点为A[向下取整(i-1)/2]</li>
</ul>
<h3 id="ordered-data"><a class="markdownIt-Anchor" href="#ordered-data"></a> ordered data</h3>
<p>树结构可以存储，增删固定顺序的数据。</p>
<ul>
<li>一些操作：
<ul>
<li>findElement(k)：返回位置k处的元素</li>
<li>insertElement(k, e)</li>
<li>removeElement(k)</li>
</ul>
</li>
<li>可以将节点存放在一个表中</li>
<li>二分搜索 Binary search：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>i</mi><mi>d</mi><mo>=</mo><mo stretchy="false">⌊</mo><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo>+</mo><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">mid = \lfloor (low + high)/2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span><span class="mclose">⌋</span></span></span></span>
<ul>
<li>Three cases are:
<ol>
<li>k = key(mid) 成功</li>
<li>k &lt; key(mid), high = mid -1</li>
<li>k &gt; key(mid), low = mid +1</li>
</ol>
</li>
<li>使用二叉树来实现，得到<strong>二分搜索树</strong> Binary Search Tree</li>
</ul>
</li>
</ul>
<h3 id="binary-search-treebst-二分搜索树"><a class="markdownIt-Anchor" href="#binary-search-treebst-二分搜索树"></a> Binary Search Tree/BST 二分搜索树</h3>
<ul>
<li>
<p>搜索</p>
<ul>
<li>使用迭代来实现搜索，如果目标小于当前节点则对子树进行操作，反之对右子树进行操作。直到找到目标，或者找到外部节点。</li>
</ul>
<p><img src="https://i.loli.net/2021/04/20/RUteAioqcxHdhGI.jpg" alt="" /></p>
<ul>
<li>时间复杂度：O(h)</li>
</ul>
</li>
<li>
<p>插入</p>
<ul>
<li>先执行查找操作</li>
<li>然后在结束的叶节点上插入</li>
</ul>
</li>
<li>
<p>删除</p>
<ul>
<li>如果只有一个子节点，则子节点上移填充</li>
<li>如果有两个节点，则使用中序扫描的下一个叶节点填充</li>
</ul>
</li>
</ul>
<p><img src="https://i.loli.net/2021/04/20/ImJaMj75HPrqEZR.jpg" alt="" /></p>
<ul>
<li>算法复杂度<br />
设二叉树高度为h，节点数为n。
<ul>
<li>空间复杂度：O(n)</li>
<li>findElement：O(h)</li>
<li>h：best O(log n) worst O(n)</li>
</ul>
</li>
</ul>
<h2 id="avl-平衡树"><a class="markdownIt-Anchor" href="#avl-平衡树"></a> AVL 平衡树</h2>
<p>二分搜索树存在弊端：高度可能与节点数相同。<br />
所以我们使用平衡树，平衡树的高度为O(log n)</p>
]]></content>
      <tags>
        <tag>INT202</tag>
      </tags>
  </entry>
  <entry>
    <title>week-1</title>
    <url>/2021/03/01/inclass/JAVAOOP/week-1/</url>
    <content><![CDATA[<h3 id="lecture-1"><a class="markdownIt-Anchor" href="#lecture-1"></a> Lecture 1</h3>
<h5 id="types"><a class="markdownIt-Anchor" href="#types"></a> types</h5>
<ul>
<li>primitive types: boolean, char, int, short, long, float, double</li>
<li>object types: String, BigInteger</li>
</ul>
<h5 id="operation"><a class="markdownIt-Anchor" href="#operation"></a> operation</h5>
<ul>
<li>as infix, prefix or postfix operator</li>
<li>as a method of an object</li>
<li>as a function</li>
</ul>
<p>overloaded 方法的重载</p>
<h5 id="static-typing"><a class="markdownIt-Anchor" href="#static-typing"></a> Static Typing</h5>
<ul>
<li>Java is a statically-typed language 静态类型语言:<br />
Variables have to be known at compile time before the program runs.</li>
<li>static checking 静态检查：在编译阶段寻找bug</li>
</ul>
<h5 id="string"><a class="markdownIt-Anchor" href="#string"></a> String</h5>
<ul>
<li>参数和方法：</li>
</ul>
<ol>
<li>length           --&gt; hello.length()</li>
<li>indexing         --&gt; hello[0]</li>
<li>concatenation    --&gt; “a”+“bc”</li>
<li>substring        --&gt; hello.substring(3)</li>
<li>check presence   --&gt; hello.contains(“lo”)</li>
<li>search           --&gt; hello.indexOf(“lo”)</li>
<li>equality test    --&gt; hello.equals(“hello”)</li>
</ol>
<h5 id="array"><a class="markdownIt-Anchor" href="#array"></a> Array</h5>
<ul>
<li>固定长度和顺序</li>
<li>创建: <code>int[] a = new int[100]</code></li>
<li>遍历:</li>
</ul>
<ol>
<li>传统的for循环方式</li>
<li>for each循环</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for(int a:array)</span><br><span class="line">    System.out.println(a);</span><br></pre></td></tr></table></figure>
<ol start="3">
<li><code>Array.toString(a)</code></li>
</ol>
<h5 id="list-and-arraylist"><a class="markdownIt-Anchor" href="#list-and-arraylist"></a> List and ArrayList</h5>
<ul>
<li>可变长度的列表</li>
<li>创建: <code>List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();</code></li>
</ul>
<ol>
<li>list是一个接口(interface)，不能够直接创建。可以使用ArrayList和LinkedList来实现功能。</li>
<li>在创建数字列表时，类型使用Integer而不是int：List只处理对象类型(object types)，不能处理基本类型的数据(primitive types)。幸运的是，java中所有的基本数据类型都可以，使用首字母大写的全拼。</li>
</ol>
<ul>
<li>参数和方法：</li>
</ul>
<ol>
<li>index        --&gt; list.get(2)</li>
<li>assignment   --&gt; list.set(2, 5)</li>
<li>add          --&gt; list.add(5)</li>
<li>length       --&gt; list.size()</li>
<li>从数组创建列表: List<Integer> <code>list = Arrays.asList(10, 20, 30)</code></li>
</ol>
<ul>
<li>遍历/迭代</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for (int x : list)&#123;</span><br><span class="line">    System.out.print(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h5>
<h5 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h5>
<p>使用Junit</p>
<h5 id="mac下idea快捷键"><a class="markdownIt-Anchor" href="#mac下idea快捷键"></a> mac下idea快捷键</h5>
<p>option+command+t：快速try catch和循环<br />
psvm快速main方法</p>
]]></content>
      <tags>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>week-2</title>
    <url>/2021/03/09/inclass/JAVAOOP/week-2/</url>
    <content><![CDATA[<h3 id="static-and-dynamic-checking"><a class="markdownIt-Anchor" href="#static-and-dynamic-checking"></a> static and dynamic checking</h3>
<h3 id="public-and-static"><a class="markdownIt-Anchor" href="#public-and-static"></a> Public and Static</h3>
<p>Public：任何代码都可以引用这个方法<br />
static：只允许同类下的代码段使用</p>
<h3 id="javadoc-comments"><a class="markdownIt-Anchor" href="#javadoc-comments"></a> Javadoc Comments</h3>
<ul>
<li>原因：只通过方法的参数和返回值乐行得到方法的信息是不足的，我们使用Javadoc comments来编辑出更多信息。</li>
<li>例子：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Compute a hail sequence</span><br><span class="line"> * For example, hailstone(5) &#x3D; [5 16 8 4 2 1]</span><br><span class="line"> * @param n starting for sequence. Assumes n &gt; 0</span><br><span class="line"> * @return hailstone sequence starting at n and ending with 1</span><br><span class="line">**&#x2F;</span><br></pre></td></tr></table></figure>
<ul>
<li>位置：在方法/类结束后插入</li>
<li>元素：
<ol>
<li><strong>@param</strong>表示参数，并且举出例子</li>
<li><strong>@return</strong>表示返回值，举出根据参数例子的返回值</li>
</ol>
</li>
</ul>
<h3 id="snapshot-diagrams"><a class="markdownIt-Anchor" href="#snapshot-diagrams"></a> Snapshot Diagrams</h3>
<ul>
<li>描述程序运行时的内部状态</li>
<li>assign a variable: to a different value<br />
<img src="https://i.loli.net/2021/03/09/fBCNjHoPqwRgVW4.png" alt="" /></li>
<li>mutate the mutable value：list<br />
<img src="https://i.loli.net/2021/03/09/kCvuj2IPKeTAlZw.png" alt="" /></li>
<li>immutable value：string<br />
values never change<br />
<img src="https://i.loli.net/2021/03/09/j2qszGQgc9NM53e.png" alt="" /></li>
<li>make a reference immutable: <code>final</code>– <strong>a double arrow</strong><br />
<img src="https://i.loli.net/2021/03/09/SHIqbuyXM6sr79G.png" alt="" />
<ul>
<li>final can be used on both parameters and local variables</li>
<li>final can be used on variables of any type</li>
</ul>
</li>
</ul>
<h3 id="map"><a class="markdownIt-Anchor" href="#map"></a> map</h3>
<p><img src="https://i.loli.net/2021/03/09/3e4h8giZaT2czJt.png" alt="" /></p>
<ul>
<li>方法：
<ol>
<li>map.put(key, value)</li>
<li>map.get(key) ==&gt; value</li>
<li>map.containsKey(key) ==&gt; boolean</li>
<li>map.remove(key) ==&gt; boolean</li>
</ol>
</li>
</ul>
]]></content>
      <tags>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>week-3</title>
    <url>/2021/03/19/inclass/JAVAOOP/week-3/</url>
    <content><![CDATA[<h2 id="testing-and-bugs"><a class="markdownIt-Anchor" href="#testing-and-bugs"></a> Testing and Bugs</h2>
<ul>
<li>
<p>typical residual defect rates 典型残余缺陷率<br />
kloc： (one thousand lines of source code) 每一千行源码</p>
</li>
<li>
<p>Software Testing is Hard：</p>
</li>
</ul>
<ol>
<li>Exhaustive testing is infeasible 不可能测试所有样例</li>
<li>Haphazard testing is less likely to find bugs 随机测试很难发现bug</li>
<li>Random or statistical testing doesn’t work well for software 不适合随机或统计测试：
<ul>
<li>Software behavior varies discontinuously and discretely across the space of possible inputs. 软件行为在可能的输入空间中不连续地、离散地变化。</li>
<li>could still abruptly fail at a single boundary point. 可能在单个边界点突然失效。</li>
</ul>
</li>
</ol>
<ul>
<li>Test cases must be chosen systematically 需要系统地选择测试用例
<ul>
<li>测试用例是输入和预期输出结果的特殊选择</li>
<li>测试套件(test suite)是一组用于实现的测试用例</li>
</ul>
</li>
</ul>
<h3 id="systematic-testing"><a class="markdownIt-Anchor" href="#systematic-testing"></a> Systematic Testing</h3>
<ul>
<li>介绍：系统测试表示我们用特定的方式来选择<strong>测试情况</strong></li>
<li>目标：建立一个正确，彻底并且小的测试套件
<ul>
<li>正确 Correct：接受所有合法的输入</li>
<li>彻底 Thorough：一个完整的测试套件会发现实际中，程序员的错误</li>
<li>小 Small：更少的测试用例可以更快地编辑，更新和使用</li>
</ul>
</li>
</ul>
<h3 id="test-first-programming"><a class="markdownIt-Anchor" href="#test-first-programming"></a> Test-First Programming</h3>
<p>you write tests before you even write any code</p>
<ul>
<li>步骤：
<ol>
<li>Spec：先为代码编写规范specification</li>
<li>Test：编写执行规范的测试</li>
<li>Implement：编写代码<br />
最后代码通过测试后，即表示完成了</li>
</ol>
</li>
</ul>
<h4 id="the-specification-规范"><a class="markdownIt-Anchor" href="#the-specification-规范"></a> The Specification 规范</h4>
<ul>
<li>作用：描述函数的输入和输出</li>
<li>组成： the method signature and the comment above it that describes what it does</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">* @param val another BigInteger</span><br><span class="line">* @return a BigInteger whose value is (this * val). </span><br><span class="line">*&#x2F;</span><br><span class="line">public BigInteger multiply(BigInteger val)</span><br></pre></td></tr></table></figure>
<h4 id="test-cases-测试用例"><a class="markdownIt-Anchor" href="#test-cases-测试用例"></a> Test Cases 测试用例</h4>
<ul>
<li>要求：<strong>small enough</strong> to run quickly, yet <strong>large enough</strong> to validate the program</li>
<li>取法：
<ol>
<li>将定义域分成不同的子定义域，每一个输入都表示一种情况</li>
<li>每一个测试样例都代表一个子定义域<br />
我们同样也可以对值域进行上述操作</li>
</ol>
</li>
</ul>
<h2 id="recursion-递归"><a class="markdownIt-Anchor" href="#recursion-递归"></a> Recursion 递归</h2>
<ul>
<li>
<p><strong>Recursion God</strong>:</p>
<ul>
<li>that if you solve a problem of original size, say size n</li>
<li>Recursion God will answer correctly problems of size less than n</li>
</ul>
</li>
<li>
<p><strong>helper method</strong>:<br />
Helper method introduces another parameter(s) to give you more flexibility in doing (more creative) recursion calls<br />
引入另一个参数，帮助递归的调用。</p>
</li>
<li>
<p>举例</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">* Decide whether there is a subset in the input list</span><br><span class="line">* that adds up to the target sum.</span><br><span class="line">* For example, subsetSum([2, 5, 8], 10) → true.</span><br><span class="line">* @param list is the input list.</span><br><span class="line">* @param sum is the target sum.</span><br><span class="line">* @return true iff there is a subset of list that adds to sum. *&#x2F;</span><br><span class="line">public static boolean subsetSum(List&lt;Integer&gt; list, int sum)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private static boolean subsetSumHelper(List&lt;Integer&gt; list, int start, int sum) &#123;</span><br><span class="line">	&#x2F;&#x2F; base case</span><br><span class="line">    if (start &#x3D;&#x3D; list.size()) &#123; if (sum &#x3D;&#x3D; 0) &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F; recursive step</span><br><span class="line">    if (subsetSumHelper(list, start+1, sum-list.get(start))) return true;</span><br><span class="line">    if (subsetSumHelper(list, start+1, sum)) return true;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>week-5</title>
    <url>/2021/03/30/inclass/JAVAOOP/week-5/</url>
    <content><![CDATA[<p><strong>Specification 规范</strong></p>
<ul>
<li>规范就像一张合同：</li>
</ul>
<ol>
<li>实施构造 implementer， 即方法内部需要实现这个规范。</li>
<li>客户 client， 即调用这个方法的对象可以依靠这个规范得到满足需求。</li>
<li>约束 contract， 调用方法的一方需要满足一定条件 precondition，或者传入必须的参数。</li>
</ol>
<ul>
<li>规范中可以写参数和返回值，但是<strong>不可以提及方法内部变量</strong>，因为要将客户隔离。</li>
<li>尽管可以找到其他的参数，使方法返回错误。在白盒测试 glass box test 时，输入的变量必须<strong>严格遵守规范中的约束</strong>。即使规范中后置条件不明确，或者该方法会抛出异常。因为调用该方法时，使用者会尽力避免输入造成错误的参数。<br />
所以白盒测试的意义在于：以独立的方式(即单独测试这一方法，而不是应用于程序中)，试图找到可以实现所有情况的用例。</li>
</ul>
<h3 id="firewall-and-decoupling-between-implementers-and-clients"><a class="markdownIt-Anchor" href="#firewall-and-decoupling-between-implementers-and-clients"></a> Firewall and Decoupling between implementers and clients</h3>
<ol>
<li>客户无需仔细阅读内部的实施构造就可以直接使用这个方法</li>
<li>内部实施构造也不关系调用这个方法的客户</li>
</ol>
<h3 id="behavioral-equivalent"><a class="markdownIt-Anchor" href="#behavioral-equivalent"></a> Behavioral Equivalent</h3>
<p>有些方法，虽然在输入特定值时，返回值不同，但是在输入一些特定值时，功能相同。<br />
如果客户只会输入使其返回值相同的数据时，这两个方法可以说是相同的 equivalence。这完全取决于客户，即调用者输入参数的不同。</p>
<h3 id="specification-structure"><a class="markdownIt-Anchor" href="#specification-structure"></a> Specification Structure</h3>
<p>A specification of a method consists of two clauses:</p>
<ul>
<li>a <strong>precondition</strong>, indicated by the keyword requires<br />
input should satisfy precondition<br />
an obligation on the client</li>
<li>a <strong>postcondition</strong>, indicated by the keyword effects<br />
output should satisfy post condition<br />
an obligation on the implementer</li>
<li>if the precondition <strong>holds</strong> when the method is called, then the postcondition must <strong>hold</strong> when the method completes.</li>
<li>If the precondition <strong>does not hold</strong> when the method is called, the implementation is not bound by the postcondition. It is <strong>free</strong> to do anything, including not terminating, throwing an exception, returning arbitrary results, making arbitrary modifications, etc</li>
</ul>
<p><strong>Java的静态类声明 static type declarations 是前置和后置条件的一部分，会在程序运行时自动运行 --eg.静态代码块</strong></p>
<h3 id="一些标签"><a class="markdownIt-Anchor" href="#一些标签"></a> 一些标签</h3>
<p>在书写规范时候，可以使用一些标签来声明前置和后置条件<br />
<code>@param</code>：前置条件，参数<br />
<code>@return</code>/ <code>@throws</code>：后置条件，返回值或者异常值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Find a value in an array</span><br><span class="line"> * @param arr array to search, requires that val</span><br><span class="line"> *            occurs exactly once in arr</span><br><span class="line"> *</span><br><span class="line"> * @param val value to search for</span><br><span class="line"> * @ return index i such that arr[i] &#x3D; val</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">static int find(int[] arr, int val)</span><br></pre></td></tr></table></figure>
<h3 id="integration-tests-and-unit-test"><a class="markdownIt-Anchor" href="#integration-tests-and-unit-test"></a> integration tests and unit test</h3>
<p>整合测试和单元测试同样重要，在整合测试时，参数会按照约定自动交给下一个方法，这个参数对于当前方法来说，只是其输入空间中的很小一部分。<br />
没有单元测试会导致，在单独使用这个方法或者和其他方法结合调用时，可能会出错或者抛出异常。</p>
<h3 id="mutating-methods"><a class="markdownIt-Anchor" href="#mutating-methods"></a> Mutating Methods</h3>
<ul>
<li>immutable object (不可改变的变量)：就是那些被创建后不能被改变的变量</li>
<li>mutable object (可改变的变量)</li>
<li>mutating　method（可变参数的方法）：该方法会将参数改变</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">static void sort(List&lt;String&gt; list)</span><br><span class="line">requires: nothing</span><br><span class="line">effects: puts list in sorted order, i.e. list[i] &lt;&#x3D; list[j] for all 0 &lt;&#x3D; i &lt; j &lt; list.size()</span><br></pre></td></tr></table></figure>
<p>如果后置条件没有定义参数可变，则我们需要输入不可变的参数。</p>
]]></content>
      <tags>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>week-6</title>
    <url>/2021/04/10/inclass/JAVAOOP/week-6/</url>
    <content><![CDATA[<h2 id="null-reference"><a class="markdownIt-Anchor" href="#null-reference"></a> Null Reference</h2>
<ul>
<li>在java中，对象Object和数组array可以指向特殊值<strong>null</strong>，但是基本数据类型不可以。</li>
<li>一共存在八种<strong>基本数据类型primitives</strong>：boolean, char, byte, short, int, long, float, double</li>
<li>在声明时设置null时：
<ul>
<li>当设置给基本数据类型时，编译器会直接报错。</li>
<li>编译器允许给对象或者其他非空基本数据类型。但是这些指向null的数据类型不可以调用方法，否则会抛出空指针异常NullPointerException。</li>
</ul>
</li>
<li>注意null不是空字符串&quot;&quot;， 或者空数组[]<br />
<strong>非空数据类型的数组</strong>或者<strong>一个列表</strong>在声明成空时，必须要传入空值<strong>null</strong>。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String[] names &#x3D; new String[] &#123;null&#125;;</span><br><span class="line">List&lt;Double&gt; sizes &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">sizes.add(null);</span><br></pre></td></tr></table></figure>
<p>如果操作这些空的数组或者列表的内容，往往会抛出异常。</p>
<ul>
<li>所以，默认情况下 implicitly，方法的前置和后置条件都是<strong>不允许空对象</strong><br />
如果某个方法<strong>允许空对象</strong>，则我们必须要<strong>显示地 explicitly</strong>声明出来</li>
</ul>
<h3 id="非空参数的声明"><a class="markdownIt-Anchor" href="#非空参数的声明"></a> 非空参数的声明</h3>
<ul>
<li>Java有对应的拓展注解来限制参数非空，该注解为<code>@NonNull</code>。<br />
There are extensions to Java to forbid null directly in the type declaration.</li>
<li>举例： <code>public static boolean addAll(@NonNull List&lt;T&gt; list1, @NotNull List&lt;T&gt; list2)</code></li>
</ul>
<h2 id="exception"><a class="markdownIt-Anchor" href="#exception"></a> Exception</h2>
<p>博客推荐： <a href="https://blog.csdn.net/baidu_37107022/article/details/71036996">https://blog.csdn.net/baidu_37107022/article/details/71036996</a></p>
<ul>
<li>一个方法的签名 <strong>signature</strong>，除了包含其名称，参数类型，返回类型，还应该包含异常 <strong>exception</strong>。</li>
<li>除了标识出现的BUG，异常还可以用于<strong>抛出特定的返回值</strong>来提升代码结构。
<ul>
<li>Unchecked Exception --&gt; signal bugs<br />
非检查型异常：编译器不会检查这类异常，、这类异常一般可以由用户避免，因此无需处理。</li>
<li>Checked Exception --&gt; signal special results<br />
检查型异常：编译器要检查这类异常，用户必须解决这些异常</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LocalData lookup(String name) throws NotFoundException&#123;</span><br><span class="line">    ...</span><br><span class="line">    if (.. not found ..)</span><br><span class="line">        throw new NotFoundException();</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="异常类型"><a class="markdownIt-Anchor" href="#异常类型"></a> 异常类型</h3>
<h4 id="checked-exception-检测型异常"><a class="markdownIt-Anchor" href="#checked-exception-检测型异常"></a> Checked Exception 检测型异常</h4>
<ul>
<li>被编译器compiler自动检测编译</li>
<li>如果一个方法有可能抛出一个异常，那么一定要在它的签名中声明，来强制对该异常进行处理。</li>
<li>如果没有处理异常，则编译器会报错。</li>
</ul>
<h4 id="unchecked-exception-非检测型异常"><a class="markdownIt-Anchor" href="#unchecked-exception-非检测型异常"></a> Unchecked Exception 非检测型异常</h4>
<ul>
<li>运行时发生，无法预先捕捉处理的。编译器不强求对这些异常进行操作。</li>
<li>举例：nullPointer空指针，indexOutOfBounds索引越界，IllegalArguments非法声明，assertionFailure插入失败 …</li>
</ul>
<h3 id="exception-hierarchy"><a class="markdownIt-Anchor" href="#exception-hierarchy"></a> Exception Hierarchy</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Object</span><br><span class="line">    ｜</span><br><span class="line">    ｜</span><br><span class="line">Throwable</span><br><span class="line">    |</span><br><span class="line">    |  ---- Error</span><br><span class="line">    |</span><br><span class="line">    |</span><br><span class="line">    |  ---- Exception</span><br><span class="line">                |</span><br><span class="line">                |  ---- RuntimeException</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>Throwable 对象可以被<strong>抛出Throwable</strong>或者<strong>捕获caught</strong>。</li>
<li>Throwable 实现类使用一个<strong>栈</strong>来记录异常的抛出对象和使用一个最好的异常描述。</li>
<li>所有的异常都是从Throwable继承而来的，是所有异常的共同祖先。</li>
</ul>
<h4 id="exception-类"><a class="markdownIt-Anchor" href="#exception-类"></a> Exception 类</h4>
<ul>
<li>是checked exception受检测型异常的基本类</li>
<li>编译器对方法进行静态检测来检测这些方法</li>
</ul>
<h4 id="runtimeexception-类"><a class="markdownIt-Anchor" href="#runtimeexception-类"></a> RuntimeException 类</h4>
<ul>
<li>注意这个类是<strong>Exception类</strong>的子类</li>
<li>运行时异常属于非受检异常，编译器不要求必须处理的异常</li>
<li>一般是指编程时的逻辑错误，是程序员应该积极避免其出现的异常</li>
</ul>
<h4 id="error-类"><a class="markdownIt-Anchor" href="#error-类"></a> Error 类</h4>
<ul>
<li>指JVM系统内部错误或资源耗尽等<strong>严重情况</strong>, 属于JVM需要负担的责任，属于非检测异常</li>
<li>通常是不可修复的 <strong>unrecoverable</strong></li>
<li><strong>不是Exception的子类</strong>，所以有些unchecked Error-like异常就不属于Exception类。</li>
</ul>
<h3 id="some-operations-of-exceptions"><a class="markdownIt-Anchor" href="#some-operations-of-exceptions"></a> Some operations of exceptions</h3>
<h4 id="create-exception"><a class="markdownIt-Anchor" href="#create-exception"></a> Create Exception</h4>
<p>当自定义异常时，可以定义其类型<strong>subclass</strong>，为Exception或者RuntimeException</p>
<h4 id="cache-exception"><a class="markdownIt-Anchor" href="#cache-exception"></a> Cache Exception</h4>
<p>当捕获异常时，应该选择应有可能的那个<strong>the most specific exception class possible</strong></p>
<h4 id="the-cost-of-exceptions"><a class="markdownIt-Anchor" href="#the-cost-of-exceptions"></a> The Cost of Exceptions</h4>
<ol>
<li>有些方法需要创建一个新的异常，这需要创建一个新的异常类。</li>
<li>如果调用了会抛出异常的方法，则需要使用 try-catch语句。</li>
</ol>
<h4 id="declaration-in-specification"><a class="markdownIt-Anchor" href="#declaration-in-specification"></a> Declaration in Specification</h4>
<ul>
<li>方法有可能会抛出异常，所以我们应该在<strong>方法约束Specification</strong>中，将异常声明为<strong>后置条件post condition</strong>。</li>
<li>使用 <code>@throws</code> 来声明，在声明这个特殊结果时，我们也需要声明产生这个特殊结果的条件。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">*   Compute the integer square root.</span><br><span class="line">*   @param x value to take square root of</span><br><span class="line">*   @return square root of x</span><br><span class="line">*   @throws NotPerfectSquareException if x is not a perfect square</span><br><span class="line">*&#x2F;</span><br><span class="line">int integerSquareRoot(int x) throws NotPerfectSquareException</span><br></pre></td></tr></table></figure>
<ul>
<li>对于非检查型异常，java不需要对他们进行抛出操作。同样我们也不支持抛出操作，防止误导程序员认为此异常已经被检查过并且没问题了。<br />
在代码实现上非检查形异常所在的方法不会throw这个异常。</li>
</ul>
<h4 id="abuse-of-exception"><a class="markdownIt-Anchor" href="#abuse-of-exception"></a> Abuse of Exception</h4>
<ol>
<li>性能太差，运行速度太慢</li>
<li>基于异常的习惯用法不能保证一定有效</li>
</ol>
<h4 id="define-an-unchecked-exception"><a class="markdownIt-Anchor" href="#define-an-unchecked-exception"></a> Define an unchecked Exception</h4>
<ul>
<li>在抛出异常时，我们可以抛出自定义的异常。自定义的异常可以设置我们想令其表达的信息。</li>
<li>代码实现：
<ol>
<li>定义异常<br />
<img src="https://i.loli.net/2021/04/11/y1eYbKtsDlp9QMu.jpg" alt="" /></li>
<li>抛出异常</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if ( ... )&#123;</span><br><span class="line">    &#x2F;&#x2F; 新建并且抛出异常</span><br><span class="line">    throw new EmptySLListException(&quot;other);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="test-exception-is-thrown"><a class="markdownIt-Anchor" href="#test-exception-is-thrown"></a> Test Exception is thrown</h4>
<p>我们可以在@Test标注后面加上我们的目标异常</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Test(expected &#x3D; IllegalArgumentException.class)</span><br><span class="line">public void testIllegalArgumentExceptionNullCopy()&#123;</span><br><span class="line">    SLList&lt;String&gt; listStr &#x3D; null;</span><br><span class="line">    SLList&lt;String&gt; listStr2 &#x3D; new SLList&lt;&gt;(listStr1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="copy-constructor-复制构造函数拷贝构造函数"><a class="markdownIt-Anchor" href="#copy-constructor-复制构造函数拷贝构造函数"></a> Copy Constructor 复制构造函数/拷贝构造函数</h2>
<ul>
<li>博客：<a href="https://www.jianshu.com/p/94dbef2de298">https://www.jianshu.com/p/94dbef2de298</a></li>
<li>问题描述：经常需要利用一个实例A的所有属性，来创建一个新的实例B。这时我们需要调用<code>A.a=B.a; A.b=B.b;</code>。成员变量可能是两种数据类型中的一种，基本数据类型和引用数据类型，利用上述方法复制之后，两者的基本数据类型的值是独立的，但是引用数据类型则共享，因为这复制方式是指向同一地址的。</li>
</ul>
<h3 id="alias-shallow-copy-浅拷贝"><a class="markdownIt-Anchor" href="#alias-shallow-copy-浅拷贝"></a> Alias /Shallow Copy 浅拷贝</h3>
<p>浅拷贝是按位拷贝对象，它会创建一个新对象，这个对象有着原始对象属性值的一份精确拷贝。如果属性是基本类型，拷贝的就是基本类型的值；如果属性是内存地址（引用类型），拷贝的就是<strong>内存地址</strong>，因此如果其中一个对象改变了这个地址的<strong>引用数据类型内部的值</strong>，就会影响到另一个对象。即默认拷贝构造函数只是对对象进行浅拷贝复制(逐个成员依次拷贝)，即<strong>只复制对象空间而不复制资源</strong>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public SLList(SLList&lt;T&gt; other)&#123;</span><br><span class="line">    sentinel &#x3D; other .sentinel;</span><br><span class="line">    size &#x3D; other.size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="deep-copy-深拷贝"><a class="markdownIt-Anchor" href="#deep-copy-深拷贝"></a> Deep Copy 深拷贝</h3>
<ul>
<li>深拷贝，在拷贝引用类型成员变量时，为引用类型的数据成员另辟了一个独立的内存空间，实现真正内容上的拷贝。</li>
<li>例子：遍历节点并且根据引用类型内部数据来新建新的链表</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public SLList(SLList&lt;T&gt; other)&#123;</span><br><span class="line">    sentinel &#x3D; new Node(null, null);</span><br><span class="line">    size &#x3D; 0;</span><br><span class="line"></span><br><span class="line">    Node p &#x3D; sentinel;</span><br><span class="line">    Node q &#x3D; other.sentinel;</span><br><span class="line">    while (q.next !&#x3D; null )&#123;</span><br><span class="line">        p.next &#x3D; new Node(q.next.item, null);</span><br><span class="line">        p &#x3D; p.next;</span><br><span class="line">        q &#x3D; q.next;</span><br><span class="line">        size ++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC-1-JAR包与介绍</title>
    <url>/2021/03/07/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/JDBC/JDBC-1-JAR%E5%8C%85/</url>
    <content><![CDATA[<h3 id="jar包"><a class="markdownIt-Anchor" href="#jar包"></a> JAR包</h3>
<ol>
<li>定义：Java Archive File，主要放置类文件，提高类文件复用性。</li>
<li>建立：<strong>IntelliJ IDEA/File/New/Module</strong>
<ul>
<li><code>command+n</code>可以自动创建方法<br />
一个模块需要使用另一个模块的jar包：<br />
<img src="https://i.loli.net/2021/03/07/51HnR3eDcvlayVw.png" alt="" /><br />
<img src="https://i.loli.net/2021/03/07/pIP9fLvohbiKFXn.png" alt="" /><br />
Build:build artifacts:build<br />
在out/artifacts中可以看到导出的jar包<br />
复制<br />
然后在另一个模块下粘贴<br />
<img src="https://i.loli.net/2021/03/07/2n1SdzqTZkfAJVL.png" alt="" /><br />
<img src="https://i.loli.net/2021/03/07/MceIJrO1pnmHbxi.png" alt="" /></li>
</ul>
</li>
</ol>
<h3 id="javaee规范和javase规范"><a class="markdownIt-Anchor" href="#javaee规范和javase规范"></a> JAVAEE规范和JAVASE规范</h3>
<ul>
<li>JAVASE：<br />
指java类在单独执行，在单独处理业务时需要遵守的语法规则。</li>
<li>JAVAEE：<br />
指java在商业开发时遵守的开发规则。需要java类与不同的服务器进行沟通来解决当前业务。<br />
由于在商业开发过程中，java需要与13种不同的服务器进行沟通，因此SUN公司指定了13套接口，这13套接口统称为javaEE规范。<br />
不同的实现类由不同的<strong>服务器厂商</strong>进行实现。服务器厂商完成的实现类以jar包形式提供。<br />
程序员通过<strong>jar包</strong>得到接口中的实现类，从而实现与指定服务器之间交流。</li>
</ul>
<h3 id="jdbc规范"><a class="markdownIt-Anchor" href="#jdbc规范"></a> JDBC规范</h3>
<ol>
<li>是JAVAEE中的一种规范，指定java类与关系型数据服务器之间的沟通规则。</li>
<li>提供的接口存在于<strong>JDKJAR</strong>中，在<strong>java.sql</strong>包下。</li>
<li>JDBC接口实现类由不同关系型数据库厂商以jar包形式提供。<br />
即： JDBC指定了与数据库之前的规则接口JDK.jar，MySql服务器实现了这个接口，给出实现类mysql_jdbc.jar</li>
</ol>
<h4 id="jdbc调用流程"><a class="markdownIt-Anchor" href="#jdbc调用流程"></a> JDBC调用流程</h4>
<ol>
<li>将MySql厂商的<strong>Driver接口实现类</strong>注册到JVM中，明确与MySql连接</li>
<li>通过JDBC规范中的<strong>DriverManager工具类</strong>在JAVA工程中与MySql服务器之间建立<strong>连接通道</strong></li>
<li>通过MySql服务器厂商提供Connection接口实现类建立一个交通工具<strong>PreparedStatement</strong></li>
<li>通过交通工具<strong>PreparedStatement</strong>将SQL命令从JAVA工具推送到MySql服务器上执行并且返回结果</li>
<li>销毁本次操作涉及的所有资源对象：<br />
a. Connection接口实现类(管理连接通道)<br />
b. PreparedStatement接口实现类对象(管理交通工具)<br />
c. ResultSet接口实现类对象(查询命令返回临时表)<br />
<img src="https://i.loli.net/2021/03/07/IwlfTsakO1ZuN3W.jpg" alt="" /></li>
</ol>
<h4 id="jdbc规范下接口介绍"><a class="markdownIt-Anchor" href="#jdbc规范下接口介绍"></a> JDBC规范下接口介绍</h4>
<ul>
<li>位置：JDBC规范下的接口存在于<strong>JDK.jar</strong>下的<strong>java.sql</strong>包中</li>
<li>分类：
<ol>
<li><strong>java.sql.DriverManager类</strong>：存在<strong>JDK</strong>下。负责将数据库厂商的<strong>Driver接口实现</strong>进行注册。同时负责在Java与mysql服务器之间建立一个<strong>连接通道</strong>。</li>
<li><strong>java.sql.Connection接口</strong>：管理连接通道</li>
<li><strong>java,sql.PreparedStatement接口</strong>：管理往返交通的交通工具</li>
<li><strong>java.sql.ResultSet接口</strong>：管理服务器返回的临时表</li>
</ol>
</li>
</ul>
]]></content>
      <tags>
        <tag>JDBC</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC-3-事务管理</title>
    <url>/2021/03/08/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/JDBC/JDBC-3-%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h3 id="mysql事务命令"><a class="markdownIt-Anchor" href="#mysql事务命令"></a> MySql事务命令</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">START TRANSACTION &#x2F;&#x2F;创建事务</span><br><span class="line">DELETE FROM dept WHERE deptno &#x3D; 30 #dep.bak</span><br><span class="line">DELETE FROM emp WHERE deptno &#x3D; 30  #emp.bak</span><br><span class="line">ROLLBACK &#x2F;&#x2F; 如果出现错误，则回滚</span><br><span class="line">COMMIT  &#x2F;&#x2F;如果没有错误，则提交</span><br></pre></td></tr></table></figure>
<h3 id="jdbc命令"><a class="markdownIt-Anchor" href="#jdbc命令"></a> JDBC命令</h3>
<h4 id="1-注册"><a class="markdownIt-Anchor" href="#1-注册"></a> 1  注册</h4>
<h4 id="2-建立连接"><a class="markdownIt-Anchor" href="#2-建立连接"></a> 2  建立连接</h4>
<h4 id="31-在建立交通工具之前开启事务"><a class="markdownIt-Anchor" href="#31-在建立交通工具之前开启事务"></a> 3.1    在建立交通工具之前，开启事务</h4>
<p><code>con.setAutoCommit(false);</code></p>
<h4 id="32-建立交通工具"><a class="markdownIt-Anchor" href="#32-建立交通工具"></a> 3.2    建立交通工具</h4>
<h4 id="4-推送命令"><a class="markdownIt-Anchor" href="#4-推送命令"></a> 4  推送命令</h4>
<p>在出现错误时，抛出异常，所以使用<code>try&#123;sql命令&#125;...catch(SQLException ex)&#123;...&#125;</code><br />
<strong>Connection类</strong>下的 <strong>commit()</strong> 方法可以向MySql服务器推送 <strong>COMMIT命令</strong><br />
<strong>Connection类</strong>下的 <strong>rollback()</strong> 方法可以向MySql服务器推送 <strong>ROLLBACK命令</strong><br />
所以：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 推送命令</span><br><span class="line">try &#123;</span><br><span class="line">    ps.executeUpdate(sql_1);</span><br><span class="line">    ps.executeUpdate(sql_2);</span><br><span class="line">    con.commit(); &#x2F;&#x2F; 向服务器推送commit</span><br><span class="line">&#125;catch(SQLException ex)&#123;</span><br><span class="line">    &#x2F;&#x2F; connection通知mysql服务器将所有的表文件备份覆盖表文件，取消本次次操作</span><br><span class="line">    con.rollback(); &#x2F;&#x2F; 向服务器推送rollback</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="5-然后销毁所有资源"><a class="markdownIt-Anchor" href="#5-然后销毁所有资源"></a> 5  然后销毁所有资源</h4>
]]></content>
      <tags>
        <tag>JDBC</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC-2-开发</title>
    <url>/2021/03/07/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/JDBC/JDBC-2-%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<p><strong>Project是工作空间，里面用于存放module工程，工程一般是按照功能划分的。</strong><br />
将jar包引入后，可以在对应目录下看到Driver文件。<br />
<img src="https://i.loli.net/2021/03/07/Z74m6jIK8c1Elgy.png" alt="" /><br />
然后根据步骤与MySql服务器交互：</p>
<h2 id="实现传输步骤"><a class="markdownIt-Anchor" href="#实现传输步骤"></a> 实现传输步骤</h2>
<h3 id="-将mysql服务器提供的jar包中的driver接口实现类注册到jvm中"><a class="markdownIt-Anchor" href="#-将mysql服务器提供的jar包中的driver接口实现类注册到jvm中"></a> - 将Mysql服务器提供的jar包中的Driver接口实现类注册到JVM中</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Driver driver &#x3D; new com.mysql.cj.jdbc.Driver();</span><br><span class="line">DriverManager.registerDriver(driver);</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br></pre></td></tr></table></figure>
<h3 id="-通过drivermanager在java工程与mysql服务器中开启一个通道"><a class="markdownIt-Anchor" href="#-通过drivermanager在java工程与mysql服务器中开启一个通道"></a> - 通过DriverManager在java工程与MySql服务器中开启一个通道</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String url &#x3D; &quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;bjpowernode&quot;;</span><br><span class="line">Connection con &#x3D; DriverManager.getConnection(url,&quot;root&quot;，&quot;----&quot;);</span><br></pre></td></tr></table></figure>
<p>url表示地址，其固定格式为<code>&quot;jdbc:mysql://服务器所在计算机ip地址：服务器端口号/数据库&quot;</code><br />
getConnection参数为：地址，mysql服务器用户名和密码。</p>
<h3 id="-在通道上建立交通工具"><a class="markdownIt-Anchor" href="#-在通道上建立交通工具"></a> - 在通道上建立交通工具</h3>
<p><code>PreparedStatement ps = con.prepareStatement(&quot; &quot;);</code><br />
注意：prepareStatement参数不可以为空字符串，所以用一个空格&quot; &quot;。</p>
<h3 id="-通过交通工具将sql命令推送到mysq服务器上来执行并且待会结果"><a class="markdownIt-Anchor" href="#-通过交通工具将sql命令推送到mysq服务器上来执行并且待会结果"></a> - 通过交通工具将sql命令推送到MySq服务器上来执行并且待会结果</h3>
<p>根据sql命令不同，有两种返回值。</p>
<h4 id="推送建立和修改命令"><a class="markdownIt-Anchor" href="#推送建立和修改命令"></a> 推送建立和修改命令：</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String sql &#x3D; &quot;insert into dept(deptno, dname, loc) values(100, &#39;大额贷款部门&#39;, &#39;上海&#39;),(110, &#39;大额贷款部门&#39;, &#39;北京&#39;)&quot;;</span><br><span class="line">int result &#x3D; ps.executeUpdate(sql);</span><br></pre></td></tr></table></figure>
<p>这里sql为命令，可以根据用户需求更改。</p>
<h4 id="推送查询命令查询命令的结果其实就是一个临时表"><a class="markdownIt-Anchor" href="#推送查询命令查询命令的结果其实就是一个临时表"></a> 推送查询命令：查询命令的结果其实就是一个临时表</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String sql &#x3D; &quot;select * from dept&quot;;</span><br><span class="line">ResultSet set &#x3D; ps.executeQuery(sql);</span><br></pre></td></tr></table></figure>
<p>可以看到两种返回的结果是不同的</p>
<h3 id="-得到结果psexecuteupdate和psexecutequery"><a class="markdownIt-Anchor" href="#-得到结果psexecuteupdate和psexecutequery"></a> - 得到结果：ps.executeUpdate和ps.executeQuery：</h3>
<ol>
<li>ps.executeUpdate负责推送插入insert，更新命令update和删除命令delete<br />
返回值为操作时影响的<strong>行数</strong></li>
<li>ps.executeQuery负责推送查询命令，返回查询命令得到的<strong>临时表</strong>，需要交给 <strong>ResultSet接口</strong> 实现类管理，返回 <strong>ResultSet实例对象</strong>。
<ul>
<li><strong>ResultSet对象</strong>，是通过指针来管理临时表：
<ol>
<li>next()方法：要求指针向下移动一行，如果指针指向位置是一个具体数据行，则next()方法返回true，否则返回false。</li>
<li>得到结果：使用<strong>get方法</strong>来得到具体数据。</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">while(rs.next())&#123;</span><br><span class="line">    int deptNo &#x3D; rs.getInt(&quot;deptNo&quot;);</span><br><span class="line">    String dname &#x3D; rs.getString(&quot;dname&quot;);</span><br><span class="line">    String loc &#x3D; rs.getString(&quot;loc&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>rs对象同样需要销毁</li>
</ol>
</li>
</ul>
</li>
</ol>
<h3 id="-销毁相关资源连接和交通工具"><a class="markdownIt-Anchor" href="#-销毁相关资源连接和交通工具"></a> - 销毁相关资源：连接和交通工具</h3>
<ul>
<li>在推送建立和修改命令时，需要销毁连接通道和传输工具</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if(ps!&#x3D;null)&#123;</span><br><span class="line">    ps.close();</span><br><span class="line">&#125;</span><br><span class="line">if(con!&#x3D;null)&#123;</span><br><span class="line">    con.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>在推送查询命令时，还需要销毁ResultSet对象</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (rs!&#x3D;null)&#123;</span><br><span class="line">    rs.close();</span><br><span class="line">&#125;</span><br><span class="line">if(ps!&#x3D;null)&#123;</span><br><span class="line">    ps.close();</span><br><span class="line">&#125;</span><br><span class="line">if(con!&#x3D;null)&#123;</span><br><span class="line">    con.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="预编译技术"><a class="markdownIt-Anchor" href="#预编译技术"></a> 预编译技术：</h2>
<ul>
<li>问题：</li>
</ul>
<ol>
<li>SQL书写起来很麻烦</li>
<li>PreparedStatement对象每次只能推送一条sql命令，浪费大量时间</li>
</ol>
<ul>
<li>解决：通过预编译实现批处理操作</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 预编译形式的sql命令，预编译的sql相当于一个模具，在后续开发时只需要将数据填充到占位符即可。</span><br><span class="line">String sql &#x3D; &quot;insert into dept(deptno, dname, loc) values(?,?,?)&quot;;</span><br><span class="line">&#x2F;&#x2F; 1.注册</span><br><span class="line">Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);</span><br><span class="line">&#x2F;&#x2F; 2. 建立通道</span><br><span class="line">String url &#x3D; &quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;bjpowernode&quot;;</span><br><span class="line">Connection con &#x3D; DriverManager.getConnection(url,&quot;root&quot;,&quot;mysql123&quot;);</span><br><span class="line">&#x2F;&#x2F; 3. 建立交通工具时，需要将预编译的SQL命令注册到PreparedStatement</span><br><span class="line">PreparedStatement ps &#x3D; con.prepareStatement(sql);</span><br><span class="line">&#x2F;&#x2F; 4. 通过交通工具传递并带回数据</span><br><span class="line">&#x2F;&#x2F;    推送100条数据</span><br><span class="line">for (int i&#x3D;1;i&lt;&#x3D;100;i++)&#123;</span><br><span class="line">    &#x2F;&#x2F; 通过预编译填充SQL数据，生成全新的SQL命令</span><br><span class="line">    ps.setInt(1,i);&#x2F;&#x2F; insert into dept (deptno, dname, loc) values (1, ?, ?)</span><br><span class="line">    ps.setString(2,&quot;dept_&quot;+i);</span><br><span class="line">    ps.setString(3,&quot;BeiJing&quot;);</span><br><span class="line">    &#x2F;&#x2F; 在新的sql语言生效后，将SQL命令作为子弹添加到Ps的弹夹中</span><br><span class="line">    ps.addBatch();&#x2F;&#x2F;[sql1, sql2, sql3 ...]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 5. 一次性推出所有sql命令</span><br><span class="line">ps.executeBatch(); &#x2F;&#x2F; 推送所有数据</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 6. 销毁相关资源</span><br><span class="line">if(ps!&#x3D;null)&#123;</span><br><span class="line">    ps.close();</span><br><span class="line">&#125;</span><br><span class="line">if(con!&#x3D;null)&#123;</span><br><span class="line">    con.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>细节：
<ul>
<li>首先1注册，2建立通道，3建立交通工具</li>
<li>然后再推送命令：
<ol>
<li>预编译形式的sql命令，预编译的sql相当于一个模具，在后续开发时只需要将数据填充到占位符即可<br />
<code>String sql = &quot;insert into dept(deptno, dname, loc) values(?,?,?)&quot;;</code></li>
<li>推送数据时，使用PreparedStatement对象的put方法填充预编译的模版命令，生成一条完整的命令</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps.setInt(1,i);&#x2F;&#x2F; insert into dept (deptno, dname, loc) values (1, ?, ?)</span><br><span class="line">ps.setString(2,&quot;dept_&quot;+i);</span><br><span class="line">ps.setString(3,&quot;BeiJing&quot;);</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>将填充完成的命令填充到<strong>弹夹</strong>中去<br />
<code>ps.addBatch();</code></li>
<li>一次性推出弹夹中的所有sql命令<br />
<code>ps.executeBatch();</code></li>
</ol>
</li>
<li>最后销毁资源</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>JDBC</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>html简介</title>
    <url>/2021/03/04/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/JDBC/html%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h3 id="基本标签命令"><a class="markdownIt-Anchor" href="#基本标签命令"></a> 基本标签命令</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt; 包含了两个子标签</span><br><span class="line"></span><br><span class="line">    &lt;head&gt; 设置基础参数信息</span><br><span class="line">        &lt;meta charset&#x3D;&quot;utf-8&quot;&#x2F;&gt; 字符集编译方法</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">    &lt;body&gt; 负责通知浏览器将质地ing内容以指定方式展示在窗口中</span><br><span class="line">        &lt;p&gt;段落标签&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;h1&gt;&lt;&#x2F;h1&gt; 标题标签</span><br><span class="line"></span><br><span class="line">        &lt;ol&gt; 有序列表</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">        &lt;&#x2F;ol&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ul&gt; 无序列表</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line"></span><br><span class="line">        &lt;table border&#x3D;&quot;2&quot;边框大小  align&#x3D;&quot;center&quot;对齐方式&gt; 表格</span><br><span class="line">            &lt;tr&gt; 第一行</span><br><span class="line">                &lt;td&gt; 第一格</span><br><span class="line">                &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;td&gt; 第二格</span><br><span class="line">                &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;&#x2F;tr&gt;</span><br><span class="line"></span><br><span class="line">            &lt;tr&gt; 第二行</span><br><span class="line">            &lt;&#x2F;tr&gt;</span><br><span class="line">        &lt;&#x2F;table&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>
<h3 id="控制浏览器请求地址"><a class="markdownIt-Anchor" href="#控制浏览器请求地址"></a> 控制浏览器请求地址</h3>
<ol>
<li>超链接标签命令<br />
a. 格式：<code>&lt;a href=&quot;请求地址&quot;&gt;提示命令&lt;/a&gt;</code><br />
b. 工作原理：单机时按照href的属性去发送请求</li>
<li>表单标签命令<br />
a. 格式：<br />
<form action="请求地址"><br />
<input type="submit"> <!--提交按钮--><br />
</form><br />
b. 在点击提交按钮时，表单命令标签被触发执行。执行时浏览器按照action属性地址发送请求。</li>
</ol>
<h3 id="控制浏览器发送请求的方式"><a class="markdownIt-Anchor" href="#控制浏览器发送请求的方式"></a> 控制浏览器发送请求的方式</h3>
<ol>
<li>请求方式：决定了浏览器发送请求时的行为特征</li>
<li>浏览器可以选择的请求方式有7种类，目前只考虑<strong>post</strong>和<strong>get</strong>两种方式</li>
</ol>
<ul>
<li>GET请求方式：<br />
a. 浏览器发送请求时，携带的<strong>请求参数数量</strong>不超过4k<br />
b. 浏览器发送请求时，必须在浏览器地址栏上将请求参数信息展示出来<br />
c. 必须将请求参数信息保存在HTTP请求协议包中的<strong>请求头</strong>中<br />
d. 浏览器在接收到服务器返回的数据之后，必须将资源文件内容保存在浏览器的缓存中</li>
<li>POST请求方式：<br />
a. 浏览器发送请求时，可以携带任意数量的<strong>请求参数</strong><br />
b. 浏览器发送请求时，必须在地址栏上隐藏参数信息<br />
c. 浏览器发送请求时，必须将请求参数信息保存在HTTP请求协议包中的<strong>请求体</strong>中<br />
d. 浏览器在接收到服务器返回的数据之后，///将资源文件内容删除</li>
</ul>
<ol start="3">
<li>控制浏览器发送请求的方式</li>
</ol>
<ul>
<li>
<p>控制发送请求时采用GET请求方式：</p>
<ol>
<li>超链接标签命令在执行时，要求浏览器必须采用GET方式发送请求</li>
<li>表单标签存放在一个method属性中，通过这个属性可以要求对应的请求方式发送请求。默认请求方式为get。<br />
<code>form action=&quot;ask&quot; method=&quot;get&quot;</code><br />
<code>form action=&quot;ask&quot; method=&quot;post&quot;</code></li>
</ol>
</li>
<li>
<p>控制发送请求时采用POST请求方式：</p>
<ol>
<li>只能够通过form表单标签，设置method的方式。</li>
<li>考虑到post请求可以将病毒命令发送到服务器上，因此绝大多数门户级网站拒绝接受post请求。</li>
<li>必须使用post：文件上传，登录验证(隐藏个人信息)，索要实时变化的数据(股票，剩余门票)。</li>
</ol>
</li>
</ul>
<h3 id="浏览器携带请求参数"><a class="markdownIt-Anchor" href="#浏览器携带请求参数"></a> 浏览器携带请求参数</h3>
<ul>
<li>例子：用户请求学生信息，后端会建立一个该学生的类，然后调用方法得到结果并返回。这表示，浏览器发送请求时需要携带调用方法需要的实参。<br />
eg. <code>http://www.baidu.com?n1=100&amp;n2=200</code></li>
<li>请求参数的格式： 请求地址?请求参数1=值1&amp;请求参数2=值2</li>
<li>浏览器发送请求时，携带的接受参数来源：
<ol>
<li>通过超链接标签命令指定请求参数：<br />
eg. <code>&lt;a href=&quot;http://www.baidu.com?userName=mike&amp;password=123&gt;百度&lt;/a&gt;</code><br />
缺点：请求<strong>参数相对固定</strong>，不够灵活</li>
<li>通过表单域标签命令指定请求参数</li>
</ol>
</li>
</ul>
<h4 id="通过表单域标签命令指定请求参数"><a class="markdownIt-Anchor" href="#通过表单域标签命令指定请求参数"></a> 通过表单域标签命令指定请求参数</h4>
<ul>
<li>是一组声明在form标签内部的标签命令</li>
<li>提示用户填写对应的<strong>请求参数内容</strong>，用于提供相对灵活的请求参数内容</li>
<li>所有的表单域标签都有两个属性：name和value，类似字典。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;userName&quot; value&#x3D;&quot;mike&quot;&#x2F;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure>
<p>当用户单击submit之后，浏览器发送信息 <a href="http://www.baidu.com?userName=mike">http://www.baidu.com?userName=mike</a><br />
即会在末尾生成<strong>name=value</strong>，使用 <strong>&amp;</strong> 连接</p>
<ul>
<li>表单域标签分类:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input &#x2F;&gt;</span><br><span class="line">&lt;select&gt;&lt;&#x2F;select&gt;</span><br><span class="line">&lt;textarea&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>表单域标签value属性默认值：
<ol>
<li>大多数表单域标签的value属性默认值是空字符串</li>
<li>radio和checkbox的默认值为on</li>
</ol>
</li>
<li>表单域标签作为请求参数的条件：
<ol>
<li>声明在form标签内部</li>
<li>声明name属性</li>
<li>对于radio和checkbox标签，只有在被选中的情况下才可以作为请求参数</li>
</ol>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">密码：&lt;input type&#x3D;&quot;password&quot;&gt;&lt;br&#x2F;&gt;</span><br><span class="line">\&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;</span><br><span class="line">    姓名：&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot;&gt;&lt;br&#x2F;&gt;</span><br><span class="line">    年龄：&lt;input type&#x3D;&quot;text&#x2F;&gt;&lt;br&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure>
<p>上面只显示姓名。</p>
<ul>
<li>可以在标签中使用 disabled 设置标签不可选中，该表单标签永远不能作为请求参数</li>
<li>可以在标签中使用 readOnly 设置只读，不会影响作为请求参数</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>JSP规范介绍</title>
    <url>/2021/03/16/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/JSP/JSP%E8%A7%84%E8%8C%83%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="jsp规范介绍"><a class="markdownIt-Anchor" href="#jsp规范介绍"></a> JSP规范介绍</h2>
<ul>
<li>JSP存放在web/webapp文件夹下</li>
<li>响应对象的弊端：响应对象执行时，获得一个输出流，然后通过doGet/doPost方法写入到响应体中。者但是这只适用于处理结果小的情况。</li>
<li>JSP文件的优势：jsp文件执行时会自动将文件所有内容<strong>写入到响应体</strong>中：节约了out.print</li>
</ul>
<h2 id="jsp书写规范"><a class="markdownIt-Anchor" href="#jsp书写规范"></a> JSP书写规范</h2>
<ul>
<li>直接书写java命令需要写在特殊的标签中 <code>&lt;%</code>和<code>%&gt;</code>中。</li>
<li>输出标记<code>&lt;%=变量名%&gt;</code>，变量名里面可以含运算符号</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    Stu s &#x3D; new Stu(123, &quot;yes&quot;);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;center style&#x3D;&quot;padding-top: 200px&quot;&gt;</span><br><span class="line">学员编号：&lt;%&#x3D;s.getSid()%&gt;&lt;br&#x2F;&gt;</span><br><span class="line">学员姓名：&lt;%&#x3D;s.getSname()%&gt;</span><br><span class="line">&lt;&#x2F;center&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>使用判断语句</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    if ( s.getSid()&gt;18 )&#123;</span><br><span class="line">%&gt;</span><br><span class="line">        &lt;font style&#x3D;&quot;color: darkred; font-size: 20px&quot;&gt;已成年&lt;&#x2F;font&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">%&gt;</span><br><span class="line">        &lt;font style&#x3D;&quot;color: darkred; font-size: 20px&quot;&gt;未成年&lt;&#x2F;font&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
<h3 id="内置对象-request"><a class="markdownIt-Anchor" href="#内置对象-request"></a> 内置对象 request</h3>
<ul>
<li>类型：HttpServletRequest</li>
<li>作用：在JSP文件运行时读取请求包信息，与Servlet在请求转发过程中实现数据共享</li>
<li>流程：<br />
用户可以访问<code>http://localhost:8080/myWeb/request.jsp?userName=allen&amp;password=123</code><br />
用户<strong>无需</strong>创建，可以直接借助于内部Request对象</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    String username &#x3D; request.getParameter(&quot;userName&quot;);</span><br><span class="line">    String password &#x3D; request.getParameter(&quot;password&quot;);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
<h3 id="内置对象-session"><a class="markdownIt-Anchor" href="#内置对象-session"></a> 内置对象 Session</h3>
<ul>
<li>类型：HttpSession</li>
<li>作用：运行时通过Session指向当前用户的私人储物柜，添加或者读取共享数据</li>
<li>流程：用户无需创建，直接调用session</li>
</ul>
<h3 id="内置对象-application"><a class="markdownIt-Anchor" href="#内置对象-application"></a> 内置对象 Application</h3>
<ul>
<li>类型：ServletContext application</li>
<li>前提：同一个网站和JSP</li>
<li>作用：运行时通过Session指向当前用户的私人储物柜，添加或者读取共享数据</li>
<li>流程：用户无需创建，直接调用session</li>
</ul>
<p>隐含对象application是javax.servlet.ServletContext接口实现类的对象，其拥有application的作用范围，即application可以用于在多个用户之间保存数据，所有用户都共享同一个application，因此从application对象中读取和写入的数据都是共享的。</p>
<p>application对象封装了jsp所在web应用程序的信息，整个web应用程序对应一个application对象。服务器启动后，一旦创建了application对象，则这个application对象将会永远保持下来，直到服务器关闭为止。</p>
<h2 id="servlet与jsp的分工"><a class="markdownIt-Anchor" href="#servlet与jsp的分工"></a> Servlet与JSP的分工</h2>
<ul>
<li>Servlet负责处理业务并且得到处理结果             &gt; 大厨</li>
<li>JSP不负责处理业务，只要任务是将Servlet中处理的结果写入到响应体中         &gt; 传菜员</li>
</ul>
<h3 id="调用关系"><a class="markdownIt-Anchor" href="#调用关系"></a> 调用关系</h3>
<p>Servlet工作完毕后，一般通过请求转发的方式。向Tomcat申请调用JSP</p>
<h3 id="数据共享"><a class="markdownIt-Anchor" href="#数据共享"></a> 数据共享</h3>
<p>Servlet将结果添加到<strong>请求作用域对象</strong>中，JSP文件在运行时从<strong>请求作用域对象</strong>中得到处理结果。</p>
<h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3>
<ul>
<li>Servlet</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Servlet&#123;</span><br><span class="line">    ....</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 添加处理结果到请求作用域对象</span><br><span class="line">    request.setAttribute(&quot;key&quot;,&quot;value&quot;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 请求转发</span><br><span class="line">    request.getRequestDispatcher(&quot;&#x2F;jsp文件名&quot;).forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>Jsp</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    List stu &#x3D; (List) request.getAttribute(&quot;key&quot;); &#x2F;&#x2F; 注意这里需要强制转换数据类型</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
<h2 id="http服务器调用jsp文件步骤"><a class="markdownIt-Anchor" href="#http服务器调用jsp文件步骤"></a> Http服务器调用Jsp文件步骤</h2>
<ol>
<li>Http服务器将jsp文件内容编译为一个Servlet接口实现类（.java)</li>
<li>Http服务器将Servlet接口实现类编译为class文件（.class）</li>
<li>Http服务器负责创建这个class的实例对象，这个实例对象就是Servlet实例对象</li>
<li>Http服务器通过Servlet实例对象调用service方法，将jsp文件内容写入到响应体中</li>
</ol>
<ul>
<li>Http服务器编辑/编译JSP的位置<br />
地址： work文件夹下</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>JSP</tag>
      </tags>
  </entry>
  <entry>
    <title>JSP的使用</title>
    <url>/2021/03/20/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/JSP/jsp%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<ol>
<li>
<p>用户通过get方式访问servlet</p>
</li>
<li>
<p>得到需要处理的数据，通常是使用dao操作并且从数据库中得到操作或者查询结果</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">QuestionDap dao &#x3D; new QuestionDap();</span><br><span class="line">List list &#x3D; dao.findAll();</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>将数据添加到共享文件中</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">request.setAttribute(&quot;list&quot;,list);</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>通过请求转发向Tomcat调用jsp将结果与html标签写入到响应体中</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">request.getRequestDispatcher(&quot;&#x2F;find.jsps&quot;).forward(request,response);</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>后端</tag>
        <tag>JSP</tag>
      </tags>
  </entry>
  <entry>
    <title>EL工具包</title>
    <url>/2021/03/20/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/EL%E5%B7%A5%E5%85%B7%E5%8C%85/</url>
    <content><![CDATA[<h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2>
<ul>
<li>举例：<a href="https://blog.csdn.net/w_linux/article/details/79850223">https://blog.csdn.net/w_linux/article/details/79850223</a></li>
</ul>
<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3>
<ul>
<li>Tomcat自带的使用Java技术开发的一个jar包</li>
<li>降低JSP文件开发时的Java命令开发强度</li>
</ul>
<h3 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h3>
<p>代替response响应对象，将Servlet中doGet和doPost的执行结果写入到响应体中</p>
<h2 id="传统jsp开发步骤"><a class="markdownIt-Anchor" href="#传统jsp开发步骤"></a> 传统JSP开发步骤</h2>
<ol>
<li>从指定的作用域对象中读取处理结果</li>
<li>将得到的数据进行类型强转</li>
<li>将转换后的数据写入到响应体中</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class oneServlet extends HttpServlet &#123;</span><br><span class="line">	@Override</span><br><span class="line">	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F; 1。 分别将共享数据添加到作用域对象中</span><br><span class="line">		&#x2F;&#x2F; 全局作用对象</span><br><span class="line">		ServletContext application &#x3D; request.getServletContext();</span><br><span class="line">		&#x2F;&#x2F; 会话作用对象</span><br><span class="line">		HttpSession session &#x3D;  request.getSession();</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F; 设置</span><br><span class="line">		application.setAttribute(&quot;sid&quot;,&quot;18&quot;);</span><br><span class="line">		session.setAttribute(&quot;name&quot;,&quot;lyl&quot;);</span><br><span class="line">		request.setAttribute(&quot;home&quot;,&quot;China&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F; 2. 通过请求转发向Tomcat申请调用index_1.jsp，由该jsp负责将作用域对象共享数据读取并且写入到响应题中，交给浏览器</span><br><span class="line">		&#x2F;&#x2F; 请求转发，将共享数据写入响应体，交给Tomcat</span><br><span class="line">		request.getRequestDispatcher(&quot;&#x2F;index_1.jsp&quot;).forward(request, response);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    Integer sid &#x3D; (Integer) application.getAttribute(&quot;sid&quot;);</span><br><span class="line">    String name &#x3D; (String) session.getAttribute(&quot;name&quot;);</span><br><span class="line">    String home &#x3D; (String) request.getAttribute(&quot;home&quot;);</span><br><span class="line">%&gt;</span><br><span class="line">学员id：&lt;%&#x3D;sid%&gt; &lt;br&#x2F;&gt;</span><br><span class="line">学员姓名：&lt;%&#x3D;name%&gt; &lt;br&#x2F;&gt;</span><br><span class="line">学员住址：&lt;%&#x3D;home%&gt;</span><br></pre></td></tr></table></figure>
<h2 id="el表达式命提供的共享数据"><a class="markdownIt-Anchor" href="#el表达式命提供的共享数据"></a> EL表达式命提供的共享数据</h2>
<ul>
<li><code>$&#123; 作用域对象别名.共享数据 &#125;</code></li>
<li>作用：
<ul>
<li>EL表达式是EL工具包提供的一种特殊的命令格式 【 表达式命令格式 】</li>
<li>在JSP文件上使用</li>
<li>负责在JSP文件上从作用域对象读取指定的共享数据并且输出到响应体中</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">学员id： $&#123;applicationScope.sid&#125; &lt;br&gt;</span><br><span class="line">学员姓名：$&#123;sessionScope.name&#125; &lt;br&#x2F;&gt;</span><br><span class="line">学员住址：$&#123;requestScope.home&#125;</span><br></pre></td></tr></table></figure>
<h3 id="作用域对象别名"><a class="markdownIt-Anchor" href="#作用域对象别名"></a> 作用域对象别名</h3>
<ul>
<li>JSP作用域对象</li>
</ul>
<ol>
<li>ServletContext application    全局作用域对象</li>
<li>HttpSession session           会话作用域对象</li>
<li>HttpServletRequest request    请求作用域对象</li>
<li>PageContext pageContext       当前页作用域对象
<ul>
<li>jsp独有，Servlet中不存在</li>
<li>仅能在当前JSP文件中使用</li>
<li>真是开发中，主要用于JSTL标签与JSP文件之间的数据共享</li>
</ul>
</li>
</ol>
<ul>
<li>EL表达式中提供作用域对象的别名</li>
</ul>
<ol>
<li>applicatio --&gt; <code>$&#123;applicationScope.共享数据&#125;</code></li>
<li>session    --&gt; <code>$&#123;session.共享数据&#125;</code></li>
<li>request    --&gt; <code>$&#123;requestScope.共享数据&#125;</code></li>
<li>pageContext --&gt; <code>$&#123;pageScope.共享数据&#125;</code></li>
</ol>
<ul>
<li>EL表达式无法遍历集合内容 --&gt; JSTL</li>
</ul>
<h3 id="el表达式简化版"><a class="markdownIt-Anchor" href="#el表达式简化版"></a> EL表达式简化版</h3>
<ul>
<li>命令格式：<code>$&#123;共享数据名&#125;</code></li>
<li>命令作用：省略作用域对象名</li>
<li>工作原理：采用<strong>猜算法</strong><br />
依次从<strong>pageContext，request，session，application</strong>中得到数据，都没有则返回null。</li>
<li>隐患：
<ul>
<li>降低程序执行速度</li>
<li>导致定位错误</li>
</ul>
</li>
<li>实际开发中，为了节省时间，一般都使用简化版</li>
</ul>
<h3 id="支持运算表达式"><a class="markdownIt-Anchor" href="#支持运算表达式"></a> 支持运算表达式</h3>
<ol>
<li>数学运算</li>
<li>关系运算</li>
</ol>
<h2 id="功能2-el表达式提供的内置对象"><a class="markdownIt-Anchor" href="#功能2-el表达式提供的内置对象"></a> 功能2: EL表达式提供的内置对象</h2>
<h3 id="前提getattribute和getparameter"><a class="markdownIt-Anchor" href="#前提getattribute和getparameter"></a> 前提，getAttribute和getParameter</h3>
<h3 id="param-获取请求中的指定参数"><a class="markdownIt-Anchor" href="#param-获取请求中的指定参数"></a> param 获取请求中的指定参数</h3>
<ul>
<li>命令格式：<code>$&#123; param.请求参数名 &#125;</code></li>
<li>命令作用：从通过请求对象读取当前请求包中的请求参数内容，并将请求参数内容<strong>写入到响应体</strong>中</li>
<li>代码举例：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;$&#123;pageContext.request.contextPath &#125;&#x2F;show.jsp&quot; method&#x3D;&quot;POST&quot;&gt;</span><br><span class="line">    xxx&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot;&#x2F;&gt;&lt;br&gt;</span><br><span class="line">    yyy&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;age&quot;&#x2F;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;点击&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    name&#x3D;$&#123;param.name &#125;&lt;br&gt;</span><br><span class="line">    age&#x3D;$&#123;param.age &#125;&lt;br&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>
<h3 id="paramvalues-获取请求中的指定参数的所有值"><a class="markdownIt-Anchor" href="#paramvalues-获取请求中的指定参数的所有值"></a> paramValues 获取请求中的指定参数的所有值</h3>
<ul>
<li>命令格式：<code>$&#123;paramValues.name[索引值]</code></li>
<li>代码举例：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;$&#123;pageContext.request.contextPath &#125;&#x2F;show.jsp&quot; method&#x3D;&quot;POST&quot;&gt;</span><br><span class="line">    爱好：</span><br><span class="line">    &lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;hobby&quot; value&#x3D;&quot;sleep&quot;&gt;睡觉</span><br><span class="line">    &lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;hobby&quot; value&#x3D;&quot;play&quot;&gt;玩</span><br><span class="line">    &lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;hobby&quot; value&#x3D;&quot;eat&quot;&gt;吃</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;点击&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    name&#x3D;$&#123;param.name &#125;&lt;br&gt;</span><br><span class="line">    age&#x3D;$&#123;param.age &#125;&lt;br&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    hobby[0]&#x3D;$&#123;paramValues.hobby[0] &#125;&lt;br&gt;</span><br><span class="line">    hobby[1]&#x3D;$&#123;paramValues.hobby[1] &#125;&lt;br&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>后端</tag>
        <tag>EL</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP网络协议</title>
    <url>/2021/03/09/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/HTTP%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h4 id="网络协议包"><a class="markdownIt-Anchor" href="#网络协议包"></a> 网络协议包</h4>
<ul>
<li>前提：网络中传递的信息都是以二进制的形式存在的。接收方(浏览器/服务器)在接收到信息后，需要将(二进制)数据编译成文字图片视频等。</li>
<li>定义：网络协议包是一组有规律的二进制数据，在固定的空间内存放特定的信息。</li>
<li>优点：降低了对接受二进制数据编译的难度。</li>
</ul>
<h4 id="http网络协议包"><a class="markdownIt-Anchor" href="#http网络协议包"></a> HTTP网络协议包</h4>
<ul>
<li>基于B/S结构下互联网通信过程中，所有在网络中传递的信息都是保存在HTTP网络协议包中的。</li>
<li>分类：
<ul>
<li>HTTP请求协议包</li>
<li>HTTP响应协议包</li>
</ul>
</li>
</ul>
<h5 id="http请求协议包"><a class="markdownIt-Anchor" href="#http请求协议包"></a> HTTP请求协议包</h5>
<ul>
<li>
<p>流程：</p>
<ul>
<li>在浏览器准备发送请求时，负责创建一个http请求协议包</li>
<li>浏览器将请求信息以二进制的形式保存在HTTP请求协议包各个空间</li>
</ul>
</li>
<li>
<p>内部空间:自上而下分为4个空间：</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">请求行：</span><br><span class="line">    [   url：请求地址</span><br><span class="line">        method：请求方式  ]</span><br><span class="line"></span><br><span class="line">请求头：</span><br><span class="line">    [   请求参数信息（get) ]</span><br><span class="line"></span><br><span class="line">空白行：</span><br><span class="line">    [   (起到隔离作用)  ]</span><br><span class="line"></span><br><span class="line">请求体：</span><br><span class="line">    [   请求参数信息 (post) ]</span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2021/03/09/mOwMclyWziFKdgb.jpg" alt="" /></p>
<h5 id="http响应协议包"><a class="markdownIt-Anchor" href="#http响应协议包"></a> HTTP响应协议包</h5>
<ul>
<li>
<p>流程</p>
<ul>
<li>HTTP服务器在定位到被访问的资源文件之后，负责创建一个HTTP响应协议包。</li>
<li>HTTP服务器会将定位文件或者内容以二进制的形式写入到Http响应协议包的各个空间中。</li>
<li>HTTP服务器将响应协议包推送回发送请求的浏览器上。</li>
</ul>
</li>
<li>
<p>内部空间：也是4个空间</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">状态行空间： [   HTTP状态码  ]</span><br><span class="line"></span><br><span class="line">响应头：    [   content-type：指定浏览器采用对应编译器对响应体中二进制信息的编译方式  ]</span><br><span class="line"></span><br><span class="line">空白行：    [   无内容，隔离作用   ]</span><br><span class="line"></span><br><span class="line">响应体：    [   被访问静态资源文件内容</span><br><span class="line">              &#x2F;被访问的静态资源文件命令</span><br><span class="line">              &#x2F;被访问动态资源文件运行结果  ]</span><br></pre></td></tr></table></figure>
<h4 id="请求对象request和响应对象response生命周期"><a class="markdownIt-Anchor" href="#请求对象request和响应对象response生命周期"></a> 请求对象request和响应对象response生命周期</h4>
<ul>
<li>在Http服务器接收到浏览器发送的<strong>Http请求协议包</strong>之后，自动为当前的请求协议包生成<strong>一个请求对象</strong>和<strong>一个响应对象</strong></li>
<li>在Http服务器调用doGet/doPost方法时，负责将<strong>请求对象request</strong>和<strong>响应对象response</strong>作为实参传递到方法中，确保方法的正确实行</li>
<li>方法结束后，Tomcat负责<strong>销毁</strong>请求关联的<strong>请求对象request</strong>和<strong>响应对象response</strong><br />
<em><strong>两者生命周期贯穿一次请求的处理过程中</strong></em><br />
<img src="https://i.loli.net/2021/03/11/4EactLkGbPJm9j8.jpg" alt="" /></li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title>Request和response对象</title>
    <url>/2021/03/11/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/HttpServletResponse%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<h2 id="httpservletresponse接口"><a class="markdownIt-Anchor" href="#httpservletresponse接口"></a> HttpServletResponse接口</h2>
<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3>
<ul>
<li>HttpServletResponse接口来自于Servlet规范中，在Tomcat中存在相应的jar包。</li>
<li>负责将doGet/doPost方法的响应结果写入到<strong>响应体</strong>中并返还给浏览器。</li>
<li>HttpServletResponse接口修饰的对象被习惯称为<strong>响应对象</strong>。</li>
</ul>
<h3 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h3>
<ol>
<li>将执行结果以二进制的形式写入到响应体中</li>
<li>设置响应头中的<strong>content-type</strong>，从而控制浏览器使用对应编译器将响应体的二进制数据编译成文字，图片或者视频。</li>
<li>设置响应头中的<strong>location</strong>属性，将一个请求地址发送给浏览器，使之向对应的web服务器发送请求。</li>
</ol>
<h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3>
<h2 id="httpservletrequest接口"><a class="markdownIt-Anchor" href="#httpservletrequest接口"></a> HttpServletRequest接口</h2>
<h3 id="介绍-2"><a class="markdownIt-Anchor" href="#介绍-2"></a> 介绍</h3>
<ul>
<li>HttpServletRequest接口来自于Servlet规范中，在Tomcat中存在相应的jar包。</li>
<li>负责在doGet或者doPost方法运行时读取Http<strong>请求协议包</strong>中的信息。</li>
<li>HttpServletResponse接口修饰的对象被习惯称为<strong>请求对象</strong>。</li>
</ul>
<h3 id="功能-2"><a class="markdownIt-Anchor" href="#功能-2"></a> 功能</h3>
<ul>
<li>可以读取Http请求协议包中<strong>请求行</strong>的信息</li>
<li>可以读取保存在http请求协议包<strong>请求头</strong>或者<strong>请求体</strong>中的请求参数信息</li>
<li>可以代替浏览器向web服务器申请资源调用</li>
</ul>
<h3 id="代码实现-2"><a class="markdownIt-Anchor" href="#代码实现-2"></a> 代码实现</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">    &#x2F;&#x2F; 1. 通过请求对象读取请求行中的url信息</span><br><span class="line">    String url &#x3D; request.getRequestURL().toString();</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 2. 通过请求对象读取请求行中的method信息</span><br><span class="line">    String method &#x3D; request.getMethod();</span><br><span class="line"></span><br><span class="line">    System.out.println(&quot;URL:&quot; + url);</span><br><span class="line">    System.out.println(&quot;Method: &quot;+ method);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 3. 通过请求对象读取 [uri信息]</span><br><span class="line">    &#x2F;&#x2F; URI: 资源文件精准定位地址，在请求行中并没有uri属性，实际上是从url截取的一个字符串</span><br><span class="line">    &#x2F;&#x2F; 格式： &#x2F;网站名&#x2F;资源文件名</span><br><span class="line">    &#x2F;&#x2F; 作用：用于让Http服务器对被访问的资源文件进行定位处理</span><br><span class="line">    String uri &#x3D; request.getRequestURI();</span><br><span class="line">    System.out.println(&quot;URI: &quot;+ uri);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 4. 通过请求对象或者当前请求头中所有 请求参数名称</span><br><span class="line">    Enumeration paramNames &#x3D; request.getParameterNames(); &#x2F;&#x2F;将所有请求参数名称都保存到一个枚举对象进行返回</span><br><span class="line">    while (paramNames.hasMoreElements())&#123;</span><br><span class="line">        String paraName &#x3D; (String)paramNames.nextElement();</span><br><span class="line">        &#x2F;&#x2F;	2. 通过请求对象读取指定的请求参数的值</span><br><span class="line">        String value &#x3D; request.getParameter(paraName);</span><br><span class="line">        &#x2F;&#x2F; 打印</span><br><span class="line">        System.out.println(paraName+&quot; ：&quot;+value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意</h3>
<p>发送中文时候，以Get方式，得到正常结果，但是Post方式，便无法正常显示。</p>
<ul>
<li>
<p>原因：</p>
<ul>
<li>浏览器以Get方式发送，将请求参数放在请求头中。Http请求协议包到达Http服务器时，会将请求头交给Tomcat解码，默认方式为utf-8，支持中文。</li>
<li>浏览器以Post方式发送，会将请求参数放在请求体中。Http请求协议包到达Http服务器时，会将请求体交Request解码，默认使用【ISO-8859-1】字符集，无法解码中文。</li>
</ul>
</li>
<li>
<p>解决：<br />
在读取请求体内容之前，通知请求体对象使用utf-8字符集</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">request.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">String postValue &#x3D; request.getParameter(&quot;userName&quot;);</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>后端</tag>
        <tag>servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>MVC开发规则</title>
    <url>/2021/03/21/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/MVC%E5%BC%80%E5%8F%91%E8%A7%84%E5%88%99/</url>
    <content><![CDATA[<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2>
<ul>
<li>MVC开发规则制定了互联网通信开发过程中必须出现的角色有哪些</li>
<li>MVC开发规则制定了互联网通信开发过程中必须出现的角色担任的职责</li>
<li>MVC开发规则制定了互联网通信开发过程中必须出现的角色的出场顺序</li>
</ul>
<h2 id="角色"><a class="markdownIt-Anchor" href="#角色"></a> 角色</h2>
<ol>
<li>
<p><strong>Dao对象</strong><br />
提供某张表文件的操作细节，降低对表文件的操作难度<br />
避免反复开发表文件操作的代码，提高了代码的复用性</p>
</li>
<li>
<p><strong>Service对象</strong><br />
服务对象 – 提供了业务的具体解决方案<br />
一个方法指定一个业务的解决方案，提供复用性。<br />
网站中每个业务都有一个独立的标准的解决方案。</p>
</li>
</ol>
<h3 id="业务"><a class="markdownIt-Anchor" href="#业务"></a> 业务</h3>
<ul>
<li>介绍：浏览器向Http服务器发送请求 / 用户向网站发送请求</li>
<li>例子：张三发送请求，要求在服务端将自己账户的钱转给李四</li>
<li>业务处理方案：</li>
</ul>
<ol>
<li>判断张三和李四是否合法系统用户</li>
<li>读取张三账户余额，判断是否充足</li>
<li>读取李四账户余额，</li>
<li>更新张三账户余额</li>
<li>更新李四账户余额</li>
</ol>
<ul>
<li>特征</li>
</ul>
<ol>
<li>真实业务场景中，一个业务往往包含多个分支任务，新词工作量比较大。</li>
<li>只有所有的分支任务都顺利解决，该业务才能够处理成功。</li>
</ol>
<ul>
<li>开发困扰</li>
</ul>
<ol>
<li>一个业务可能在网站中多个地方重复出现，需要进行<strong>封装</strong>。</li>
<li>不同程序员解决同一个业务时，可能会有不同的解决方案和结果。</li>
</ol>
<h2 id="mvc必须出现的角色"><a class="markdownIt-Anchor" href="#mvc必须出现的角色"></a> MVC必须出现的角色</h2>
<ol>
<li>C (Controller object) – 控制层对象 – Servlet对象</li>
<li>M (Model object) – 业务模型对象 – Service对象</li>
<li>V (View object) – 视图层对象 – jsp/HttpServletResponnse</li>
</ol>
<h2 id="角色职责"><a class="markdownIt-Anchor" href="#角色职责"></a> 角色职责</h2>
<ul>
<li>C（servlet对象）
<ol>
<li>(可以) 调用请求对象读取参数</li>
<li>(必须) 调用Servlet对象处理业务</li>
<li>(必须) 调用是视图对象将结果写入到响应体中</li>
</ol>
</li>
<li>M (service对象)
<ol>
<li>处理业务中所有分支任务</li>
<li>根据分支任务执行情况判断业务是否处理成功</li>
<li>必须通过return将处理结果返回给控制层对象</li>
</ol>
</li>
<li>V（jsp/httpServiceResponse)
<ol>
<li><strong>禁止参与业务处理</strong></li>
<li>唯一任务将处理结果写入到响应体中</li>
</ol>
</li>
</ul>
<h2 id="角色出场顺序"><a class="markdownIt-Anchor" href="#角色出场顺序"></a> 角色出场顺序</h2>
<ul>
<li>请求调用顺序：浏览器发送请求给Servlet，Servlet调用Service，使用dao处理。</li>
<li>响应顺序： dao–&gt;Service–&gt;Servlet–&gt;View–&gt;响应体–&gt;tomcat交给浏览器</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>MVC</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat服务器</title>
    <url>/2021/03/09/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/Tomcat%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h3 id="http服务器"><a class="markdownIt-Anchor" href="#http服务器"></a> HTTP服务器</h3>
<ul>
<li>服务器的一种，行为与HTTP协议相关。</li>
<li>可以接收来自于浏览器发送的Http请求协议包，并且自动对Http请求协议包内容进行解析。</li>
<li>解析后自动定位到被访问的文件，并且写入Http响应协议包中。</li>
<li>最后负责将Http响应协议包推送回发起请求的浏览器上。</li>
</ul>
<h3 id="tomcat服务器"><a class="markdownIt-Anchor" href="#tomcat服务器"></a> Tomcat服务器</h3>
<h4 id="一些配置运行问题"><a class="markdownIt-Anchor" href="#一些配置运行问题"></a> 一些配置运行问题</h4>
<ol>
<li>bin目录下，<code>sudo sh startup.sh</code>，可以开启tomcat服务器</li>
<li>打开l<code>ocolhost:8080/</code>后，发现404，有可能是端口被占用</li>
<li><code>sudo lsof -i :8080</code> 查看当前正在占用的进程</li>
<li><code>sudo kill -9 838</code> 关闭在占用的进程，后面放置pid</li>
<li>bin目录下,<code>sudo sh shutdown.sh</code>，可以关闭tomcat服务器</li>
</ol>
<h4 id="七个工作文件夹"><a class="markdownIt-Anchor" href="#七个工作文件夹"></a> 七个工作文件夹：</h4>
<ol>
<li>bin：管理命令中心</li>
<li>conf：核心配置文件位置</li>
<li>lib：tomcat运行时需要的jar包</li>
<li>logs：日志，提供给运维工程师</li>
<li>temp：临时的文件</li>
<li>webapps：相关的资源文件</li>
<li>work：工作空间</li>
</ol>
<h3 id="模拟第一次互联网通信"><a class="markdownIt-Anchor" href="#模拟第一次互联网通信"></a> 模拟第一次互联网通信</h3>
<ul>
<li>网站：放置可以被http服务器调用的静态和动态文件的文件夹</li>
<li>在IDEA中管理Tomcat的步骤：
<ol>
<li>idea中</li>
<li>把一个静态资源添加到网站中去</li>
<li>启动Tomcat</li>
</ol>
</li>
</ul>
<h3 id="第一个网站"><a class="markdownIt-Anchor" href="#第一个网站"></a> 第一个网站</h3>
<ol>
<li>建立<br />
new module/ java enterprise 然后根据指令建立<br />
注意勾选 web Profile（8.0.1）</li>
<li>建立成功后，会自动新建两个文件夹src和web。<br />
这里遇到了问题，没有web文件夹。右击module/add framework support也找不到web文件夹的选项，则File-&gt;Project Structure-&gt;artifacts删除web。然后再右击创建。</li>
</ol>
<ul>
<li>src文件夹：放置动态资源java文件</li>
<li>web文件夹：存放静态资源文件，和需要的jar包，和配置文件<br />
jar包需要在web文件夹手动新建文件夹lib，然后将jar包放进去。</li>
</ul>
<ol start="3">
<li>run-&gt;Deployment将网站交给tomcat，+号选择artifact然后选择网站。可以在下方Application context设置网站别名</li>
<li>每一次更新后，都需要重启tomcat太麻烦，可以在configuration中设置修改后，自动提交给deployment，然后以debug形式启动。<br />
<img src="https://i.loli.net/2021/03/11/BcnC9VsR3oHZjt5.png" alt="" /></li>
</ol>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>servlet创建实现类</title>
    <url>/2021/03/11/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/servlet%E5%88%9B%E5%BB%BA%E5%AE%9E%E7%8E%B0%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="servlet接口实现类的开发步骤"><a class="markdownIt-Anchor" href="#servlet接口实现类的开发步骤"></a> Servlet接口实现类的开发步骤</h2>
<h3 id="创建一个java继承httpservlet子类使之成为一个servlet接口实现类"><a class="markdownIt-Anchor" href="#创建一个java继承httpservlet子类使之成为一个servlet接口实现类"></a> 创建一个JAVA继承HttpServlet子类，使之成为一个Servlet接口实现类</h3>
<ul>
<li>HttpServlet继承了GenericServlet抽象类，而GenericServlet实现了Servlet, ServletConfig, Serializable这三个接口。<br />
<code>public class OneServlet extends HttpServlet &#123;&#125;</code></li>
<li>抽象类GenericServlet的作用：
<ul>
<li>降低接口实现类对接口实现的难度</li>
<li>将接口中不需要使用的方法在抽象类中完成</li>
<li>这接口实现类只需要对接口需要的方法进行重写即可</li>
</ul>
</li>
<li>Servlet 接口中：
<ul>
<li>init，getServletConfig，getServletInfo，destroy方法对Servlet接口实现类没用</li>
<li>只有service方法被重写：</li>
</ul>
</li>
<li>Tomcat根据Servlet规范调用Servlet接口实现类规则：
<ul>
<li>Tomcat有权创建Servlet接口实现类实例对象<br />
Servlet oneServlet = new OneServlet();</li>
<li>Tomcat根据实例对象调用Service方法处理请求<br />
oneServlet.service();</li>
</ul>
</li>
</ul>
<h3 id="重写httpservlet父亲类两个方法doget或者dopost"><a class="markdownIt-Anchor" href="#重写httpservlet父亲类两个方法doget或者dopost"></a> 重写HttpServlet父亲类两个方法：doGet或者doPost</h3>
<ul>
<li>使用get方式访问使用doGet，post方式请求使用doPost</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException&#123;</span><br><span class="line">    &#x2F;&#x2F; get方式</span><br><span class="line">    System.out.println(&quot;get被调用&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException&#123;</span><br><span class="line">    &#x2F;&#x2F; post方式</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>HttpServlet中的service()方法已经被重写，可以根据请求方式决定如何调用，所以只需要重写doGet和doPost</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service(method, ...)&#123;</span><br><span class="line">    if method&#x3D;&#x3D;&quot;GeT&quot; doGet()</span><br><span class="line">    else if method&#x3D;&#x3D;&quot;Post&quot; doPost()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="将servlet接口的实现类信息注册到tomcat服务器中"><a class="markdownIt-Anchor" href="#将servlet接口的实现类信息注册到tomcat服务器中"></a> 将Servlet接口的实现类信息注册到Tomcat服务器中</h3>
<p>在网站中会存在很多java类，有些是普通java类，有些是动态资源文件。</p>
<ol>
<li>将Servlet接口实现类路径地址交给Tomcat<br />
在网站》web文件夹》web-inf》web.xml填写信息</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt; ServletName &lt;&#x2F;servlet-name&gt;  &#x2F;&#x2F;声明一个变量servlet接口实现类类路径</span><br><span class="line">    &lt;servlet-class&gt; controller&#x2F;OneServlet.java &lt;&#x2F;servlet-class&gt;  &#x2F;&#x2F;声明servlet接口的相对地址</span><br><span class="line">&lt;&#x2F;servlet&gt;</span><br></pre></td></tr></table></figure>
<p>Tomcat会自动声明 <code>String ServletName = &quot;controller/OneServlet.java&quot;;</code><br />
2. 为了降低用户访问Servlet接口实现类的难度，需要设置请求别名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt; name &lt;&#x2F;servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt; &#x2F;one &lt;&#x2F;url-pattern&gt;   &#x2F;&#x2F; 设置简短的请求别名，以&quot;&#x2F;&quot;开头</span><br><span class="line">&lt;&#x2F;servlet-mapping&gt;</span><br></pre></td></tr></table></figure>
<h3 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h3>
<p>如果浏览器向tTomcat索要OneServlet时，地址应该写<code>http://localhost:8080/myWeb/one</code></p>
<h2 id="servlet生命周期"><a class="markdownIt-Anchor" href="#servlet生命周期"></a> Servlet生命周期</h2>
<ol>
<li>网站中所有Servlet接口实现类的实例对象，只能由Web服务器负责创建。开发人员无法手动创建。</li>
<li>在默认情况下，当Wen服务器接收到对于当前servlet接口实现类第一次请求时，会自动创建这个Servlet接口实现类的实力例对象。</li>
<li>在手动配置情况下，可以使用<code>&lt;load-on-startup&gt; 标签</code>令Web服务器启动时，就自动创建某个Servlet接口实现类的实力对象。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt; ServletName &lt;&#x2F;servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt; controller&#x2F;OneServlet.java &lt;&#x2F;servlet-class&gt;</span><br><span class="line">    &lt;load-on-startup&gt; 30 &lt;&#x2F;load-on-startup&gt; &#x2F;&#x2F; &gt;0时自动启动</span><br><span class="line">&lt;&#x2F;servlet&gt;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>在web服务器运行期间， 一个servlet接口实现类只能被创建出一个实例对象</li>
<li>在web服务器关闭时，会自动销毁servlet对象</li>
</ol>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>servlet监听器接口</title>
    <url>/2021/03/14/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/servlet%E7%9B%91%E5%90%AC%E5%99%A8%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2>
<ol>
<li>是一组来自于Servlet规范下的接口，共有8个接口。存在于servlet-api.jar包中。</li>
<li>监听器接口需要开发人员亲自实现，Http服务器提供jar包并没有对应的实现类。</li>
<li>监听器接口用于监控<strong>作用域对象生命周期的变化时刻</strong>以及<strong>作用域对象共享数据的变化时刻</strong>。</li>
</ol>
<h2 id="作用域对象"><a class="markdownIt-Anchor" href="#作用域对象"></a> 作用域对象</h2>
<ul>
<li>定义：存在于服务端内存中，可以在某些条件下为两个Servlet之间提供数据共享方案的对象。</li>
<li>类型：
<ol>
<li>ServletContext：全局作用域对象</li>
<li>HttpSession：会话作用域对象</li>
<li>HttpServletRequest：请求作用域对象</li>
</ol>
</li>
</ul>
<h2 id="监听器接口实现类开发规范"><a class="markdownIt-Anchor" href="#监听器接口实现类开发规范"></a> 监听器接口实现类开发规范</h2>
<ol>
<li>根据监听的实际情况，选择对应监听接口来实现</li>
<li>重写监听器接口中<strong>监听事件处理方法</strong></li>
<li>在Web.xml文件中将监听器接口实现类注册到<strong>Http服务器</strong>上</li>
</ol>
<p>  </p>
<h2 id="servletcontextlistener接口"><a class="markdownIt-Anchor" href="#servletcontextlistener接口"></a> ServletContextListener接口</h2>
<h3 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h3>
<p>通过这个接口合法地检测全局作用域对象被初始化的时刻以及被撤销的时刻</p>
<h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3>
<ol>
<li>监听器一般放置新建的<strong>listener文件目录下</strong>，是一个ServletContextListener接口实现类，并且重写了如下两个方法。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class oneListener implements ServletContextListener &#123;</span><br><span class="line">    &#x2F;&#x2F; 在全局作用域对象被Http服务器初始化时被调用</span><br><span class="line">	@Override</span><br><span class="line">	public void contextInitialized(ServletContextEvent sce) &#123;</span><br><span class="line">		System.out.println(&quot;begin&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 在全局作用域对象被Http服务器销毁时被调用</span><br><span class="line">	@Override</span><br><span class="line">	public void contextDestroyed(ServletContextEvent sce) &#123;</span><br><span class="line">		System.out.println(&quot;end&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>同时需要在web.xml文件中注册监听器接口实现类</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;listener&gt;</span><br><span class="line">    &lt;listener-class&gt;com.listener.oneListener&lt;&#x2F;listener-class&gt;</span><br><span class="line">&lt;&#x2F;listener&gt;</span><br></pre></td></tr></table></figure>
<p> <br />
 </p>
<h2 id="servletcontextattributelistener接口"><a class="markdownIt-Anchor" href="#servletcontextattributelistener接口"></a> ServletContextAttributeListener接口</h2>
<h3 id="作用-2"><a class="markdownIt-Anchor" href="#作用-2"></a> 作用</h3>
<p>通过这个接口合法地监控全局作用域对象共享数据变化的时刻</p>
<h3 id="代码实现-2"><a class="markdownIt-Anchor" href="#代码实现-2"></a> 代码实现</h3>
<ol>
<li>public void attributeAdded(); //全局作用对象添加共享数据</li>
<li>public void attributeReplace(); //全局作用对象更新共享数据</li>
<li>public void attributeRemove(); //全局作用对象删除共享数据</li>
</ol>
<ul>
<li>全局作用对象共享数据变化时刻：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ServletContext application &#x3D; request.getServletContext();</span><br><span class="line">application.setAttribute(&quot;key1&quot;, 100);  &#x2F;&#x2F; 添加共享数据</span><br><span class="line">application.setAttribute(&quot;key1&quot;, 200);  &#x2F;&#x2F; 更新共享数据</span><br><span class="line">application.removeAttribute(&quot;key1&quot;);    &#x2F;&#x2F; 删除共享数据</span><br></pre></td></tr></table></figure>
<p>  </p>
<h2 id="监听器接口应用提前建立connection"><a class="markdownIt-Anchor" href="#监听器接口应用提前建立connection"></a> 监听器接口应用：提前建立Connection</h2>
<ul>
<li>
<p>问题：通过监听器得到整个操作的时间。</p>
</li>
<li>
<p>解决：JDBC规范中，Connection创建与销毁的操作最浪费时间。我们应该尝试在Http服务器初始化时，就建立一批Connection实现类。</p>
</li>
<li>
<p>代码实现：</p>
<ul>
<li>在Tomcat启动时，预先建立20个Connection，在userDao.add方法执行时直接使用创建好的Connection</li>
</ul>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class oneListener implements ServletContextListener &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void contextInitialized(ServletContextEvent sce)&#123;</span><br><span class="line">        Map conList &#x3D; new HashMap();</span><br><span class="line">        for (int i&#x3D;1; i&lt;20; i++)&#123;</span><br><span class="line">            jdbcUtil ju &#x3D; new jdbcUtil();</span><br><span class="line">            Connection con &#x3D; ju.createCon();</span><br><span class="line">            conList.put(con, true); &#x2F;&#x2F; true:表示处于空闲的状态</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 为了在http服务器运行期间，一直可以使用这20个Connection，将Connection保存到全局作用域对象中</span><br><span class="line">        ServletContext application &#x3D; sce.getServletContext();</span><br><span class="line">        application.setAttribute(&quot;conList&quot;,conList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 在Http服务器在被关闭时，要销毁Connection</span><br><span class="line">    @Override</span><br><span class="line">    public void contextDestroyed(ServletContextEvent sce) &#123;</span><br><span class="line">        ServletContext application &#x3D; sce.getServletContext();</span><br><span class="line">        Map conLid &#x3D; (Map)application.getAttribute(&quot;conList&quot;);</span><br><span class="line">        &#x2F;&#x2F; 迭代Map，销毁所有connection</span><br><span class="line">        Iterator it &#x3D; conLid.keySet().iterator();</span><br><span class="line">        while (it.hasNext())&#123;</span><br><span class="line">            Connection con &#x3D; (Connection) it.next();</span><br><span class="line">            if (con!&#x3D;null) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    con.close();</span><br><span class="line">                &#125; catch (SQLException throwables) &#123;</span><br><span class="line">                    throwables.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>记得需要注册该文件</li>
</ul>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;listener&gt;</span><br><span class="line">    &lt;listener-class&gt;com.listener.oneListener&lt;&#x2F;listener-class&gt;</span><br><span class="line">&lt;&#x2F;listener&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>然后在jdbcUtil文件中重载createCon方法, createPreparedStatement方法 和 close方法</li>
<li><strong>其实不是重载了createCon方法，而是创建了一个getCon方法</strong>：先前的方法是在jdbc中createCon()通过注册，登陆得到并返回一个通道Connection，交给createPreparedStatement(String sql)方法，最终得到结果。<br />
而上文中重载的contextInitialized(ServletContextEvent sce)方法，中是直接调用了createCon()方法的，需要利用方法内的身份信息生成管道，再放入一个request变量的map属性中。<br />
重载的createCon(HttpServletRequest request)方法，其实更精确表达为getCon(HttpServletRequest request)中，无需身份验证，直接从map中得到之前生成的管道。</li>
</ul>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   &#x2F;&#x2F; 重载createCon方法  ---&gt; 新建getCon(request)方法</span><br><span class="line">public Connection getCon(HttpServletRequest request) &#123;</span><br><span class="line">	String url &#x3D; &quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;bjpowernode&quot;;</span><br><span class="line">	ServletContext application &#x3D;request.getServletContext();</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; 从全局作用域对象得到map</span><br><span class="line">	Map conList &#x3D; (Map)application.getAttribute(&quot;conList&quot;);</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; 从map中得到空闲的Conection</span><br><span class="line">	Iterator it &#x3D; conList.keySet().iterator();</span><br><span class="line">	while (it.hasNext())&#123;</span><br><span class="line">		con &#x3D; (Connection) it.next();</span><br><span class="line">		&#x2F;&#x2F; 空闲状态则直接得到</span><br><span class="line">		if ((boolean)conList.get(con) &#x3D;&#x3D;true) &#123;</span><br><span class="line">			conList.put(con,false);</span><br><span class="line">			break;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	return con;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F; 重载createPreparedStatement方法</span><br><span class="line">public PreparedStatement createPreparedStatement(HttpServletRequest request, String sql) &#123;</span><br><span class="line">	try &#123;</span><br><span class="line">		this.ps &#x3D; getCon(request).prepareStatement(sql);</span><br><span class="line">	&#125; catch (SQLException var4) &#123;</span><br><span class="line">		var4.printStackTrace();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	return this.ps;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F; 重载close方法</span><br><span class="line">   public void close(HttpServletRequest request) &#123;</span><br><span class="line">	ServletContext application &#x3D; request.getServletContext();</span><br><span class="line">	Map conList &#x3D; (Map)application.getAttribute(&quot;conList&quot;);</span><br><span class="line">	conList.put(con,true);</span><br><span class="line"></span><br><span class="line">	try &#123;</span><br><span class="line">		if (this.ps !&#x3D; null) this.ps.close();</span><br><span class="line">	&#125; catch (SQLException var2) &#123;</span><br><span class="line">		var2.printStackTrace();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后重载userDao中调用上述方法的方法。</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>Servlet</title>
    <url>/2021/03/10/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/servlet%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<h3 id="servlet-servlet容器-和-web服务器等概念"><a class="markdownIt-Anchor" href="#servlet-servlet容器-和-web服务器等概念"></a> Servlet, Servlet容器 和 Web服务器等概念</h3>
<p>来源：<code>http：//blog.csdn.net/iAm333</code></p>
<h4 id="web技术"><a class="markdownIt-Anchor" href="#web技术"></a> web技术</h4>
<p>早期web用于浏览静态页面，但是随着需求增多，用户需要更多的交互操作。<br />
Java Servlet是一个基于Java技术的web组件，运行在服务器端，由Servlet容器所管理，用于生成动态内容。<br />
Servlet是一个平台独立的Java类，编写一个Servlet其实就是编写一个java类。<br />
Servlet被编译成独立的字节码然后传输到支持Java技术的Web服务器中运行。<br />
Servlet容器也称Servlet引擎，是Web服务器的一部分，用于在发送的请求与响应之上提供网络服务。<br />
Servlet不可以独立运行，只能够部署到Servlet容器中，由容器实现实力化和调用方法。</p>
<ul>
<li>流程：用户通过单机链接或者输入URL后，web服务器将请求交给Servlet容器，Servlet容器实例化Servlet并且调用相应的方法来处理请求，产生一个响应结果。这个响应结果由Servlet容器返回给Web服务器，Web服务器包装这个响应，以Http响应的形式恢传递给浏览器并展示。</li>
</ul>
<h4 id="servlet容器"><a class="markdownIt-Anchor" href="#servlet容器"></a> Servlet容器</h4>
<ul>
<li>通过提供对应的方法，链接web服务器和Servlet</li>
<li>分类：
<ol>
<li>独立Servlet容器</li>
<li>进程内的Servlet容器：<br />
Servlet容器由Web服务器插件和Java容器两部分组成。Web服务插件在某个Web服务器内部地址空间中开启一个java虚拟机，使java容器可以在这个java虚拟机中加载并且运行Servlet。当获得调用Servlet的请求时，Servlet服务器插件取得控制并且传递给java容器，然后java容器将请求交给Servlet处理。</li>
<li>进程外的Servlet容器：<br />
Servlet容器存在于Web服务器之外，他也是由Web服务器插件和Java容器两部分组成，两者使用ipc机制通信。当一个调用Servlet请求传达时，web服务器插件得到请求并且传给java容器。</li>
</ol>
</li>
</ul>
<h4 id="tomcat"><a class="markdownIt-Anchor" href="#tomcat"></a> Tomcat</h4>
<ul>
<li>Servlet容器的一种</li>
<li>流程：
<ol>
<li>客户端(浏览器)发送请求给Web服务器</li>
<li>Web服务器收到请求后，传递给Servlet容器</li>
<li>Servlet容器加载Servlet，产生Servlet实例后，创建实例处理请求</li>
<li>Servlet实例处理并且返回结果给客户端，容器负责确保相应的正确输出，同时将控制返回给web服务器</li>
</ol>
</li>
</ul>
<p>来自于JAVAEE规范中的一种</p>
<ul>
<li>
<p>作用：</p>
<ol>
<li>指定了动态资源文件开发步骤</li>
<li>指定了Http服务器调用动态资源文件规则</li>
<li>指定Http服务器管理动态资源文件实例对象规范</li>
</ol>
</li>
<li>
<p>Servlet接口实现类</p>
<ol>
<li>来自于Servlet规范下的一个接口，存在于Http服务器提供的jar包中。</li>
<li>Tomcat服务器下lib文件有一个Servlet-api.jar存放Servlet接口。</li>
<li>Servlet规范中认为能调用的资源文件必须是一个Servlet接口实现类。</li>
</ol>
</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>互联网通信</title>
    <url>/2021/03/03/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/%E4%BA%92%E8%81%94%E7%BD%91%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<h3 id="浏览器通信"><a class="markdownIt-Anchor" href="#浏览器通信"></a> 浏览器通信</h3>
<p>Http服务器下对于共享资源文件分类：</p>
<ol>
<li>静态资源文件：<br />
a. 文件内容固定，比如文档，图片，视频。<br />
b. 如果文件中存放的是命令，则这些命令只能在浏览器中编译与执行。<br />
c. 静态文件被索要时，Http服务器直接通过<strong>输出流</strong>将静态文件中的内容或者命令以<strong>二进制形式</strong>推送给发起请求浏览器。</li>
<li>动态资源文件：<br />
a.文件中存放命令，并且命令不能够在浏览器中编译与执行，只能在服务端计算机编译执行 (.class)<br />
b. 动态文件被索要时，http服务器自动使用new函数创建当前的class文件的实例对象，通过调用对象的方法来处理请求。通过<strong>输出流</strong>将运行结果返回请求浏览器。</li>
</ol>
<p><img src="https://i.loli.net/2021/03/04/dCGtvIoKLqgJE2B.png" alt="互联网通信1" /><br />
<img src="https://i.loli.net/2021/03/09/6QboE5Y4FOy8L92.png" alt="新版本通信图" /><br />
<img src="https://i.loli.net/2021/03/16/1ctEGDh4el3X2wV.png" alt="" /></p>
<h3 id="后端开发人员的职责"><a class="markdownIt-Anchor" href="#后端开发人员的职责"></a> 后端开发人员的职责</h3>
<p>控制浏览器请求行为：</p>
<ol>
<li>发送的请求地址</li>
<li>发送请求的方式</li>
<li>发送请求携带的参数<br />
<img src="https://i.loli.net/2021/03/04/HDjyScWtAe8Mh4C.png" alt="开发职责" /></li>
</ol>
<h3 id="一次请求过程"><a class="markdownIt-Anchor" href="#一次请求过程"></a> 一次请求过程</h3>
<p><img src="https://i.loli.net/2021/03/12/TR5UQ26h4jbn8HB.jpg" alt="" /></p>
]]></content>
      <tags>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>多个Servlet之间的数据共享方案</title>
    <url>/2021/03/13/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/%E5%A4%9A%E4%B8%AAServlet%E4%B9%8B%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E5%85%B1%E4%BA%AB%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h2 id="多个servlet之间的数据共享实现方案"><a class="markdownIt-Anchor" href="#多个servlet之间的数据共享实现方案"></a> 多个Servlet之间的数据共享实现方案</h2>
<ul>
<li>数据共享：Oneservlet工作完毕后，将产生的数据交给TwoServlet来使用。</li>
<li>四种数据共享方案：
<ol>
<li>ServletContext接口</li>
<li>Cookie接口</li>
<li>HttpSession接口</li>
<li>HttpServletRequest接口</li>
</ol>
</li>
</ul>
<h2 id="servletcontext接口"><a class="markdownIt-Anchor" href="#servletcontext接口"></a> ServletContext接口</h2>
<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3>
<ul>
<li>来自于Servlet规范</li>
<li>存在于servlet-api.jar</li>
<li>如果两个Servlet来自于<strong>同一个网站</strong>。彼此之间通过网站的<strong>ServletContext实例对象</strong>实现数据共享</li>
<li>开发人员习惯于称之为<strong>全局作用域对象</strong></li>
</ul>
<h3 id="原理相当于一个map有key-value键值对"><a class="markdownIt-Anchor" href="#原理相当于一个map有key-value键值对"></a> 原理：相当于一个map，有key : value键值对。</h3>
<p><img src="https://i.loli.net/2021/03/13/TcMabQjROg7CZwm.jpg" alt="" /><br />
每一个网站都存在一个全局作用域对象。这个网站中每一个Servlet都可以将一个数据存入到全局作用域对象中，也都可以从全局作用域对象中得到这个数据进行使用。</p>
<h3 id="生命周期"><a class="markdownIt-Anchor" href="#生命周期"></a> 生命周期</h3>
<ol>
<li>http服务器启动过程中，都会自动为网站创建一个<strong>ServletContext实例对象</strong></li>
<li>运行期间一个网站只有一个全局对象</li>
<li>http服务器运行期间，全局对象一直存活</li>
<li>http服务器准备关闭前，全局对象进行销毁</li>
</ol>
<h3 id="命令实现"><a class="markdownIt-Anchor" href="#命令实现"></a> 命令实现</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">OneServlet&#123;</span><br><span class="line"></span><br><span class="line">    public void doGet(request, response)&#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 1.通过请求对象向Tomcat请求全局作用对象，习惯用application命名</span><br><span class="line">        ServletContext application &#x3D; request.getServletContext();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 2. 将数据添加到全局作用对象中</span><br><span class="line">        application.setAttribute(&quot;key&quot;，value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">TwoServlet&#123;</span><br><span class="line"></span><br><span class="line">    public void doGet(request, response)&#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 1.通过请求对象向Tomcat请求全局作用对象，习惯用application命名</span><br><span class="line">        ServletContext application &#x3D; request.getServletContext();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 2. 从全局作用对象中得到指定关键字对象数据</span><br><span class="line">        Object 数据名 &#x3D; application.getAttribute(&quot;key&quot;);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 3. 后面根据需要作数据类型转换</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="cookie"><a class="markdownIt-Anchor" href="#cookie"></a> Cookie</h2>
<h3 id="介绍-2"><a class="markdownIt-Anchor" href="#介绍-2"></a> 介绍</h3>
<ul>
<li>Cookie来自于Servlet规范中的一个工具类</li>
<li>存在于servlet-api.jar中</li>
<li>存放当前用户的私人数据，在共享数据过程中提高服务质量，用于记录私人记录</li>
<li>前提：两个Servlet来自于<strong>同一个网站</strong>，并且为<strong>同一个浏览器</strong>提供服务</li>
</ul>
<h3 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h3>
<p><img src="https://i.loli.net/2021/03/13/ujnRGPfSMQhAcTF.jpg" alt="" /></p>
<ol>
<li>用户通过浏览器第一次向myWeb网站发送请求申请OneServlet。OneServlet在运行期间创建一个Cookie储存与当前用户相关的数据。</li>
<li>OneServlet工作完毕后，将Cookie写入到<strong>响应头</strong>中交还给当前浏览器。</li>
<li>浏览器接收到响应包中，将cookie存储在<strong>浏览器的缓存</strong>中。</li>
<li>下次该用户通过同一个浏览器再次向myWeb网站发送请求申请TwoServlet时，浏览器需要无条件将<strong>之前的Cookie</strong>写入到请求头中发送过去。</li>
</ol>
<h3 id="规则"><a class="markdownIt-Anchor" href="#规则"></a> 规则</h3>
<ul>
<li>Cookie相当于一个map</li>
<li>一个cookie只能存放一个键值对</li>
<li>这个键值对的key与value只能是String</li>
<li>key不能是中文</li>
</ul>
<h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">OneServlet&#123;</span><br><span class="line">    public void doGet( request, response )&#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 1. 创建cookie对象，保存共享数据（当前用户数据）</span><br><span class="line">        Cookie card1 &#x3D; new Cookie( &quot;key1&quot;, &quot;value1&quot; );</span><br><span class="line">        Cookie card2 &#x3D; new Cookie( &quot;key2&quot;, &quot;value2&quot; );</span><br><span class="line">        ......</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 2. 将cookie写入到响应头中，交给浏览器</span><br><span class="line">        response.addCookie(card1);</span><br><span class="line">        response.addCookie(card2);</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">浏览器&#x2F;用户 &lt;---响应包 [  200  ]</span><br><span class="line">                    [  cookie: key1 &#x3D; value1</span><br><span class="line">                               key2 &#x3D; value2  ]</span><br><span class="line">                    []</span><br><span class="line">                    [  处理结果  ]</span><br><span class="line">浏览器向myWeb网站发送请求访问TwoServlet ---&gt; 请求包 [  url: myWeb&#x2F;two  method:get  ]</span><br><span class="line">                                               [  请求参数： xxxx</span><br><span class="line">                                                   cookie： key1 &#x3D; value1</span><br><span class="line">                                                            key2 &#x3D; value2     ]</span><br><span class="line">                                                [       ]</span><br><span class="line">                                                [       ]</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">TwoServlet&#123;</span><br><span class="line">    public void doGet( request, response )&#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 1. 调用请求对象从请求头中得到浏览器返回的Cookie</span><br><span class="line">        Cookie cookieArray[] &#x3D; request.getCookies() &#x2F;&#x2F; 以数组的方式返回cookie</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 2. 循环遍历数据得到每一个Cookie的key与value</span><br><span class="line">        for (Cookie card : cookieArray)&#123;</span><br><span class="line">            String key &#x3D; card.getName(); &#x2F;&#x2F;得到key值</span><br><span class="line">            String value &#x3D; card.getValue(); &#x2F;&#x2F;得到value值</span><br><span class="line">            &#x2F;&#x2F; 提供后续服务</span><br><span class="line">            ......</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="实例会员卡在线点餐"><a class="markdownIt-Anchor" href="#实例会员卡在线点餐"></a> 实例：会员卡在线点餐</h3>
<p><img src="https://i.loli.net/2021/03/13/daswvFyOMrokDPp.jpg" alt="" /><br />
Git: <code>https://gist.github.com/Yili-lab/23737030ca03922185b3db85fc81ca61</code></p>
<h3 id="销毁的时机"><a class="markdownIt-Anchor" href="#销毁的时机"></a> 销毁的时机</h3>
<ol>
<li>在默认情况下，cookie对象存放在浏览器缓存中，所以只要浏览器关闭，cookie就会被销毁。</li>
<li>手动设置情况下，可以设置浏览器将接收到的cookie存放在客户端计算机硬盘上，同时需要指定cookie在硬盘上存活的时间。在存活范围内，关机都不会导致其销毁。<br />
<code>cookie.setMaxAge(60) //存活一分钟</code></li>
</ol>
<h2 id="httpsession接口"><a class="markdownIt-Anchor" href="#httpsession接口"></a> HttpSession接口</h2>
<h3 id="介绍-3"><a class="markdownIt-Anchor" href="#介绍-3"></a> 介绍</h3>
<ul>
<li>HttpSession接口来自于Servlet规范下的一个接口。存在于servlet-api.jar中</li>
<li>实现类由http服务器提供</li>
<li>习惯称之为<strong>会话作用域对象</strong></li>
<li>前提：两个Servlet来自于<strong>同一个网站</strong>，并且为<strong>同一个浏览器/用户</strong>提供服务，此时借助于<strong>HttpSession对象</strong>进行数据共享</li>
</ul>
<h3 id="与cookie区别"><a class="markdownIt-Anchor" href="#与cookie区别"></a> 与Cookie区别</h3>
<ol>
<li>存储位置：
<ul>
<li>Cookie：存放于客户端计算机中</li>
<li>HttpSession：存放于服务端计算机内存中</li>
</ul>
</li>
<li>数据类型：
<ul>
<li>Cookie：存储对象只能String</li>
<li>HttpSession：存储任意类型的共享数据Object</li>
</ul>
</li>
<li>数据数量：
<ul>
<li>Cookie：1 for 1</li>
<li>HttpSession：使用map集合，可以存储任意数量的共享数据</li>
</ul>
</li>
<li>参照物：
<ul>
<li>Cookie：相当于客户在服务点<strong>会员卡</strong></li>
<li>HttpSession：相当于<strong>私人保险柜</strong></li>
</ul>
</li>
</ol>
<h3 id="tomcat-辨别不同浏览器的session"><a class="markdownIt-Anchor" href="#tomcat-辨别不同浏览器的session"></a> Tomcat 辨别不同浏览器的session</h3>
<p>Tomcat在创建HttpSession对象时，会自动地为这个Session对象生成一个唯一的编号。<br />
Tomcat将这个编号保存到Cookie对象中，推送到当前浏览器的缓存中。<br />
Cookie： JSESSIONID = 编号<br />
<img src="https://i.loli.net/2021/03/14/3owJsZphALrjeGq.jpg" alt="" /></p>
<h3 id="命令实现-2"><a class="markdownIt-Anchor" href="#命令实现-2"></a> 命令实现</h3>
<ul>
<li>同一个网站下OneServlet将数据传递给TwoServlet</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">OneServlet&#123;</span><br><span class="line">    public void doGet(request, response)&#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 1. 调用请求对象向Tomcat索要当前用户在服务端的私人储物柜</span><br><span class="line">        HttpSession session &#x3D; request.getSession();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 2. 将数据添加到私人储物柜中</span><br><span class="line">        session.setAttribute(&quot;key1&quot;, value1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>浏览器访问同一个网站 /myWeb/TwoServlet，想要拿到OneServlet存储的数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TwoServlet&#123;</span><br><span class="line">    public void doGet(request, response)&#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 1. 索要私人储物柜</span><br><span class="line">        HttpSession session &#x3D; request.getSession();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 2. 从会话作用域对象得到共享数据</span><br><span class="line">        Object value1 &#x3D; session.getAttribute(&quot;key1&quot;);</span><br></pre></td></tr></table></figure>
<ul>
<li>getSession()与getSession(false)
<ul>
<li>getSession()：如果已经拥有了自己的私人储物柜，则返回这个私人储物柜。如果没有，则为之新建一个新的储物柜。&lt;-- 用于已登陆用户。</li>
<li>getSession(false)：如果已经拥有了自己的私人储物柜，则返回这个私人储物柜。如果没有，则直接返回null。   &lt;-- 用于游客。</li>
</ul>
</li>
</ul>
<h4 id="实例模拟购物车"><a class="markdownIt-Anchor" href="#实例模拟购物车"></a> 实例：模拟购物车</h4>
<p><img src="https://i.loli.net/2021/03/14/3ujGVqoSKntE1Nz.jpg" alt="" /></p>
<h4 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意</h4>
<ol>
<li>可以遍历session中的所有对象，得到一个枚举对象。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 1. 调用请求对象</span><br><span class="line">HttpSession session &#x3D; request.getSession();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 2. 将session中所有key读取出来，存放在一个枚举对象</span><br><span class="line">Enumeration goodsNames &#x3D; session.getAttributeNames();</span><br><span class="line">while(goodsNames.hasMoreElements())&#123;</span><br><span class="line">    String goodsName &#x3D; (String)goodsNames.nextElement();</span><br><span class="line">    int goodsNum &#x3D; (int)session.getAttribute(goodsName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><code>getAttribute()</code>方法得到的是一个object对象，可以强制转换为转化为Integer而不是int，避免空指针异常，然后再后续的操作中判断Integer类型的值是否为空。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Integer	value1 &#x3D; (Integer) session.getAttribute(good);</span><br><span class="line">if (value1&#x3D;&#x3D;null) ... else ...</span><br></pre></td></tr></table></figure>
<h3 id="生命周期-2"><a class="markdownIt-Anchor" href="#生命周期-2"></a> 生命周期</h3>
<ol>
<li>用户与HttpSession关联时使用的Cookie只能存放在浏览器缓存中</li>
<li>浏览器关闭时，意味着用户与HttpSession之间的关系被切断了</li>
<li>Tomcat无法检测浏览器何时关闭，因此浏览器关闭时不会导致Tomcat将浏览器关联的HttpSession进行销毁</li>
<li>Tomcat会为每一个HttpSession对象设置空闲时间，默认为30mins，达到时Tomcat会删除Session</li>
</ol>
<h4 id="空闲时间手动设置"><a class="markdownIt-Anchor" href="#空闲时间手动设置"></a> 空闲时间手动设置</h4>
<p>当前网站/web/web-inf/web.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;session-config&gt;</span><br><span class="line">    &lt;session-timeout&gt;5&lt;&#x2F;session-timeout&gt; &#x2F;&#x2F;最大时间5分钟</span><br><span class="line">&lt;&#x2F;session-config&gt;</span><br></pre></td></tr></table></figure>
<h2 id="httpservletrequest接口"><a class="markdownIt-Anchor" href="#httpservletrequest接口"></a> HttpServletRequest接口</h2>
<ul>
<li>介绍：在同一个网站中，如果两个Servlet之间通过<strong>请求转发</strong>的方式进行调用，两者将会共享同一个请求协议包。而一个请求协议包只对应一个请求对象，因此Servlet之间共享同一个请求对象，所以可以利用这个请求对象在两个Servlet之间实现数据共享。</li>
<li>通常称为<strong>请求作用域对象</strong></li>
<li>命令实现：<br />
OneServlet通过请求转发申请调用TwoServlet时，需要给Servlet提供共享数据。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">OneServlet&#123;</span><br><span class="line">    public void doGet(request, response)&#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 1. 将数据添加到请求作用域对象中的attribute属性</span><br><span class="line">        request.setAttribute(&quot;key1&quot;, value1);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 2. 申请调用TwoServlet</span><br><span class="line">        request.getRequestDispatcher(&quot;&#x2F;two&quot;).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TwoServlet&#123;</span><br><span class="line">    public void doGet(request, response)&#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 1. 直接拿出数据</span><br><span class="line">        Object value1 &#x3D; request.getAttribute(&quot;key1&quot;);</span><br><span class="line">        &#x2F;&#x2F; 后续做类型转换</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>后端</tag>
        <tag>servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>多个servlet之间的调用规则</title>
    <url>/2021/03/13/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/%E5%A4%9A%E4%B8%AAservlet%E4%B9%8B%E9%97%B4%E7%9A%84%E8%B0%83%E7%94%A8%E8%A7%84%E5%88%99/</url>
    <content><![CDATA[<h2 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h2>
<p>某些来源于浏览器发送请求，往往需要服务端中多个servlet协同处理。但是浏览器一次只能访问一个servlet，导致用户需要手动发起多次请求，<br />
这样增加了用户获得服务的难度。</p>
<h2 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h2>
<ol>
<li>重定向解决方案</li>
<li>请求转发解决方案</li>
</ol>
<h3 id="重定向解决方案"><a class="markdownIt-Anchor" href="#重定向解决方案"></a> 重定向解决方案</h3>
<ul>
<li>原理： 用户第一次通过手动的方式通知浏览器访问第一个servlet，servlet将下一个servlet地址放到响应头中。浏览器会自根据location中地址发起第二次请求。第二次请求是浏览器自动发送的。<br />
<img src="https://i.loli.net/2021/03/13/U8pHALEWPChj9ey.jpg" alt="" /></li>
<li>实现命令：<code>response.sendRedirect(请求地址)</code></li>
<li>请求地址：
<ol>
<li>当前网站内部资源文件：<code>/网站名/资源文件名</code></li>
<li>其他网站资源文件：<code>http://ip:port:网站名:资源文件名</code></li>
</ol>
</li>
<li>请求方式：get</li>
<li>问题：因为需要访问两次，所以浪费了大量的时间。</li>
</ul>
<h3 id="请求转发解决方案"><a class="markdownIt-Anchor" href="#请求转发解决方案"></a> 请求转发解决方案</h3>
<ul>
<li>原理：一个servlet工作完毕后，通过当前请求对象代替浏览器向http服务器申请调用下一个servlet，最后一次性返回给浏览器。<br />
<img src="https://i.loli.net/2021/03/13/Wq4dQvk37DZhfrj.jpg" alt="" /></li>
<li>实现命令：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 1. 通过当前呢请求对象生成资源文件申请报告对象</span><br><span class="line">RequestDispatcher report &#x3D; request.getRequestDispatcher(&quot;资源文件名&quot;); &#x2F;&#x2F;用斜线‘&#x2F;’开头，不要写网站名称</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 2. 将报告发送给Tomcat</span><br><span class="line">report.forward(当前请求对象，当前响应对象);</span><br></pre></td></tr></table></figure>
<ul>
<li>优点：
<ol>
<li>无论本次请求涉及多少Servlet，用户只需要手动通过浏览器发送一次请求</li>
<li>Servlet之间调用发生在服务端计算机上，节省了往返的次数，减少速度。</li>
</ol>
</li>
<li>特征：
<ol>
<li>请求次数为1</li>
<li>请求地址只能向Tomcat服务器申请调用当前网络下的资源文件地址</li>
<li>请求方式：转发过程中，浏览器只发送了一个Http请求协议包。参与本次请求的所有Servlet共享一个请求协议包。因此，这些servlet接收的请求方式与浏览器发送的请求方式保持一致。</li>
</ol>
</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>过滤器接口</title>
    <url>/2021/03/16/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/%E8%BF%87%E6%BB%A4%E5%99%A8%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<h3 id="filter-接口"><a class="markdownIt-Anchor" href="#filter-接口"></a> Filter 接口</h3>
<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3>
<ul>
<li>Servlet规范下的一个接口，在servlet-api.jar中</li>
<li>Filter接口实现类由开发人员提供，Http服务器不负责提供</li>
</ul>
<h3 id="具体作用"><a class="markdownIt-Anchor" href="#具体作用"></a> 具体作用</h3>
<ul>
<li>Filter接口在Http服务器调用资源文件之前，负责对Http服务器进行拦截，帮助Http服务器检测当前请求的合法性</li>
<li>拦截Http服务器，对当前请求进行增强操作</li>
</ul>
<h3 id="开发步骤"><a class="markdownIt-Anchor" href="#开发步骤"></a> 开发步骤</h3>
<ol>
<li>创建Java中的Filter接口实现类</li>
<li>重写Filter接口中的doFilter方法</li>
<li>在web.xml将过滤器接口实现类注册到Http服务器中</li>
</ol>
<h3 id="拦截作用-代码实现"><a class="markdownIt-Anchor" href="#拦截作用-代码实现"></a> 拦截作用 - 代码实现</h3>
<p><strong>通过request的getParameter得到并且判断参数，如果通过则使用doFilter方法交给Tomcat。</strong></p>
<ul>
<li>Filter 文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class oneFilter implements Filter &#123;</span><br><span class="line">	@Override</span><br><span class="line">	public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException ServletException &#123;</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F; 1. 通过拦截请求对象得到请求包中的参数信息，从而得到来访用户的年龄</span><br><span class="line">		String age &#x3D; servletRequest.getParameter(&quot;age&quot;);</span><br><span class="line">		&#x2F;&#x2F; 2. 根据年龄，帮助Http服务器判断本次请求的合法性</span><br><span class="line">		if(Integer.valueOf(age)&gt;18)&#123; &#x2F;&#x2F; 合法</span><br><span class="line">			&#x2F;&#x2F; 将拦截请求对象和响应对象交还给Tomcat，由Tomcat继续调用资源文件</span><br><span class="line">			filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			&#x2F;&#x2F; 过滤器代替Http服务器拒绝请求</span><br><span class="line">			servletResponse.setContentType(&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;);</span><br><span class="line">			PrintWriter out &#x3D;  servletResponse.getWriter();</span><br><span class="line">			out.print(&quot;&lt;center&gt;&lt;font style&#x3D;&#39;color:red;font-size:40px&#39;&gt; 别玩了，赶紧学吧 &lt;&#x2F;center&gt;&quot;);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>web.xml 文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--    将过滤器类文件目录交给Tomcat   --&gt;</span><br><span class="line">&lt;filter&gt;</span><br><span class="line">    &lt;filter-name&gt;oneFilter&lt;&#x2F;filter-name&gt;</span><br><span class="line">    &lt;filter-class&gt;Filter.oneFilter&lt;&#x2F;filter-class&gt;</span><br><span class="line">&lt;&#x2F;filter&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--    通知Tomcat在调用何种资源文件时候需要被拦截    --&gt;</span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;oneFilter&lt;&#x2F;filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;&#x2F;pic.png&lt;&#x2F;url-pattern&gt;</span><br><span class="line">&lt;&#x2F;filter-mapping&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>这里重复下，静态的资源文件放置在webapp目录下，和web-inf文件夹同级。</li>
</ul>
<h3 id="增强作用-代码实现"><a class="markdownIt-Anchor" href="#增强作用-代码实现"></a> 增强作用 - 代码实现</h3>
<ul>
<li>情况：在使用doPost方法时，需要设置字符集：<code>request.setCharacterEncoding(Utf-8)</code>。当存在多个servlet都需要调用这个方法时候，则可以使用Filter增强操作。</li>
<li>解决：只要Filter实现类检测到是需要调用doPost方法时，就会自动拦截调用自己的doFilter来设置字符集，然后交还给Tomcat。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class oneFilter implements Filter &#123;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException &#123;</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F; 通知拦截对象，使用utf-8字符集对当前请求体信息进行一次重新编辑</span><br><span class="line">		servletRequest.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">		&#x2F;&#x2F; 交还res和req</span><br><span class="line">		filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--    注册filter--&gt;</span><br><span class="line">&lt;filter&gt;</span><br><span class="line">    &lt;filter-name&gt;oneFilter&lt;&#x2F;filter-name&gt;</span><br><span class="line">    &lt;filter-class&gt;Filter.oneFilter&lt;&#x2F;filter-class&gt;</span><br><span class="line">&lt;&#x2F;filter&gt;</span><br><span class="line"></span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;oneFilter&lt;&#x2F;filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt; &#x2F;* &lt;&#x2F;url-pattern&gt;</span><br><span class="line">&lt;&#x2F;filter-mapping&gt;</span><br></pre></td></tr></table></figure>
<p><strong>注意 <code>/*</code>表示了调用所有资源文件之前都调用oneFilter</strong></p>
<h4 id="filter拦截地址的格式"><a class="markdownIt-Anchor" href="#filter拦截地址的格式"></a> Filter拦截地址的格式</h4>
<ul>
<li>命令格式：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;oneFilter&lt;&#x2F;filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt; 拦截地址 &lt;&#x2F;url-pattern&gt;</span><br><span class="line">&lt;&#x2F;filter-mapping&gt;</span><br></pre></td></tr></table></figure>
<ol>
<li>调用某一具体的文件,直接使用文件地址： <code>/img/pic.png</code></li>
<li>调用某一文件夹下的任意资源文件，使用 * 表示文件名： <code>/img/*</code></li>
<li>调用任意文件夹下的某种文件类型： <code>*.jpg</code></li>
<li>任意文件： <code>/*</code></li>
</ol>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>默认欢迎资源文件和http状态码</title>
    <url>/2021/03/12/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java%20Web/%E9%BB%98%E8%AE%A4%E6%AC%A2%E8%BF%8E%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%92%8Chttp%E7%8A%B6%E6%80%81%E7%A0%81/</url>
    <content><![CDATA[<h2 id="欢迎页面资源文件"><a class="markdownIt-Anchor" href="#欢迎页面资源文件"></a> 欢迎页面资源文件</h2>
<ul>
<li>功能：用户可以记住网站名称，记不住资源文件名称</li>
<li>默认欢迎资源文件：用户发送针对某个网站的默认请求时，由Http服务器自动从当前网站返回的资源文件</li>
<li>区别：
<ul>
<li>正常请求： <a href="http://localhost:8080/myWeb/index.html">http://localhost:8080/myWeb/index.html</a></li>
<li>默认请求： <a href="http://localhost:8080/myWeb">http://localhost:8080/myWeb</a></li>
</ul>
</li>
<li>Tomcat对于默认欢迎资源文件定位规则：
<ol>
<li>规则位置：tomcat安装位置/conf/web.xml<br />
<img src="https://i.loli.net/2021/03/12/4Hc9CTesEPmRoAF.png" alt="" /><br />
如果没有下放三个文件，则返回404状态码</li>
</ol>
</li>
<li>Tomcat可以设置当前网页的默认资源文件：
<ul>
<li>位置：网站/web/web-inf/web.xml</li>
<li>命令：</li>
</ul>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;welcome-file-list&gt;</span><br><span class="line">    &lt;welcome-file&gt;  user_add.html   &lt;&#x2F;welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;  user&#x2F;showall    &lt;&#x2F;welcome-file&gt;</span><br><span class="line">    ......</span><br><span class="line">&lt;&#x2F;welcome-file-list&gt;</span><br></pre></td></tr></table></figure>
servlet资源文件，必须抹掉开头的斜线</li>
</ul>
<h2 id="http状态码"><a class="markdownIt-Anchor" href="#http状态码"></a> Http状态码</h2>
<p><img src="https://i.loli.net/2021/03/12/rMfHX7dy4ZeV6hl.png" alt="" /></p>
<ul>
<li>组成：<strong>三位数字</strong>组成的符号，</li>
<li>来源：Web服务器在推送响应包之前，根据本次请求处理结果，将Http状态码写入到响应包中<strong>状态行</strong>上</li>
<li>作用：
<ul>
<li>如果http服务器针对本次请求返回了对应的资源文件。则浏览器会通过Http状态码了解到如何处理本次请求结果</li>
<li>如果http服务器针对本次请求无法返回对应的资源文件，则可以通过http状态码向浏览器解释不能提供服务的原因</li>
</ul>
</li>
<li>分类：100 - 599，分为5个大类。
<ol>
<li>1xx：
<ul>
<li>100：本次返回的资源文件并不是独立的资源文件，浏览器需要接收到该文件后需要继续向web服务器索要其他的资源文件。<br />
<img src="https://i.loli.net/2021/03/12/BdUXKLb6rgPwc1t.jpg" alt="" /></li>
</ul>
</li>
<li>2xx：
<ul>
<li>200：本次返回的资源文件是一个完整的独立资源文件，无需后续索要。</li>
</ul>
</li>
<li>3xx：
<ul>
<li>302：本次返回的是一个资源文件的地址，需要浏览器根据这个地址自动发起请求，来索要这个资源文件。<br />
命令：<code>response.sendRedirect(&quot;资源文件地址&quot;)</code></li>
</ul>
</li>
<li>4xx：
<ul>
<li>404：通知浏览器在服务端中没有定位到访问资源文件，所以无法访问。</li>
<li>405：通知浏览器在服务端中已经定位到被访问的资源文件(servlet)，但是这个servlet对于浏览器采用的请求方式不能处理。<br />
比如某个servlet只有doPost方法，但是却被get方法调用。</li>
</ul>
</li>
<li>5xx：
<ul>
<li>500：服务端端中已经定位到了被访问的资源文件(servlet)，这个servlet可以接收到浏览器采用的请求方式，但是servlet在处理请求期间，由于Java异常导致处理失败。</li>
</ul>
</li>
</ol>
</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA反射机制</title>
    <url>/2021/04/09/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Spring/JAVA%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<h2 id="反射机制介绍"><a class="markdownIt-Anchor" href="#反射机制介绍"></a> 反射机制介绍：</h2>
<ul>
<li>Java代码在计算机中经历了三个阶段：
<ol>
<li>Source 源代码阶段：用户定义的<code>.java</code>文件，在保存之后，就会立刻经过javac编译并且生成对应的<code>.class</code>字节码文件。字节码文件放置的是成员变量，构造方法和成员方法。</li>
<li>Class 类对象阶段：<strong>类加载器(ClassLoader)<strong>将字节码文件加载为</strong>Class类对象</strong>。<br />
Class类对象储存了对应的成员变量，构造方法和成员方法，并且依次将其储存在 <strong>Field[] fields, Constructor[] cons</strong> 和<strong>Method[] methods</strong>数组中。</li>
<li>Runtime 运行时阶段：创建对应的对象。</li>
</ol>
</li>
<li>定义：将类的的各个组成部分（成员变量，成员方法，构造方法）封装为其他对象。</li>
<li>优势：
<ol>
<li>在程序<strong>运行过程中</strong>操作这些对象。</li>
<li>可以降低程序耦合性，来提高程序可拓展性。</li>
</ol>
</li>
</ul>
<h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h2>
<h3 id="获取class类对象的方式"><a class="markdownIt-Anchor" href="#获取class类对象的方式"></a> 获取Class类对象的方式</h3>
<ol>
<li>Source源代码阶段，将字节码文件加载进内存，返回class对象<br />
<code>Class userClass = Class.forName(&quot;包名.类名&quot;);</code>
<ul>
<li>多用于读取文件，加载类。</li>
</ul>
</li>
<li>Class类对象阶段，已经加载进内存，通过类名的属性来获取<br />
<code>Class userClass = 类名.class;</code>
<ul>
<li>多用于参数的传递</li>
</ul>
</li>
<li>Runtime运行时阶段，使用getClass()方法获得<br />
<code>Class userClass = 对象.getClass();</code>
<ul>
<li>多用于对象获取字节码文件</li>
</ul>
</li>
</ol>
<p>这三者返回的Class对象都是相同的。<br />
所以，<strong>同一个字节码文件在一次程序运行的过程中，只会被加载一次，无论通过哪一种方式获得的class对象都是同一个</strong>。</p>
<h3 id="class对象的功能方法"><a class="markdownIt-Anchor" href="#class对象的功能方法"></a> Class对象的功能方法</h3>
<h4 id="获取成员变量数组"><a class="markdownIt-Anchor" href="#获取成员变量数组"></a> 获取成员变量数组</h4>
<ul>
<li>方法：
<ol>
<li>Field[] getFields() 获得所有<code>public</code>修饰的成员对象数组</li>
<li>Field getField(String name) 获得<code>public</code>修饰的名称为name参数的成员对象，否则抛出异常</li>
<li>Field[] getDeclaredFields() 获取所有的成员变量</li>
<li>Field getDeclaredField(String name) 获得名称为name参数的成员对象，否则抛出异常</li>
</ol>
</li>
<li>成员对象的操作：
<ol>
<li>获得值：<code>Field.get(对象)</code><br />
无参构造，返回值为默认值（String=&gt;null， int=&gt;0）<br />
含参构造，返回值为对象参数对应的值</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User u &#x3D; new User();</span><br><span class="line">Field fields &#x3D; userClass1.getField(&quot;name&quot;);</span><br><span class="line">System.out.println(fields.get(u)); &#x2F;&#x2F; null</span><br><span class="line"></span><br><span class="line">User u &#x3D; new User(&quot;ll&quot;, 12, 122);</span><br><span class="line">Field fields &#x3D; userClass1.getField(&quot;name&quot;);</span><br><span class="line">System.out.println(fields.get(u)); &#x2F;&#x2F; &#39;ll&#39;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>设置值：<code>Field.set(对象，设置值)</code><br />
注意，调用declared方法获得的私有成员对象，在设置值之前，需要<strong>忽视访问权限修饰符的安全检查</strong><br />
<code>Field.setAccessible(true)</code>，这个操作也称为暴力反射</li>
</ol>
</li>
</ul>
<h4 id="获取构造方法数组"><a class="markdownIt-Anchor" href="#获取构造方法数组"></a> 获取构造方法数组</h4>
<ul>
<li>Constructor&lt;?&gt;[] getConstructors()</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Constructor[] constructor&#x3D; userClass1.getConstructors();</span><br><span class="line">for(Constructor c: constructor)&#123;</span><br><span class="line">    System.out.println(c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>Constructor<T> getConstructor(类&lt;?&gt;… parameter Types) 参数为该构造方法需要传入的参数的类<br />
<code>Constructor constructor= userClass1.getConstructor(String.class, int.class, int.class);</code></li>
<li>Constructor&lt;?&gt;[] getDeclaredConstructors()</li>
<li>Constructor<T> getDeclaredConstructor(类&lt;?&gt;… parameter Types)</li>
</ul>
<h5 id="constructor-构造方法对象"><a class="markdownIt-Anchor" href="#constructor-构造方法对象"></a> Constructor 构造方法对象</h5>
<p>是用来创建对象的，使用<code>Constructor.newInstance()</code>来创建对象，参数为真正的两个参数。相当于调用了Constructor对应的原构造方法，返回一个Object类(java.lang.Object)，后面需要类型转换。<br />
如果使用<strong>空参的构造方法对象</strong>创建对象，可以直接使用<code>Class类对象.newInstance()</code></p>
<h4 id="获取成员方法数组"><a class="markdownIt-Anchor" href="#获取成员方法数组"></a> 获取成员方法数组</h4>
<ul>
<li>Method[] getMethods()</li>
<li>Method getMethod(String name, 类&lt;?&gt;… , parameterTypes) 参数为，方法名称和参数的类对象， 没有参数只传方法名即可。</li>
<li>Method[] getDeclaredMethods()</li>
<li>Method getDeclaredMethod(String name, 类&lt;?&gt;… , parameterTypes)</li>
</ul>
<h5 id="执行方法"><a class="markdownIt-Anchor" href="#执行方法"></a> 执行方法</h5>
<p>需要首先创建执行方法的对象p</p>
<ol>
<li>调用<strong>空参数</strong>方法：<code>Method.invoke(p);</code></li>
<li>调用<strong>非空参数</strong>方法：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User u &#x3D; new User();</span><br><span class="line">Method m  &#x3D; userClass1.getDeclaredMethod(&quot;eat&quot;, String.class, String.class);</span><br><span class="line">m.invoke(u, &quot;s1&quot;, &quot;s2&quot;);</span><br></pre></td></tr></table></figure>
<h4 id="获取类名称"><a class="markdownIt-Anchor" href="#获取类名称"></a> 获取类名称</h4>
<ul>
<li>String getName() 获取class，method的名称</li>
</ul>
<h2 id="案例demo"><a class="markdownIt-Anchor" href="#案例demo"></a> 案例demo</h2>
<ul>
<li>情景：创建一个“框架”，使之能够在不改变任何代码的前提下，创建任意类对象并且调用其中的方法。</li>
<li>按照传统的创建方法无法达到要求：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User u &#x3D; new User();</span><br><span class="line">u.sleep();</span><br></pre></td></tr></table></figure>
<ul>
<li>解决：我们将所有对象的全类名和其方法定义在配置文件中，在程序中加载读取配置文件，使用反射技术来加载类文件
<ol>
<li>首先我们创建pro.properties文件</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">className&#x3D;demo.reflectTest.User</span><br><span class="line">methodName&#x3D;eat</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>然后编写框架</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) throws ClassNotFoundException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, InstantiationException, IOException &#123;</span><br><span class="line">        &#x2F;&#x2F; 1. 创建Properties对象</span><br><span class="line">        Properties pro &#x3D; new Properties();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 2. 加载配置文件</span><br><span class="line">        &#x2F;&#x2F; 2.1. 获得文件目录</span><br><span class="line">        &#x2F;&#x2F; 获得类加载器</span><br><span class="line">        ClassLoader classLoader &#x3D; ReflectTest.class.getClassLoader();</span><br><span class="line">        InputStream inputStream &#x3D; classLoader.getResourceAsStream(&quot;pro.properties&quot;);</span><br><span class="line">        &#x2F;&#x2F;InputStream inputStream1 &#x3D; ReflectTest.class.getResourceAsStream(&quot;pro.properties&quot;);</span><br><span class="line">        pro.load(inputStream);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 3. 获取配置文件定义的数据</span><br><span class="line">        String className &#x3D; pro.getProperty(&quot;className&quot;);</span><br><span class="line">        String methodName &#x3D; pro.getProperty(&quot;methodName&quot;);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 4. 加载该类进入内存</span><br><span class="line">        Class cls &#x3D; Class.forName(className);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 5. 创建对象</span><br><span class="line">        Object obj &#x3D; cls.newInstance();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 6. 获取方法对象</span><br><span class="line">        Method method &#x3D; cls.getMethod(methodName);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 7. 执行方法</span><br><span class="line">        method.invoke(obj);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
这里第二步没有搞懂，并且报错空指针异常，需要后续学习。<br />
3. 后续再需要改动别的类和方法时，我们只需要改变properties文件即可。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Bean的作用域和自动装配</title>
    <url>/2021/04/07/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Spring/Spring%20Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/</url>
    <content><![CDATA[<h3 id="作用域"><a class="markdownIt-Anchor" href="#作用域"></a> 作用域</h3>
<p><img src="https://i.loli.net/2021/04/07/e7i1Pn9k5fbDy2u.png" alt="" /></p>
<p>可以在bean.xml文件中的bean标签下设置<code>scope</code>属性来设置作用域<br />
<code>&lt;bean id=&quot;accountService&quot; class=&quot;com.something.DefaultAccountService&quot; scope=&quot;singleton&quot;/&gt;</code></p>
<ul>
<li>单例范围 singleton bean，默认模式：<br />
<code>Spring IoC</code>容器为该bean所定义的对象创建一个实例。该单个实例存储在此类单例bean的高速缓存中，并且对该命名bean的所有后续请求和引用都返回该高速缓存的对象。</li>
<li>原型范围 prototype：<br />
每次对特定bean提出请求时，bean部署的非单一原型范围都会导致创建一个新bean实例。也就是说，每次getBean()方法时，都会产生新的方法。</li>
<li>Scope也可以使用<code>@Scope()</code>注解在java类文件中配置</li>
</ul>
<p>其余的只能在web开发中使用。</p>
<h3 id="自动装配"><a class="markdownIt-Anchor" href="#自动装配"></a> 自动装配</h3>
<ul>
<li>介绍：自动装配是Spring满足bean依赖的一种方式。</li>
<li>过程：Spring会在上下文中自动寻找，并且自动给bean装配属性。</li>
<li>三种装配方式：
<ol>
<li>在xml中显示装配</li>
<li>在java中显示装配</li>
<li>隐式自动装配</li>
</ol>
</li>
</ul>
<h4 id="隐式自动装配"><a class="markdownIt-Anchor" href="#隐式自动装配"></a> 隐式自动装配</h4>
<ul>
<li>情景：现在存在三个类，cat，dog和person，都需在bean.xml文件中注册。但是cat和dog是person中的实例变量。<br />
那么设置person的cat和dog的property标签的语句就是重复的。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;dog&quot; class&#x3D;&quot;com.lyl.pojo.Dog&quot;&#x2F;&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;cat&quot; class&#x3D;&quot;com.lyl.pojo.Cat&quot;&#x2F;&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;person&quot; class&#x3D;&quot;com.lyl.pojo.Person&quot;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;name&quot; value&#x3D;&quot;小屁孩&quot;&#x2F;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;dog&quot; ref&#x3D;&quot;dog&quot;&#x2F;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;cat&quot; ref&#x3D;&quot;cat&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
<p>可以设置bean标签内的属性<code>autowire=&quot;byName&quot;</code></p>
<ul>
<li><code>autowire = &quot;byName&quot;</code>会使当前的bean自动在容器上下文中查找，和自己对象<strong>set方法后面的值</strong>对应的<code>bean id</code>，有则自动装配。</li>
<li><code>autowire = &quot;byType&quot;</code>会使当前的bean自动在容器上下文中查找，和自己对象属性类型相同的<code>bean class</code>，有则自动装配。如果有两个相同的类型，则报错。</li>
</ul>
<h4 id="注解实现自动装配"><a class="markdownIt-Anchor" href="#注解实现自动装配"></a> 注解实现自动装配</h4>
<ul>
<li>使用方法：
<ol>
<li>导入约束</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;</span><br><span class="line">xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">xmlns:context&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&quot;</span><br><span class="line">xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans</span><br><span class="line">    http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd</span><br><span class="line">    http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context</span><br><span class="line">    http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-context.xsd&quot;&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>配置注解的支持<code>&lt;context:annotation-config/&gt;</code></li>
<li>在实例的属性上增加<code>@Autowired</code>标签。如果在xml文件中存在，名称一致，则可以不用便携setter方法。</li>
</ol>
</li>
</ul>
<p>补充： 当实例变量名称和bean的id名称不一致时，可以在<code>@Autowired</code>标签下放置<code>@Qualifier(beanId)</code>来手动匹配</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">@Qualifier(value &#x3D; &quot;cat01&quot;)</span><br><span class="line">private Cat cat;</span><br></pre></td></tr></table></figure>
<ul>
<li>同样也存在<code>@Resource</code>注解方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Resource(name&#x3D;&#39;cat2&#39;)</span><br><span class="line">private Cat cat</span><br></pre></td></tr></table></figure>
<ul>
<li>@Resource和@Autowired的区别：
<ol>
<li>都是自装配的，可以放在属性字段上的。</li>
<li>@Autowired通过byname方式实现，而且必须要求这个对象存在。</li>
<li>@Resource默认通过byname方式实现，如果找不到名称，则通过byType方式实现。</li>
</ol>
</li>
</ul>
]]></content>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis-Spring</title>
    <url>/2021/04/09/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Spring/Mybatis-Spring/</url>
    <content><![CDATA[<p><strong>官方文档：<a href="http://mybatis.org/spring/zh/factorybean.html">http://mybatis.org/spring/zh/factorybean.html</a></strong></p>
<h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h2>
<h3 id="导入依赖"><a class="markdownIt-Anchor" href="#导入依赖"></a> <strong>导入依赖</strong></h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-spring&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.0.6&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-jdbc&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;5.3.5&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<h3 id="新建spring-mybatisxml配置文件"><a class="markdownIt-Anchor" href="#新建spring-mybatisxml配置文件"></a> <strong>新建<code>spring-mybatis.xml</code>配置文件</strong></h3>
<p>导入bean模版，然后在这个文件中利用Spring连接数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--DataSource: 使用Spring的数据源替换Mybatis的配置--&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;datasource&quot; class&#x3D;&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;driverClassName&quot; value&#x3D;&quot;com.lyl.mysql.jdbc.Driver&quot;&#x2F;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatis?useSSL&#x3D;false&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf8&amp;serverTimezone&#x3D;GMT%2B8&quot;&#x2F;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;root&quot;&#x2F;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;mysql123&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
<p>用来代替<code>mybatis-config.xml</code>中的<code>dependencies</code>标签</p>
<h3 id="配置sqlsessionfactory工厂-和-映射"><a class="markdownIt-Anchor" href="#配置sqlsessionfactory工厂-和-映射"></a> <strong>配置<code>sqlSessionFactory</code>工厂 和 映射</strong></h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;sqlSessionFactory&quot; class&#x3D;&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot; &#x2F;&gt;</span><br><span class="line">    &lt;!-- 绑定mybatis配置文件 --&gt;</span><br><span class="line">    &lt;propertyname&#x3D;&quot;configLocation&quot; value&#x3D;&quot;classpath:mybatis-config.xml&quot;&#x2F;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;mapperLocations&quot; value&#x3D;&quot;classpath:com&#x2F;lyl&#x2F;mapper&#x2F;UserMapper.xml&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--sqlSessionTomplate--&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;sqlSession&quot; class&#x3D;&quot;org.mybatis.spring.SqlSessionTemplate&quot;&gt;</span><br><span class="line">    &lt;!--只能使用构造器注入sqlSessionfactory, 因为它没有set方法--&gt;</span><br><span class="line">    &lt;constructor-arg index&#x3D;&quot;0&quot; ref&#x3D;&quot;sqlSessionFactory&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
<p>上面的bean标签设置代替了mybatis中的<br />
1. 工厂模式类<br />
2. test文件中得到sessionFactory的代码，可以直接得到<code>sqlSession</code><br />
3. <code>mybatis-config.xml</code>的<code>mappers</code>标签</p>
<p>一般<code>mybatis-config.xml</code>中只保留<code>setting</code>来设置日志，和<code>typeAliases</code>设置别名</p>
<h3 id="构建接口实现类并且注册"><a class="markdownIt-Anchor" href="#构建接口实现类并且注册"></a> <strong>构建接口实现类，并且注册。</strong></h3>
<p>这里有两种方式：</p>
<ul>
<li>可以直接创建UserMapperImpl类来实现UserMappe接口，其成员属性有一个sqlSession，通过这个sqlSession来进行操作。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class UserMapperImpl implements UserMapper&#123;</span><br><span class="line">	&#x2F;&#x2F; 原来所有操作都使用sqlSession来执行，现在都使用sqlSessionTemplate来执行</span><br><span class="line">	private SqlSessionTemplate sqlSession;</span><br><span class="line"></span><br><span class="line">	public void setSqlSession(SqlSessionTemplate sqlSession) &#123;</span><br><span class="line">		this.sqlSession &#x3D; sqlSession;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public List&lt;User&gt; getUserListByCommet()&#123;</span><br><span class="line">		UserMapper mapper &#x3D;  sqlSession.getMapper(UserMapper.class);</span><br><span class="line">		return mapper.getUserListByCommet();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>来实现接口中的方法<br />
并且注册该类</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;userMapper&quot; class&#x3D;&quot;com.lyl.mapper.UserMapperImpl&quot;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;sqlSession&quot; ref&#x3D;&quot;sqlSession&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>还可以使<code>UserMapperImpl</code>继承<code>SqlSessionDaoSupport</code>类，来省略获取容器中<code>sqlSessionImpl</code>的注册。<br />
因为<code>SqlSessionDaoSupport</code>类下的<code>getSqlSession</code>方法可以直接获得<code>sqlSession</code>。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class UserMapperImpl2 extends SqlSessionDaoSupport implements UserMapper &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;User&gt; getUserListByCommet() &#123;</span><br><span class="line">        return getSqlSession().getMapper(UserMapper.class).getUserListByCommet();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用这种方法可以省略<code>spring-dao.xml</code>中的<code>sqlSession</code>标签。<br />
然后注册到ioc容器中，注意<code>UserMapperImpl2</code>的构造不需要传入参数，但是他实现的接口<code>SqlSessionDaoSupport</code>，需要传入一个<code>SqlSessionFactory</code>。所以：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;userMapper2&quot; class&#x3D;&quot;com.lyl.mapper.UserMapperImpl2&quot;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;sqlSessionFactory&quot; ref&#x3D;&quot;sqlSessionFactory&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
<p>然后可以正常使用</p>
<h3 id="最后测试"><a class="markdownIt-Anchor" href="#最后测试"></a> <strong>最后测试</strong></h3>
<p>虽然上面搞了那么多，但是最后我们只需要得到<code>userMapper</code>即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    ClassPathXmlApplicationContext context &#x3D; new ClassPathXmlApplicationContext(&quot;spring-dao.xml&quot;);</span><br><span class="line">    UserMapper userMapper &#x3D; (UserMapper) context.getBean(&quot;userMapper&quot;);</span><br><span class="line">    List&lt;User&gt; list &#x3D; userMapper.getUserListByCommet();</span><br><span class="line">    for (User u : list)&#123;</span><br><span class="line">        System.out.println(u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="可以重构xml文件"><a class="markdownIt-Anchor" href="#可以重构xml文件"></a> <strong>可以重构xml文件</strong></h3>
<p>新建<code>applicationContext.xml</code>文件，将bean需要的Mybatis操作接口的注册操作放在这个文件中，然后导入<code>spring-dao.xml</code>：<code>&lt;import resource=&quot;spring-dao.xml&quot;/&gt;</code>。<br />
这样就拥有了三个xml文件：<br />
1. mybatis-config.xml：在里面设置mybatis日志工厂和别名。其实也可以省略，但是一般保留以表示使用了了mybatis。<br />
2. spring-dao.xml：支持mybatis连接数据库的操作：<br />
a. <code>dataSource</code>标签：<br />
代替了mybatis-config.xml文件中的dependencies标签，目标是使用Spring注册方法来连接数据库<br />
b. <code>sqlSessionFactory</code>标签：<br />
代替了原来的sqlSessionFactory工厂类，并且绑定了config和mapper地址。<br />
c. <code>sqlSession</code>标签：<br />
- 本质是注册<code>sqlSessionFactory</code>，但是根据习惯我们id选择使用sqlSession。<br />
- 原先mybatis需要下面的方法，通过sqlSession来得到userMapper<br />
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">      SqlSession sqlSession &#x3D; MybatisUtil.getSqlSession();</span><br><span class="line">UserMapper userMapper &#x3D; sqlSession.getMapper(UserMapper.class);</span><br></pre></td></tr></table></figure><br />
- 当前标签通过<code>org.mybatis.spring.SqlSessionTemplate</code>的构造方法，传入上面的<code>sqlSessionFactory</code>，来注册sqlSession。<br />
- 注意：如果使用4.2的方法获得Impl文件则不需要这个标签<br />
- 无论怎样，我们都需要一个sqlSession来得到Mapper，4.2只是不需要调用这个sqlSession，使用实现的接口的方法获得sqlSession。<br />
3. application.xml：使用Spring的方式注册了mapper类，并且导入了<code>spring-dao.xml</code>。</p>
<h2 id="运行方式和文件表示"><a class="markdownIt-Anchor" href="#运行方式和文件表示"></a> 运行方式和文件表示</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├── java</span><br><span class="line">│   └── com</span><br><span class="line">│       └── lyl</span><br><span class="line">│           ├── mapper</span><br><span class="line">│           │   ├── UserMapper.java</span><br><span class="line">│           │   ├── UserMapper.xml</span><br><span class="line">│           │   ├── UserMapperImpl.java</span><br><span class="line">│           │   └── UserMapperImpl2.java</span><br><span class="line">│           └── pojo</span><br><span class="line">│               └── User.java</span><br><span class="line">├── resources</span><br><span class="line">│   ├── applicationContext.xml</span><br><span class="line">│   ├── mybatis-config.xml</span><br><span class="line">│   └── spring-dao.xml</span><br><span class="line">└── test</span><br><span class="line">    └── myTest.java</span><br></pre></td></tr></table></figure>
<p>UserMapper.java接口声明了在数据库中操作User.java实体类的抽象方法<br />
UserMapper.xml实现了这些抽象方法<br />
然后配置mybatis的一些xml文件<br />
最后整合到Spring则使用了UserMapperImpl.java接口和spring-dao.xml容器。</p>
]]></content>
      <tags>
        <tag>Spring</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>DI 依赖注入</title>
    <url>/2021/04/07/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Spring/Spring%20DI%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<ol>
<li>构造方式注入</li>
<li>Set方式注入</li>
<li>拓展方式注入</li>
</ol>
<h2 id="set方式注入"><a class="markdownIt-Anchor" href="#set方式注入"></a> Set方式注入</h2>
<ul>
<li>依赖：bean对象的创建依赖于容器。</li>
<li>注入：bean对象中的所有属性，由容器来注入。</li>
</ul>
<h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h2>
<p>bean&gt;property注入要求：有setter方法，有无参构造器。<br />
因为如果既没有有惨又没有无参数构造器时，是有一个默认的无参构造器的。<br />
但是当设置了含参数构造器之后，必须要同时声明一个无参构造器才可以继续使用property注入。</p>
<h3 id="创建pojo类"><a class="markdownIt-Anchor" href="#创建pojo类"></a> 创建pojo类</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class Student &#123;</span><br><span class="line"></span><br><span class="line">	private String name;</span><br><span class="line">	private Address address;</span><br><span class="line">	private String[] books;</span><br><span class="line">	private List&lt;String&gt; hobbys;</span><br><span class="line">	private Map&lt;String, String &gt; card;</span><br><span class="line">	private Set&lt;String&gt; games;</span><br><span class="line">	private String wife;</span><br><span class="line">	private Properties info;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; getter and setter methods</span><br><span class="line">    &#x2F;&#x2F; ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="注入属性"><a class="markdownIt-Anchor" href="#注入属性"></a> 注入属性</h3>
<ol>
<li>首先在没有含参构造方法时，可以用<code>property</code>标签来填充<code>setter</code>标签，注入普通数据类型。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;stu&quot; class&#x3D;&quot;com.lyl.pojo.Student&quot;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;name&quot; value&#x3D;&quot;lyl&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>注入引用数据类型时，使用<code>ref</code>标签。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;property name&#x3D;&quot;address&quot; ref&#x3D;&quot;address&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>注入数组时，使用<code>array</code>标签。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;property name&#x3D;&quot;books&quot;&gt;</span><br><span class="line">    &lt;array&gt;</span><br><span class="line">        &lt;value&gt;《红楼梦》&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;value&gt;《水浒传》&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;value&gt;《三国演义》&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;value&gt;《西游记》&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;array&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>注入list时，和数组类似，使用<code>list</code>标签。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;property name&#x3D;&quot;hobbys&quot;&gt;</span><br><span class="line">    &lt;list&gt;</span><br><span class="line">        &lt;value&gt;code&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;value&gt;java&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;value&gt;python&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;list&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>注入map时，使用<code>entry&gt;key,value</code>来设置键值对</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;property name&#x3D;&quot;card&quot;&gt;</span><br><span class="line">    &lt;map&gt;</span><br><span class="line">        &lt;entry key&#x3D;&quot;card1&quot; value&#x3D;&quot;1&quot;&#x2F;&gt;</span><br><span class="line">        &lt;entry key&#x3D;&quot;card2&quot; value&#x3D;&quot;2&quot;&#x2F;&gt;</span><br><span class="line">        &lt;entry key&#x3D;&quot;card3&quot; value&#x3D;&quot;3&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;map&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>注入set时，使用<code>set</code>标签。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;property name&#x3D;&quot;games&quot;&gt;</span><br><span class="line">    &lt;set&gt;</span><br><span class="line">        &lt;value&gt;set1&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;value&gt;set2&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;value&gt;set1&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;set&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>空值注入，直接用<code>&lt;null/&gt;</code>标签</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;property name&#x3D;&quot;wife&quot;&gt;</span><br><span class="line">    &lt;null&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>
<ol start="8">
<li>Properties注入， 使用<code>props</code>和<code>&lt;prop key=?&gt;&lt;/prop&gt;</code>标签</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;property name&#x3D;&quot;info&quot;&gt;</span><br><span class="line">    &lt;props&gt;</span><br><span class="line">        &lt;prop key&#x3D;&quot;name&quot;&gt;simagui&lt;&#x2F;prop&gt;</span><br><span class="line">        &lt;prop key&#x3D;&quot;maima&quot;&gt;buhuimai&lt;&#x2F;prop&gt;</span><br><span class="line">    &lt;&#x2F;props&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>
<h2 id="c命名和p命名空间注入"><a class="markdownIt-Anchor" href="#c命名和p命名空间注入"></a> C命名和P命名空间注入</h2>
<h3 id="p命名空间注入-无参构造器property"><a class="markdownIt-Anchor" href="#p命名空间注入-无参构造器property"></a> P命名空间注入 --&gt;无参构造器，property</h3>
<p>根据官方文档，在beans.xml文件中的beans标签内加入：<code>xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</code><br />
然后在注入时，即可以使用<code>p:属性名=属性值</code>来注入：<code>&lt;bean id=&quot;user&quot; class=&quot;com.lyl.pojo.User&quot; p:name=&quot;kkk&quot; p:age=&quot;18&quot;/&gt;</code><br />
<img src="https://i.loli.net/2021/04/07/x6M7uKjpCJQ4wfz.png" alt="" /></p>
<h3 id="c命名空间注入-有惨构造器constructor"><a class="markdownIt-Anchor" href="#c命名空间注入-有惨构造器constructor"></a> C命名空间注入 --&gt;有惨构造器，constructor</h3>
<p><code>xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</code><br />
效果如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- traditional declaration --&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;thingOne&quot; class&#x3D;&quot;x.y.ThingOne&quot;&gt;</span><br><span class="line">    &lt;constructor-arg ref&#x3D;&quot;thingTwo&quot;&#x2F;&gt;</span><br><span class="line">    &lt;constructor-arg ref&#x3D;&quot;thingThree&quot;&#x2F;&gt;</span><br><span class="line">    &lt;constructor-arg value&#x3D;&quot;[emailprotected]&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- c-namespace declaration --&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;thingOne&quot; class&#x3D;&quot;x.y.ThingOne&quot; c:thingTwo-ref&#x3D;&quot;thingTwo&quot; c:thingThree-ref&#x3D;&quot;thingThree&quot; c:email&#x3D;&quot;[emailprotected]&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring IOC</title>
    <url>/2021/04/07/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Spring/Spring%20IOC/</url>
    <content><![CDATA[<h2 id="spring介绍"><a class="markdownIt-Anchor" href="#spring介绍"></a> Spring介绍</h2>
<p><strong>Spring是一个轻量级的控制反转（IOC）和面向切面编程（AOP）的框架。</strong></p>
<h3 id="现代化java开发基于spring的开发"><a class="markdownIt-Anchor" href="#现代化java开发基于spring的开发"></a> 现代化Java开发：基于Spring的开发</h3>
<ul>
<li>
<p>Spring Boot：</p>
<ul>
<li>一个快速开发的脚手架</li>
<li>基于SpringBoot可以快速地开发单个微服务</li>
<li>约定大于配置</li>
</ul>
</li>
<li>
<p>Spring Cloud：</p>
<ul>
<li>SpringCloud是基于SpringBoot实现的</li>
</ul>
</li>
</ul>
<h3 id="弊端"><a class="markdownIt-Anchor" href="#弊端"></a> 弊端</h3>
<p>发展太久之后，配置十分繁琐，人称“配置地狱”</p>
<h2 id="ioc理论推导"><a class="markdownIt-Anchor" href="#ioc理论推导"></a> IOC理论推导</h2>
<p>现在考虑如下情景：<br />
<img src="https://i.loli.net/2021/04/07/JCWDi1XU9hLz4aN.png" alt="" /><br />
用户实际调用的是业务层Service层，不会接触Dao层。<br />
当有许多Dao层的接口和对象时，我们需要手动地在Service层实现类中设置具体的实现类，来使用下面的方法，在存在很多个接口时，修改操作的成本十分昂贵。</p>
<h3 id="set接口实现"><a class="markdownIt-Anchor" href="#set接口实现"></a> Set接口实现</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private UserDao userDao;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 利用set方法实现动态注入</span><br><span class="line">public void setUserDao(UserDao userDao) &#123;</span><br><span class="line">    this.userDao &#x3D; userDao;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>之前，程序是主动创建对象。<br />
而使用set注入之后，程序变成了被动地接受对象。<br />
程序员再也不需要去管理对象创建，降低了耦合性，可以更加专注在业务的实现上。这就是ioc的原型。</p>
<h3 id="ioc的本质"><a class="markdownIt-Anchor" href="#ioc的本质"></a> IOC的本质</h3>
<p>控制反转 Inversion of Control，是一种设计思想。DI dependency Investment 依赖注入是实现IOC的一种方法。<br />
没有IOC之前，我们使用oop，对象的创建和依赖关系完全编码在程序中，对象的依赖由程序自己控制。<br />
实现IOC之后，可以将对象的创建和依赖转移给第三方<br />
控制反转就是：<strong>获得依赖对象的方式反转了</strong>。</p>
<h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3>
<ol>
<li>在resources目录下建立beans.xml文件，这个beans配置文件可以被看成是一个容器：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;</span><br><span class="line">       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans</span><br><span class="line">        http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--使用Spring创建对象-， 在spring中对象都成为Bean--&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        使用bean标签来创建对象：</span><br><span class="line">            1。 id：变量名</span><br><span class="line">            2。 class：new的对象</span><br><span class="line">            3。 property：对象中的属性名称</span><br><span class="line">            4。 value：设置的属性值</span><br><span class="line"></span><br><span class="line">            class id &#x3D; new class(name&#x3D;value);</span><br><span class="line">    --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean id&#x3D;&quot;Hello&quot; class&#x3D;&quot;com.lyl.pojo.Hello&quot;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;str&quot; value&#x3D;&quot;Spring&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;beans&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>在调用时，先获得配置文件，即那个容器。<br />
然后，需要什么就get什么，注意类型转换即可。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ApplicationContext context &#x3D; new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);</span><br><span class="line">Hello hello &#x3D; (Hello)context.getBean(&quot;Hello&quot;);</span><br></pre></td></tr></table></figure>
<h3 id="ioc创建对象方式"><a class="markdownIt-Anchor" href="#ioc创建对象方式"></a> IOC创建对象方式</h3>
<ul>
<li>默认使用无参构造创建对象</li>
<li>假设我们需要使用有参构造创建对象，则我们需要使用constructor构造方法创建对象，具体有三种构造方式。
<ol>
<li>参数索引构造：使用<code>index</code>属性来进行赋值，索引对应构造器方法中的参数，索引从0开始。</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   public Hello(String h)&#123;</span><br><span class="line">       this.str &#x3D; h;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;Hello&quot; class&#x3D;&quot;com.lyl.pojo.Hello&quot;&gt;</span><br><span class="line">    &lt;constructor-arg index&#x3D;&quot;0&quot; value&#x3D;&quot;SPRINGTest&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>参数类型匹配构造：使用<code>type</code>属性显式指定构造函数的类型<br />
不建议使用，无法应对参数类型相同的情况。</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;Hello&quot; class&#x3D;&quot;com.lyl.pojo.Hello&quot;&gt;</span><br><span class="line">    &lt;constructor-arg type&#x3D;&quot;java.lang.String&quot; value&#x3D;&quot;haha&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>直接通过参数名称来构造</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;Hello&quot; class&#x3D;&quot;com.lyl.pojo.Hello&quot;&gt;</span><br><span class="line">    &lt;constructor-arg name&#x3D;&quot;str&quot; value&#x3D;&quot;hahha&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="注意点"><a class="markdownIt-Anchor" href="#注意点"></a> 注意点</h3>
<p>Spring容器会在实例化时，即构造<code>ApplicationContext</code>时自动注册所有的类。</p>
]]></content>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring 使用Java的方式配置Spring</title>
    <url>/2021/04/08/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Spring/Spring%20%E4%BD%BF%E7%94%A8Java%E7%9A%84%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%AESpring/</url>
    <content><![CDATA[<p>可以自定义一个配置类UserConfig，插入@Configuration注解来注册这个</p>
<ol>
<li>首先在类前插入<code>@Component</code>注解<br />
<code>@Component</code>的意思就是表示这个类被注册到了容器中</li>
<li>建立config文件，加上<code>@Configuration</code>注解，使用<code>@Bean</code>注解代替ioc容器中的bean标签。<a href="http://xn--bean-uk1g844b7hqb1au15b.id">方法名就是bean.id</a>。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;Configuration本来就是一个component，所以也会被spring容器托管</span><br><span class="line">&#x2F;&#x2F;这是一个配置类，和bean.xml一致</span><br><span class="line">@Configuration</span><br><span class="line">@</span><br><span class="line">public class UserConfig &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 相当于之前写的Bean标签</span><br><span class="line">    &#x2F;&#x2F; 方法名相当于bean.id</span><br><span class="line">    &#x2F;&#x2F; 返回值相当于bean标签中的class属性</span><br><span class="line">	@Bean</span><br><span class="line">	public User getUser()&#123;</span><br><span class="line">		return new User(); &#x2F;&#x2F; 返回要注入的对象</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>@ComponentScan()</code>：指定要扫描的包，使其下面的注解生效。<br />
3. 在调用这个实体类时，调用AnnotationConfigApplicationContext对象获得容器，通过配置类的class对象加载。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    AnnotationConfigApplicationContext context &#x3D; new AnnotationConfigApplicationContext(UserConfig.class);</span><br><span class="line">    User u &#x3D; context.getBean(&quot;getUser&quot;, User.class);</span><br><span class="line">    System.out.println(u.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>配置类的导入：<code>@Import(class对象)</code></li>
</ol>
]]></content>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring声明式事务</title>
    <url>/2021/04/10/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Spring/Spring%20%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2>
<ul>
<li>把一组业务当成一个业务来做，保证数据的一致性。</li>
<li>事务ACID原则：
<ul>
<li>原子性</li>
<li>一致性</li>
<li>隔离性</li>
<li>持久性</li>
</ul>
</li>
</ul>
<h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h2>
<ol>
<li>
<p>整合Mybatis</p>
</li>
<li>
<p>设置事务</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--配置声明式事务--&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;transctionManager&quot; class&#x3D;&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--结合aop--&gt;</span><br><span class="line">&lt;!--配置事务的类--&gt;</span><br><span class="line">&lt;tx:advice id&#x3D;&quot;txAdvice&quot; &gt;</span><br><span class="line">    &lt;!--给哪些方法配置事务--&gt;</span><br><span class="line">    &lt;tx:attributes&gt;</span><br><span class="line">        &lt;!--&lt;tx:method name&#x3D;&quot;add&quot;&#x2F;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;tx:method name&#x3D;&quot;update&quot;&#x2F;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;tx:method name&#x3D;&quot;delete&quot;&#x2F;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;tx:method name&#x3D;&quot;query&quot; read-only&#x3D;&quot;true&quot;&#x2F;&gt;--&gt;</span><br><span class="line">        &lt;!--所有方法--&gt;</span><br><span class="line">        &lt;tx:method name&#x3D;&quot;*&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;tx:attributes&gt;</span><br><span class="line">&lt;&#x2F;tx:advice&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--配置aop切入--&gt;</span><br><span class="line">&lt;aop:config&gt;</span><br><span class="line">    &lt;aop:pointcut id&#x3D;&quot;txPointCut&quot; expression&#x3D;&quot;execution(* com.lyl.mapper.*.*(..) )&quot;&#x2F;&gt;</span><br><span class="line">    &lt;aop:advisor advice-ref&#x3D;&quot;txAdvice&quot; pointcut-ref&#x3D;&quot;txPointCut&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;aop:config&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>代理模式和AOP</title>
    <url>/2021/04/08/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E5%92%8CAOP/</url>
    <content><![CDATA[<h2 id="代理模式"><a class="markdownIt-Anchor" href="#代理模式"></a> 代理模式</h2>
<h3 id="代理模式的分类"><a class="markdownIt-Anchor" href="#代理模式的分类"></a> 代理模式的分类</h3>
<h4 id="静态代理"><a class="markdownIt-Anchor" href="#静态代理"></a> 静态代理</h4>
<ul>
<li>角色分析：
<ol>
<li>抽象角色：一般使用接口或者抽象类来解决</li>
<li>真实角色：被代理的角色</li>
<li>代理角色：代理真实角色，进行附属操作</li>
<li>客户： 代理对象的人</li>
</ol>
</li>
<li>代码步骤：
<ol>
<li>创建Rent接口，内置rent()抽象方法</li>
<li>创建真实角色Client和LandLoad对象，其中LanLoad内置rent()真实方法。</li>
<li>创建代理角色Proxy，实例变量为LandLoad，一个代理角色代表一个房东，并且继承Rent接口。重写rent方法为直接调用房东的rent方法。同时，Proxy类还可以声明其他方法，比如看房，收中介费等…</li>
</ol>
</li>
</ul>
<h5 id="代理模式的好处"><a class="markdownIt-Anchor" href="#代理模式的好处"></a> 代理模式的好处</h5>
<ol>
<li>使真实角色的操作更加纯粹！去关注一些双方共同参加的业务。</li>
<li>双方共同参加的业务也就交给了代理角色，实现了业务分工。</li>
<li>双方共同参加的业务发生拓展时，方便了集中管理。</li>
</ol>
<h5 id="代理模式的缺点"><a class="markdownIt-Anchor" href="#代理模式的缺点"></a> 代理模式的缺点</h5>
<p>一个真实角色就需要一个代理角色：增加代码量，开发量翻倍 --&gt; 动态代理</p>
<h4 id="动态代理"><a class="markdownIt-Anchor" href="#动态代理"></a> 动态代理</h4>
<ul>
<li>介绍：<br />
动态代理和静态代理角色一致<br />
代理类是动态生成的，而不是直接写好的。</li>
<li>分类：
<ol>
<li>基于接口的动态代理：JDK动态代理</li>
<li>基于类的动态代理：cglib</li>
<li>通过java字节码：JAVAssist</li>
</ol>
</li>
<li>需要了解两个类：
<ol>
<li>Proxy：代理</li>
<li>InvocationHandler：调用处理程序</li>
</ol>
</li>
<li>优点：一个动态代理类可以实现多个类</li>
</ul>
<h2 id="aop-aspect-oriented-programming"><a class="markdownIt-Anchor" href="#aop-aspect-oriented-programming"></a> AOP （Aspect Oriented Programming)</h2>
<p>在SpringAop中，可以通过Advice定义横切逻辑</p>
<ul>
<li>首先导入依赖</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.aspectj&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;aspectjweaver&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.9.4&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>前提：</li>
</ul>
<ol>
<li>以下描述的所有的类，包含需要被插入的类和切片方法类，都需要被注册到ioc容器中。既可以选择bean标签内注册，也可以直接使用@Component注解来注册，不过使用注解注册一定不要忘记了在ioc容器中设置<code>context:component-scan</code> 标签中扫描到这个类。</li>
<li>需要注册一个接口，可以直接使用<code>@Service</code>注册</li>
<li>测试时，实现动态代理，得到的是这个接口的接口实现类，并不是接口！<br />
<code>UserService userService = context.getBean(&quot;userServiceImpl&quot;, UserService.class);</code></li>
</ol>
<h3 id="方式一使用spring提供的原生api接口"><a class="markdownIt-Anchor" href="#方式一使用spring提供的原生api接口"></a> 方式一：使用Spring提供的原生API接口</h3>
<ol>
<li>导入约束</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;aop</span><br><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-aop.xsd</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>
<p>设置新建log日志文件夹，定义切面方法，继承<code>MethodBeforeAdvice</code>， <code>MethodAfterAdvice</code> …</p>
</li>
<li>
<p>注册接口和切面执行的方法<br />
使用@Service注册接口<br />
使用@Component注册方法类</p>
</li>
<li>
<p>设置切入点</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--1. 使用原生Spring API接口--&gt;</span><br><span class="line">    &lt;!--配置aop--&gt;</span><br><span class="line">    &lt;aop:config&gt;</span><br><span class="line">        &lt;!--切入点：expression&#x3D;&quot;表达式(*修饰词，*返回值，*类名，*方法名，*参数)&quot;--&gt;</span><br><span class="line">        &lt;aop:pointcut id&#x3D;&quot;pointcut&quot; expression&#x3D;&quot;execution(* com.lyl.service.UserServiceImpl.*(..) )&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--执行环绕增强:将afterlog切入到上述方法--&gt;</span><br><span class="line">        &lt;aop:advisor advice-ref&#x3D;&quot;afterLog&quot; pointcut-ref&#x3D;&quot;pointcut&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--执行环绕增强:将afterlog切入到上述方法--&gt;</span><br><span class="line">        &lt;aop:advisor advice-ref&#x3D;&quot;beforeLog&quot; pointcut-ref&#x3D;&quot;pointcut&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;aop:config&gt;</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>然后测试</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    ApplicationContext context &#x3D; new ClassPathXmlApplicationContext(&quot;applciationContext.xml&quot;);</span><br><span class="line">    &#x2F;&#x2F; 动态代理代理的是接口</span><br><span class="line">    UserService userService &#x3D; context.getBean(&quot;userServiceImpl&quot;, UserService.class);</span><br><span class="line">    userService.add();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="aspectj切入点语法定义"><a class="markdownIt-Anchor" href="#aspectj切入点语法定义"></a> AspectJ切入点语法定义</h4>
<p>在使用spring框架配置AOP的时候，不管是通过XML配置文件还是注解的方式都需要定义pointcut”切入点”<br />
最常见的切点函数就是execution()，其表达式可以分为五个部分<br />
例子：<code>expression=&quot;execution(* com.lyl.service.UserServiceImpl.*(..) )&quot;</code></p>
<ol>
<li>execution()：表达式主体</li>
<li>第一个 * 表示返回的类型，*表示所有类型</li>
<li>com.lyl.service.UserServiceImpl 表示该类下的所有方法</li>
<li>*(…) 这个星号表示方法名，*号表示所有的方法，后面括弧里面表示方法的参数，两个句点表示任何参数</li>
</ol>
<h3 id="方法二使用自定义类实现aop"><a class="markdownIt-Anchor" href="#方法二使用自定义类实现aop"></a> 方法二：使用自定义类实现AOP</h3>
<ol>
<li>创建diy包下的diy.java，定义需要插入的方法。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.lyl.diy;</span><br><span class="line"></span><br><span class="line">public class DiyPointerCut &#123;</span><br><span class="line"></span><br><span class="line">	public void before()&#123;</span><br><span class="line">		System.out.println(&quot;After Method&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void after()&#123;</span><br><span class="line">		System.out.println(&quot;After Method&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>
<p>在xml文件中注入这个类<br />
<code>&lt;bean id=&quot;diy&quot; class=&quot;com.lyl.diy.DiyPointerCut&quot;/&gt;</code></p>
</li>
<li>
<p>然后设置方法来插入切面方法</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;aop:config&gt;</span><br><span class="line">    &lt;!--自定义切面， ref需要引用的类--&gt;</span><br><span class="line">    &lt;aop:aspect ref&#x3D;&quot;diy&quot;&gt;</span><br><span class="line">        &lt;!--切入点--&gt;</span><br><span class="line">        &lt;aop:pointcut id&#x3D;&quot;point&quot; expression&#x3D;&quot;execution(* com.lyl.service.UserServiceImpl.*(..) )&quot;&#x2F;&gt;</span><br><span class="line">        &lt;!--通知插入的方法--&gt;</span><br><span class="line">        &lt;aop:before method&#x3D;&quot;before&quot; pointcut-ref&#x3D;&quot;point&quot;&#x2F;&gt;</span><br><span class="line">        &lt;aop:after  method&#x3D;&quot;after&quot;  pointcut-ref&#x3D;&quot;point&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;aop:aspect&gt;</span><br><span class="line">&lt;&#x2F;aop:config&gt;</span><br></pre></td></tr></table></figure>
<h3 id="方法三使用注解实现aop"><a class="markdownIt-Anchor" href="#方法三使用注解实现aop"></a> 方法三：使用注解实现AOP</h3>
<ol>
<li>自定义切面方法类，并且实现注册，这里偷懒直接使用<code>@Component</code>注册，并且定义切面类<code>@Aspect</code></li>
<li>设置切面方法，并且增加注解<code>@Before()</code>和<code>@After()</code>，括号内放置表达式主体，即expression的值</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Aspect</span><br><span class="line">@Component</span><br><span class="line">public class AnnotationPointCut &#123;</span><br><span class="line"></span><br><span class="line">	@Before(&quot;execution(* com.lyl.service.UserServiceImpl.*(..) )&quot;)</span><br><span class="line">	public void before()&#123;</span><br><span class="line">		System.out.println(&quot;&#x3D;&#x3D;&#x3D; 实现方法之前&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@After(&quot;execution(* com.lyl.service.UserServiceImpl.*(..) )&quot;)</span><br><span class="line">	public void after()&#123;</span><br><span class="line">		System.out.println(&quot;实现方法之后 &#x3D;&#x3D;&#x3D;&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>然后在xml文件中开启aop注解支持<code>&lt;aop:aspectj-autoproxy/&gt;</code></li>
</ol>
<h4 id="环绕增强"><a class="markdownIt-Anchor" href="#环绕增强"></a> 环绕增强</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Around(&quot;execution(* com.lyl.service.UserServiceImpl.*(..) )&quot;)</span><br><span class="line">&#x2F;&#x2F; 可以定义一个参数，代表我们要获取处理切入的点</span><br><span class="line">&#x2F;&#x2F; 这个参数可以得到一个签名，来获得一些类的信息</span><br><span class="line">public void around(ProceedingJoinPoint joinPoint) throws Throwable &#123;</span><br><span class="line">    System.out.println(&quot;环绕前&quot;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 签名</span><br><span class="line">    Signature signature &#x3D; joinPoint.getSignature();</span><br><span class="line">    System.out.println(&quot;signature:  &quot;+signature.getName());</span><br><span class="line">    &#x2F;&#x2F; 执行当前方法</span><br><span class="line">    Object proceed &#x3D; joinPoint.proceed();</span><br><span class="line">    System.out.println(&quot;环绕后&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法的顺序为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">环绕前</span><br><span class="line">signature:  add</span><br><span class="line">&#x3D;&#x3D;&#x3D; 实现方法之前</span><br><span class="line">add a user</span><br><span class="line">实现方法之后 &#x3D;&#x3D;&#x3D;</span><br><span class="line">环绕后</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring注解开发</title>
    <url>/2021/04/08/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Spring/Spring%20%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h3 id="component-和-values"><a class="markdownIt-Anchor" href="#component-和-values"></a> @Component 和 @Values</h3>
<ol>
<li>在Spring4之后，使用注解必须要先导入相应的Spring-aop包</li>
<li>在beans文件下输入标签：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--开启注解支持--&gt;</span><br><span class="line">&lt;context:annotation-config&#x2F;&gt;</span><br><span class="line">&lt;!--扫描指定的包，使当前包下注解生效--&gt;</span><br><span class="line">&lt;context:component-scan base-package&#x3D;&quot;com.lyl.pojo&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>在pojo类前插入注解<code>@Component</code>:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">public class User &#123;</span><br><span class="line">    &#x2F;&#x2F; 显示赋值</span><br><span class="line">	public String name &#x3D; &quot;lyl&quot;;</span><br><span class="line">    &#x2F;&#x2F; 注解赋值</span><br><span class="line">    @Value(&quot;xjtlu&quot;)</span><br><span class="line">    public String school;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>然后就无需在IOC容器中注入这个类了</li>
<li>注解会自动注册当前类，id为小写类名</li>
<li>在调用时，仍然使用<code>context.getBean()</code>方法得到这个对象即可</li>
</ol>
<ul>
<li><code>@Component</code>有几个衍生注解:
<ul>
<li>dao : <code>@Repository</code></li>
<li>service : <code>@Service</code></li>
<li>controller : <code>@Controller</code></li>
</ul>
</li>
</ul>
<p>这四个注解功能相同，都是将某个类注册到Spring中，装备到Bean</p>
<h3 id="xml与注解"><a class="markdownIt-Anchor" href="#xml与注解"></a> XML与注解</h3>
<ul>
<li>XML更加万能，适用于任何场景，维护更加简单。</li>
<li>注解：不是自己的类使用不了，维护复杂。</li>
<li>XMl用来管理bean，注解完成属性注入。</li>
<li>注意点开启注解并且扫描对应的包。</li>
</ul>
]]></content>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring 配置</title>
    <url>/2021/04/07/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Spring/Spring%20%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> <strong>配置</strong></h3>
<p>id：bean的唯一标识符号，相当于对象名<br />
class：bean对象随影的全限定名<br />
name：别名</p>
<h3 id="设置别名"><a class="markdownIt-Anchor" href="#设置别名"></a> <strong>设置别名</strong></h3>
<ol>
<li>在<strong>beans.xml</strong>文件中，可以通过alias标签给id设置别名。不常用。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;Hello&quot; class&#x3D;&quot;com.lyl.pojo.Hello&quot;&gt;</span><br><span class="line">    &lt;constructor-arg type&#x3D;&quot;java.lang.String&quot; value&#x3D;&quot;haha&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line">&lt;alias name&#x3D;&quot;Hello&quot; alias&#x3D;&quot;iii&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>直接使用<code>bean</code>下的<code>name</code>属性即可。<br />
name可以同时取多个别名，可以使用逗号，分号，空格进行分割。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id&#x3D;&quot;Hello&quot; class&#x3D;&quot;com.lyl.pojo.Hello&quot; name&#x3D;&quot;ii, ii2, ii3&quot;&gt;</span><br><span class="line">    &lt;constructor-arg type&#x3D;&quot;java.lang.String&quot; value&#x3D;&quot;haha&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
<h3 id="import"><a class="markdownIt-Anchor" href="#import"></a> <strong>import</strong></h3>
<p>一般用于团队开发，可以将多个配置文件合并成为一个。<br />
情景：假设项目中不同的人负责不同的类开发，不同的类需要注册在不同的bean中，我们可以利用import将所有的beans.xml合并为一个总的文件就可以直接利用。<br />
<img src="https://i.loli.net/2021/04/07/5hWBivkN3nFLJX1.png" alt="" /></p>
]]></content>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>EnableAutoConfiguration</title>
    <url>/2021/04/13/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringBoot/EnableAutoConfiguration/</url>
    <content><![CDATA[<p><code>@SpringBootApplication</code>注解是由<code>@SpringBootConfiguration</code>，<code>@EnableAutoConfiguration</code>和<code>@ComponentScan</code>三个注解组成的。<br />
<code>@SpringBootConfiguration</code>表示当前是一个配置类。<br />
<code>@ComponentScan</code>指定包扫描。</p>
<h3 id="enableautoconfiguration"><a class="markdownIt-Anchor" href="#enableautoconfiguration"></a> EnableAutoConfiguration</h3>
<p>由<code>@AutoConfigurationPackage</code>和<code>@Import()</code>两个注解组成。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@AutoConfigurationPackage</span><br><span class="line">@Import(AutoConfigurationImportSelector.class)</span><br><span class="line">public @interface EnableAutoConfiguration</span><br></pre></td></tr></table></figure>
<ul>
<li><code>@AutoConfigurationPackage</code>指定默认包规则</li>
<li><code>@Import</code></li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>thymeleaf</title>
    <url>/2021/04/18/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringBoot/thymeleaf/</url>
    <content><![CDATA[<h2 id="导入依赖"><a class="markdownIt-Anchor" href="#导入依赖"></a> 导入依赖</h2>
<h3 id=""><a class="markdownIt-Anchor" href="#"></a> </h3>
<dependency>
    <groupId>org.thymeleaf</groupId>
    <artifactId>thymeleaf-spring5</artifactId>
</dependency>
<dependency>
    <groupId>org.thymeleaf.extras</groupId>
    <artifactId>thymeleaf-extras-java8time</artifactId>
</dependency>
###
]]></content>
  </entry>
  <entry>
    <title>SpringBoot底层注解</title>
    <url>/2021/04/12/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringBoot/SpringBoot%E5%BA%95%E5%B1%82%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="组件添加"><a class="markdownIt-Anchor" href="#组件添加"></a> 组件添加</h2>
<h3 id="方法一-configuration"><a class="markdownIt-Anchor" href="#方法一-configuration"></a> 方法一 @Configuration</h3>
<ol>
<li>新建config类，在类上标注注解<code>@Configuration</code></li>
<li>在类的内部使用<code>@Bean</code>注解标注的方法注册组件。<br />
其中方法名为组件id，返回类型为组件的类型，返回值为组件实例。<br />
<code>@Bean</code>可以变成<code>@Bean(String)</code>来设置组件的id。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration &#x2F;&#x2F;这是一个配置类 &#x3D; 配置文件</span><br><span class="line">public class MyConfig &#123;</span><br><span class="line"></span><br><span class="line">	@Bean &#x2F;&#x2F;以方法名作为组件id，返回组件类型，返回的值就是组件在容器中的实例</span><br><span class="line">	public Person person()&#123;</span><br><span class="line">		return new Person(&quot;张三&quot;, 18);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	@Bean(&quot;tom&quot;) &#x2F;&#x2F;也可以自定义组件名称</span><br><span class="line">	public Pet tomcatPet()&#123;</span><br><span class="line">		return new Pet(&quot;Tomcat&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>@Configuration</code>的<code>proxyBeanMethod</code>默认为true表示全/单例模式。设置<code>@SpringBootApplication(proxyBeanMethod=false)</code>可以设置为轻量/多例模式。<br />
全模式下，程序会自动检查是否存在组件实例，然后返回该实例，占用了时间。一般单单注册组件都会调成false。<br />
3. 然后在<code>@SpringBootApplication</code>类中，得到容器，再使用<code>getBean()</code>方法得到组件实例即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">public class HelloWorldApplication &#123;</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		&#x2F;&#x2F; 返回IOC容器</span><br><span class="line">		ConfigurableApplicationContext run &#x3D;  SpringApplication.run(HelloWorldApplication.class, args);</span><br><span class="line">		&#x2F;&#x2F; 从容器中获取组件</span><br><span class="line">		Pet pet &#x3D; run.getBean(&quot;tom&quot;, Pet.class);</span><br><span class="line">		Pet pet1 &#x3D; run.getBean(&quot;tom&quot;, Pet.class);</span><br><span class="line">		System.out.println(pet &#x3D;&#x3D; pet1);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="方法二"><a class="markdownIt-Anchor" href="#方法二"></a> 方法二</h3>
<p>标注@Component，@Service等来自定义配置类</p>
<h3 id="方法三-import"><a class="markdownIt-Anchor" href="#方法三-import"></a> 方法三 @Import()</h3>
<p>给config类上面添加<code>@Import(类名)</code>注解，表示在容器中自动创建括号内实例的无参构造组件</p>
<h3 id="方法四-conditional"><a class="markdownIt-Anchor" href="#方法四-conditional"></a> 方法四 @Conditional</h3>
<ul>
<li>条件装配，只有满足Conditional指定的条件时，才进行组件注入。</li>
<li>放在config类中定义的<code>@bean</code>方法下。或者直接放置在config类上。</li>
<li><code>@Conditional</code>是个主类，下面有很多子类：<code>@ConditionalOnBean(name = &quot;tom&quot;)</code></li>
</ul>
<h2 id="导入资源-importresource"><a class="markdownIt-Anchor" href="#导入资源-importresource"></a> 导入资源 @ImportResource</h2>
<p>在任意配置类上面加上<code>@ImportResource(&quot;xml配置文件路径&quot;)</code>，即可成功导入引用配置文件</p>
<h2 id="配置绑定"><a class="markdownIt-Anchor" href="#配置绑定"></a> 配置绑定</h2>
<p>在properties文件中可以设定容器组件实例的属性值。</p>
<h3 id="方法一-configurationproperties"><a class="markdownIt-Anchor" href="#方法一-configurationproperties"></a> 方法一 @ConfigurationProperties</h3>
<ol>
<li>首先导入依赖：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-configuration-processor&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;optional&gt;true&lt;&#x2F;optional&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>然后注册组件类到容器中。只有在容器中的组件，才会拥有SpringBoot中的功能。</li>
<li>在properties文件中设置需要配置的实例属性值，这里前缀可以用别名，但是属性名称必须相同</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">onePerson.name &#x3D; &quot;xyc&quot;</span><br><span class="line">onePerson.age &#x3D; 20</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>然后给组件类设置注解，prefix属性表示在properties文件中该类的别名。<br />
同时，注解一定要有相对应属性的set方法。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@ConfigurationProperties(prefix&#x3D;&quot;oneperson&quot;)</span><br><span class="line">@Component</span><br><span class="line">public class Person &#123;</span><br><span class="line">	private String name;</span><br><span class="line">	private int age;</span><br><span class="line"></span><br><span class="line">	public void setName(String name) &#123;</span><br><span class="line">		this.name &#x3D; name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public void setAge(int name) &#123;</span><br><span class="line">		this.age &#x3D; name;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>在controller中测试</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">Person person;</span><br><span class="line"></span><br><span class="line">@RequestMapping(&quot;&#x2F;person&quot;)</span><br><span class="line">public String person()&#123;</span><br><span class="line">    return person.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>@Autowired</code>自动装配，就可以不通过调用bean的方法得到了。</p>
<h3 id="方法二-enableconfigurationproperties"><a class="markdownIt-Anchor" href="#方法二-enableconfigurationproperties"></a> 方法二 @EnableConfigurationProperties</h3>
<p>在config文件中，加入<code>@EnableConfigurationProperties(类名)</code>来设置开启配置绑定<br />
功能：<br />
1. 开启属性配置功能<br />
2. 把该组件自动注入到容器中<br />
然后配置properties和<code>@ConfigurationProperties()</code>即可</p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 简介</title>
    <url>/2021/04/06/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringBoot/SpringBoot%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<p>官方文档： <a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot">https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot</a></p>
<h2 id="微服务"><a class="markdownIt-Anchor" href="#微服务"></a> 微服务</h2>
<h3 id="单体应用框架"><a class="markdownIt-Anchor" href="#单体应用框架"></a> 单体应用框架</h3>
<p>all in one，指的是将一个应用中的所有服务都封装到一个war包中。<br />
好处：易于开发测试，方便部署，多个服务器负载均衡。<br />
弊端：修改应用时需要停止整个服务，重新打包部署。</p>
<h3 id="微服务架构"><a class="markdownIt-Anchor" href="#微服务架构"></a> 微服务架构</h3>
<p>把每个功能独立出来，将需要的功能元素进行整合。所以微服务是对功能元素进行复制，而不是对整个应用进行复制。<br />
优点：每一个功能元素的服务都是可以替换，可以福独立升级的程序代码，保证了低耦合。<br />
缺点：给部署和运维带来了很大的难度。</p>
<h2 id="文件结构"><a class="markdownIt-Anchor" href="#文件结构"></a> 文件结构</h2>
<ul>
<li><code>@SpringBootApplication</code>：程序的主入口</li>
<li><code>application.properties</code>：程序核心配置文件</li>
<li><code>pom.xml</code>文件中的父项目设置，帮助我们进行包管理，之后的<code>dependency</code>我们无需设置版本号。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;parent&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.4.4&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;relativePath&#x2F;&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">&lt;&#x2F;parent&gt;</span><br></pre></td></tr></table></figure>
<h2 id="自动配置"><a class="markdownIt-Anchor" href="#自动配置"></a> 自动配置</h2>
<ul>
<li>配置Tomcat
<ol>
<li>引入Tomcat依赖，已经引入的<code>spring-boot-starter-web</code>依赖依赖了Tomcat，所以无需手动配置。</li>
<li>配置Tomcat</li>
</ol>
</li>
<li>配置MVC
<ol>
<li>已经自动引入了Spring Mvc的全套组件</li>
<li>自动配置好了SpringMVC的常用功能</li>
</ol>
</li>
<li>自动设置默认值并且配置好了web的相关配置<br />
默认配置最后都是映射到一个类上去的，这个类会在容器中被创建</li>
<li>默认扫描机制：主程序所在的包已经其下面的所有子包都已经默认扫描</li>
<li>引入哪些场景，哪些场景就会被开启</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC Controller</title>
    <url>/2021/04/14/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringMVC/SpringMVCController/</url>
    <content><![CDATA[<h1 id="controller控制器"><a class="markdownIt-Anchor" href="#controller控制器"></a> Controller控制器</h1>
<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2>
<ul>
<li>实现方法：接口定义和注解定义</li>
<li>功能：解析用户请求并且转换为一个模型</li>
</ul>
<h2 id="接口定义"><a class="markdownIt-Anchor" href="#接口定义"></a> 接口定义</h2>
<h3 id="实现controller接口"><a class="markdownIt-Anchor" href="#实现controller接口"></a> 实现Controller接口</h3>
<p>Controller是一个函数式接口，只有一个方法，用于处理请求并且返回模型和视图对象。<br />
<img src="https://i.loli.net/2021/04/14/NySzpORnltodDic.png" alt="" /></p>
<p>所以我们编写一个控制器Controller类来实现这个接口 <code>implements Controller</code></p>
<h3 id="handlerequest方法"><a class="markdownIt-Anchor" href="#handlerequest方法"></a> handleRequest方法</h3>
<ul>
<li>该方法为Controller接口的内置抽象方法，返回一个ModelAndView对象</li>
<li><strong>ModelAndView对象</strong>功能：
<ol>
<li>添加数据 addObject</li>
<li>设置跳转方向 setViewName</li>
</ol>
</li>
</ul>
<p><img src="https://i.loli.net/2021/04/14/DZ69ChxiuFfgrRs.png" alt="" /></p>
<h3 id="controller实现类的缺点"><a class="markdownIt-Anchor" href="#controller实现类的缺点"></a> Controller实现类的缺点</h3>
<p>一个控制器只有一个方法，在多个方法需要时，比较麻烦。</p>
<h2 id="注解定义"><a class="markdownIt-Anchor" href="#注解定义"></a> 注解定义</h2>
<h3 id="在spring中注册controller"><a class="markdownIt-Anchor" href="#在spring中注册controller"></a> 在Spring中注册Controller</h3>
<p><code>&lt;context:component-scan base-package=&quot;com.lyl.controller&quot;/&gt;</code></p>
<h3 id="controller类"><a class="markdownIt-Anchor" href="#controller类"></a> @Controller类</h3>
<ul>
<li>首先添加注解<code>@Controller</code></li>
<li>在类内部声明映射的方法，传入参数<code>Model</code>，返回一个<strong>跳转地址字符串</strong></li>
<li>使用<code>Model</code>的<code>addAttribute</code>方法设置数据</li>
<li>返回值为<strong>跳转方向</strong></li>
<li>可以在类或者方法上方设置注解@RequestMapping()，内部字符串表示调用该方法需要输入的地址。<br />
方法上必须设置，而类上可以不设置，跳转地址为<code>/类设置地址/方法设置地址</code></li>
</ul>
<p><img src="https://i.loli.net/2021/04/14/dHibzFDIPBfUZK8.png" alt="" /></p>
]]></content>
  </entry>
  <entry>
    <title>SpringMVC JSON</title>
    <url>/2021/04/15/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringMVC/SpringMVCJSON/</url>
    <content><![CDATA[<h3 id="json定义"><a class="markdownIt-Anchor" href="#json定义"></a> Json定义</h3>
<ul>
<li>用来保存Js对象的一种方式，和Js对象的写法类似。Json使用文本表示一个Js对象的信息，本质是一个字符串。</li>
<li>Js: <code>var obj = &#123; a: &quot;hello&quot;, b: &quot;world&quot; &#125;</code><br />
Json: <code>' &#123;&quot;a&quot;: &quot;hello&quot;, &quot;b&quot;: &quot;world&quot;&#125; '</code></li>
</ul>
<h3 id="转换方法"><a class="markdownIt-Anchor" href="#转换方法"></a> 转换方法</h3>
<ul>
<li>JSON -&gt; JS: <code>JSON.parse( [json字符串] )</code></li>
<li>JS -&gt; JSON: <code>JSON.stringify( [json对象] )</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">   &#x2F;&#x2F;编写一个js的对象</span><br><span class="line">   var user &#x3D; &#123;</span><br><span class="line">       name : &quot;lll&quot;,</span><br><span class="line">       age : 3,</span><br><span class="line">       sex : &quot;男&quot;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F;将js对象转换成json字符串</span><br><span class="line">   var str &#x3D; JSON.stringify(user);</span><br><span class="line">   console.log(str);</span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F;将json字符串转换为js对象</span><br><span class="line">   var user2 &#x3D; JSON.parse(str);</span><br><span class="line">   console.log(user2.age,user2.name,user2.sex);</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h4 id="fastjson"><a class="markdownIt-Anchor" href="#fastjson"></a> FastJson</h4>
<p>fastjson.jar是阿里开发的一款专门用于Java开发的包，可以方便的实现json对象与JavaBean对象的转换，实现JavaBean对象与json字符串的转换，实现json对象与json字符串的转换。</p>
<ul>
<li>pom依赖：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">   &lt;version&gt;1.2.60&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>内部类：</p>
<ol>
<li>JSONObject  代表 json 对象</li>
<li>JSONArray   代表 json 对象数组</li>
<li>JSON代表 JSONObject和JSONArray的转化</li>
</ol>
</li>
<li>
<p>测试代码：</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.kuang.controller;</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import com.kuang.pojo.User;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class FastJsonDemo &#123;</span><br><span class="line">   public static void main(String[] args) &#123;</span><br><span class="line">       &#x2F;&#x2F;创建一个对象</span><br><span class="line">       User user1 &#x3D; new User(&quot;秦疆1号&quot;, 3, &quot;男&quot;);</span><br><span class="line">       User user2 &#x3D; new User(&quot;秦疆2号&quot;, 3, &quot;男&quot;);</span><br><span class="line">       User user3 &#x3D; new User(&quot;秦疆3号&quot;, 3, &quot;男&quot;);</span><br><span class="line">       User user4 &#x3D; new User(&quot;秦疆4号&quot;, 3, &quot;男&quot;);</span><br><span class="line">       List&lt;User&gt; list &#x3D; new ArrayList&lt;User&gt;();</span><br><span class="line">       list.add(user1);</span><br><span class="line">       list.add(user2);</span><br><span class="line">       list.add(user3);</span><br><span class="line">       list.add(user4);</span><br><span class="line"></span><br><span class="line">       System.out.println(&quot;*******Java对象 转 JSON字符串*******&quot;);</span><br><span class="line">       String str1 &#x3D; JSON.toJSONString(list);</span><br><span class="line">       System.out.println(&quot;JSON.toJSONString(list)&#x3D;&#x3D;&gt;&quot;+str1);</span><br><span class="line">       String str2 &#x3D; JSON.toJSONString(user1);</span><br><span class="line">       System.out.println(&quot;JSON.toJSONString(user1)&#x3D;&#x3D;&gt;&quot;+str2);</span><br><span class="line"></span><br><span class="line">       System.out.println(&quot;\n****** JSON字符串 转 Java对象*******&quot;);</span><br><span class="line">       User jp_user1&#x3D;JSON.parseObject(str2,User.class);</span><br><span class="line">       System.out.println(&quot;JSON.parseObject(str2,User.class)&#x3D;&#x3D;&gt;&quot;+jp_user1);</span><br><span class="line"></span><br><span class="line">       System.out.println(&quot;\n****** Java对象 转 JSON对象 ******&quot;);</span><br><span class="line">       JSONObject jsonObject1 &#x3D; (JSONObject) JSON.toJSON(user2);</span><br><span class="line">       System.out.println(&quot;(JSONObject) JSON.toJSON(user2)&#x3D;&#x3D;&gt;&quot;+jsonObject1.getString(&quot;name&quot;));</span><br><span class="line"></span><br><span class="line">       System.out.println(&quot;\n****** JSON对象 转 Java对象 ******&quot;);</span><br><span class="line">       User to_java_user &#x3D; JSON.toJavaObject(jsonObject1, User.class);</span><br><span class="line">       System.out.println(&quot;JSON.toJavaObject(jsonObject1, User.class)&#x3D;&#x3D;&gt;&quot;+to_java_user);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="controller返回json数据"><a class="markdownIt-Anchor" href="#controller返回json数据"></a> Controller返回JSON数据</h3>
<h4 id="返回单个对象编码"><a class="markdownIt-Anchor" href="#返回单个对象编码"></a> 返回单个对象编码</h4>
<ul>
<li>导入依赖</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;com.fasterxml.jackson.core&lt;&#x2F;groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;jackson-databind&lt;&#x2F;artifactId&gt;</span><br><span class="line">   &lt;version&gt;2.9.8&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>设置注解<br />
可以在<code>@Controller</code>实现类的方法中设置视图解析器，给前端传递参数和目标页面。<br />
除此之外，Controller中的方法同样可以被设置为不设置视图解析器，而是直接返回一个字符串：</li>
</ul>
<ol>
<li><code>@Controller</code>类下的<code>@ResponseBody</code>方法</li>
<li><code>@RestController</code>标注该类下面所有方法都只返回字符串，而不是跳转页面地址。一般在前后端分离的工作中，更加常用这种方式。</li>
</ol>
<ul>
<li>设置ObjectMapper对象：一个jackson的对象映射器，用来解析数据。<br />
<a href="https://blog.csdn.net/qq_41834086/article/details/111152470">https://blog.csdn.net/qq_41834086/article/details/111152470</a></li>
</ul>
<p><img src="https://i.loli.net/2021/04/15/8vfZCcglp3z61OE.png" alt="" /></p>
<ul>
<li>设置编码<br />
这里推荐使用统一解决的方式，在<code>springmvc</code>配置文件中的<code>bean</code>标签上方插入：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;mvc:annotation-driven&gt;</span><br><span class="line">   &lt;mvc:message-converters register-defaults&#x3D;&quot;true&quot;&gt;</span><br><span class="line">       &lt;bean class&#x3D;&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;&gt;</span><br><span class="line">           &lt;constructor-arg value&#x3D;&quot;UTF-8&quot;&#x2F;&gt;</span><br><span class="line">       &lt;&#x2F;bean&gt;</span><br><span class="line">       &lt;bean class&#x3D;&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;&gt;</span><br><span class="line">           &lt;property name&#x3D;&quot;objectMapper&quot;&gt;</span><br><span class="line">               &lt;bean class&#x3D;&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;&gt;</span><br><span class="line">                   &lt;property name&#x3D;&quot;failOnEmptyBeans&quot; value&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line">               &lt;&#x2F;bean&gt;</span><br><span class="line">           &lt;&#x2F;property&gt;</span><br><span class="line">       &lt;&#x2F;bean&gt;</span><br><span class="line">   &lt;&#x2F;mvc:message-converters&gt;</span><br><span class="line">&lt;&#x2F;mvc:annotation-driven&gt;</span><br></pre></td></tr></table></figure>
<h4 id="返回对象集合编码"><a class="markdownIt-Anchor" href="#返回对象集合编码"></a> 返回对象集合编码</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;&#x2F;json2&quot;)</span><br><span class="line">public String json2() throws JsonProcessingException &#123;</span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F;创建一个jackson的对象映射器，用来解析数据</span><br><span class="line">   ObjectMapper mapper &#x3D; new ObjectMapper();</span><br><span class="line">   &#x2F;&#x2F;创建一个对象</span><br><span class="line">   User user1 &#x3D; new User(&quot;qwe&quot;, 3, &quot;男&quot;);</span><br><span class="line">   User user2 &#x3D; new User(&quot;wer&quot;, 3, &quot;男&quot;);</span><br><span class="line">   User user3 &#x3D; new User(&quot;ert&quot;, 3, &quot;男&quot;);</span><br><span class="line">   User user4 &#x3D; new User(&quot;rty&quot;, 3, &quot;男&quot;);</span><br><span class="line">   List&lt;User&gt; list &#x3D; new ArrayList&lt;User&gt;();</span><br><span class="line">   list.add(user1);</span><br><span class="line">   list.add(user2);</span><br><span class="line">   list.add(user3);</span><br><span class="line">   list.add(user4);</span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F;将我们的对象解析成为json格式</span><br><span class="line">   String str &#x3D; mapper.writeValueAsString(list);</span><br><span class="line">   return str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC Restful风格</title>
    <url>/2021/04/14/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringMVC/SpringMVCRestful%E9%A3%8E%E6%A0%BC/</url>
    <content><![CDATA[<h2 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h2>
<p>Restful就是一种资源定位以及操作的风格，易于实现缓存等机制。</p>
<ul>
<li>传统的url风格使用<code>?</code>传参，使用<code>&amp;</code>连接参数：<code>http://localhost:8080/myWeb/add?a=1&amp;b=3</code><br />
Restful风格使用<code>/</code>分割参数：<code>http://www.vodxc.com/AQP/lansedamen/</code></li>
<li>传统方式操作资源，是通过不同的参数来实现不同的效果，而Restful风格则是通过不同的<strong>请求方式</strong>来实现不同的效果。</li>
</ul>
<h2 id="格式设置"><a class="markdownIt-Anchor" href="#格式设置"></a> 格式设置</h2>
<ul>
<li>传统方式：<code>http://localhost:8080/myWeb/add?a=1&amp;b=3</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;&#x2F;add&quot;)</span><br><span class="line">public String test1(int a, int b, Model m)&#123;</span><br><span class="line">    int res &#x3D;a+b;</span><br><span class="line">    m.addAttribute(&quot;msg&quot;,res+&quot;&quot;);</span><br><span class="line">    return &quot;hello&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>RestFul方式：使用<code>@PathVariable</code>加在变量前标注，然后在<code>@RequestMapping()</code>中绑定变量名称和顺序。<br />
然后请求的规范url变成：<code>http://localhost:8080/myWeb/add/1/2</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;&#x2F;add&#x2F;&#123;a&#125;&#x2F;&#123;b&#125;&quot;)</span><br><span class="line">public String test1(@PathVariable int a,@PathVariable int b, Model m)&#123;</span><br><span class="line">    int res &#x3D;a+b;</span><br><span class="line">    m.addAttribute(&quot;msg&quot;,res+&quot;&quot;);</span><br><span class="line">    return &quot;hello&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="方法设置"><a class="markdownIt-Anchor" href="#方法设置"></a> 方法设置</h2>
<ul>
<li><code>RequestMapping</code>接口中存在成员参数<code>RequestMethod[]</code></li>
</ul>
<p><img src="https://i.loli.net/2021/04/15/95TQysYtbLdBSHj.png" alt="" /></p>
<ul>
<li>RequestMethod是一个枚举类，我们可以通过<code>@RequestMapping</code>类的<code>method</code>属性来设定枚举类中的跳转方法，这其实是在约束前端的跳转方法：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RequestMapping(value &#x3D; &quot;&#x2F;add&#x2F;&#123;a&#125;&#x2F;&#123;b&#125;&quot;, method &#x3D; RequestMethod.DELETE)</span><br></pre></td></tr></table></figure>
<ul>
<li>这里写得可能有点麻烦，可以根据<code>RequestMapping</code>的方法来精简注解。比如</li>
</ul>
<p><img src="https://i.loli.net/2021/04/15/VACln6rje3ONaH1.png" alt="" /></p>
<ul>
<li>
<p>方法级别注解的变体，<strong>post和get方法用得更多</strong>：</p>
<ul>
<li>@GetMapping</li>
<li>@PostMapping</li>
<li>@PutMapping</li>
<li>@DeleteMapping</li>
<li>@PatchMapping</li>
</ul>
</li>
<li>
<p>在地址栏相同的情况下，可以通过设置不同的方法注解的方式实现相同地址调用Controller中不同的方法实现不同操作。</p>
</li>
</ul>
<h2 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h2>
<ol>
<li>简洁</li>
<li>高效</li>
<li>不暴露变量，更加安全</li>
</ol>
]]></content>
      <tags>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC 接受返回参数</title>
    <url>/2021/04/15/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringMVC/SpringMVC%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h2 id="接受参数"><a class="markdownIt-Anchor" href="#接受参数"></a> 接受参数</h2>
<h3 id="处理提交参数"><a class="markdownIt-Anchor" href="#处理提交参数"></a> 处理提交参数</h3>
<ol>
<li>提交的域名中的参数和处理方法的参数一致，则直接调用参数即可</li>
<li>提交的域名中的参数和处理方法的参数不一致，可以使用<code>@RequestParam</code>绑定参数</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RequestMapping(&quot;&#x2F;hello&quot;)</span><br><span class="line">public String hello(@RequestParam(&quot;username&quot;) String name)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当输入 <code>http://localhost:8080/hello?username=yiiili</code>时，在方法中可以使用<code>name</code>参数进行处理。</p>
<h3 id="前端提交一个对象"><a class="markdownIt-Anchor" href="#前端提交一个对象"></a> 前端提交一个对象</h3>
<ol>
<li>传入参数为实体类的实例变量，会自动创建一个对应参数的实例传入，方法接直接接受到这个实体类。<br />
<code>http://localhost:8080/myWeb/test?id=123&amp;name=huahua&amp;age=20</code></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@GetMapping(&quot;&#x2F;test&quot;)</span><br><span class="line">public String test(User user, Model m)&#123;</span><br><span class="line">    m.addAttribute(&quot;usr&quot;, user.toString());</span><br><span class="line">    return &quot;userinfo&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>传递的是一个User对象，需要匹配User对象中的字段名。如果参数名称一致则有效，否则匹配不到。</li>
</ol>
<ul>
<li>例子：如果实例类定义的参数名称为id，但是url中定义的参数名称为userid，则匹配不到。<br />
<code>http://localhost:8080/myWeb/test?userid=123&amp;name=huahua&amp;age=10</code>，但是还是会创建并且传入，只是对应的参数值设置成默认值。</li>
</ul>
<h2 id="返回数据"><a class="markdownIt-Anchor" href="#返回数据"></a> 返回数据</h2>
<ul>
<li>ModelAndView</li>
<li>Model：一个接口，只有寥寥几个方法，仅仅适用于存储数据。</li>
<li>ModelMap：继承了<code>LinkedHashMap</code>，除了自身的方法，同样继承了LinkedMap的方法。</li>
</ul>
<h2 id="乱码问题"><a class="markdownIt-Anchor" href="#乱码问题"></a> 乱码问题</h2>
<p>SpringMVC给我们提供了一个过滤器 , 可以在web.xml中配置 .</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;filter&gt;</span><br><span class="line">   &lt;filter-name&gt;encoding&lt;&#x2F;filter-name&gt;</span><br><span class="line">   &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;&#x2F;filter-class&gt;</span><br><span class="line">   &lt;init-param&gt;</span><br><span class="line">       &lt;param-name&gt;encoding&lt;&#x2F;param-name&gt;</span><br><span class="line">       &lt;param-value&gt;utf-8&lt;&#x2F;param-value&gt;</span><br><span class="line">   &lt;&#x2F;init-param&gt;</span><br><span class="line">&lt;&#x2F;filter&gt;</span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">   &lt;filter-name&gt;encoding&lt;&#x2F;filter-name&gt;</span><br><span class="line">   &lt;url-pattern&gt;&#x2F;*&lt;&#x2F;url-pattern&gt;</span><br><span class="line">&lt;&#x2F;filter-mapping&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC整合SSM</title>
    <url>/2021/04/15/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringMVC/SpringMVC%E6%95%B4%E5%90%88SSM/</url>
    <content><![CDATA[<h2 id="需求分析"><a class="markdownIt-Anchor" href="#需求分析"></a> 需求分析</h2>
]]></content>
      <tags>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC 简介</title>
    <url>/2021/04/13/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringMVC/springMVC%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3>
<p>传统方式，用户的操作需要很多不同的servlet去相应。SpringMvc在用户和servlet之间提供了新的一层，提供调度，处理请求，适配URL和跳转页面等功能。<br />
Spring的Web框架围绕DispatcherServlet来设计。DispatcherServlet的作用是将请求分发到不同的Controller。<br />
<img src="https://i.loli.net/2021/04/13/4G239emdIOwokpb.jpg" alt="" /></p>
<ul>
<li>前端控制器：Dispatcher Servlet<br />
原先所有的请求都需要经过<code>web.xml</code>文件，我们配置了一个<code>springmvc-servlet</code>组件拦截并且跳转到<code>springmvc-servlet.xml</code>文件处理这些请求。根据<code>springmvc-servlet</code>的设定，跳转到对应的<code>controller</code>处理并且返回相应的静态资源。</li>
</ul>
<h3 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h3>
<p><img src="https://i.loli.net/2021/04/13/JYBFiKPNLyMkpxS.jpg" alt="" /></p>
<ol>
<li>xml文件中注册Dispatcher-servlet表示前端控制器，使整个SpringMvc的控制中心，拦截用户发送的前端请求。<br />
这里注册Dispatcher-servlet时，会使用<code>&lt;param-value&gt;</code>标签来设置其配置文件的地址。<br />
请求url为<code>服务器域名/服务器上的web站点/控制器</code></li>
<li>Handler-Mapping为处理器映射，由DispatcherServlet调用Handler-Mapping在Dispatcher-servlet配置文件中根据url查找handler。。</li>
<li>Handler-Execution表示具体的Handler，主要目的是根据url查找对应的控制器地址。</li>
<li>Handler-Execution会将解析之后的Controller映射返回给Dispatcher-Servlet</li>
</ol>
<hr />
<ol start="5">
<li>Handler-Adapter表示处理器适配器，会按照特定的规则去执行Handler</li>
<li>Handler指定具体的Controller执行</li>
<li>Controller将具体的执行信息返回给Handler-Adapter，比如ModelAndView。<br />
在Controller中可以与服务层进行数据交互，比如得到数据库的信息。</li>
<li>Handler-Adapter将视图逻辑名或者模型传递给Dispatcher-Servlet</li>
</ol>
<hr />
<ol start="9">
<li>Dispatcher-Servlet调用视图解析器(ViewResolver)来解析Handler-Adapter传递的逻辑视图名</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean class&#x3D;&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot; id&#x3D;&quot;internalResourceViewResolver&quot;&gt;</span><br><span class="line">    &lt;!--前缀--&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;prefix&quot; value&#x3D;&quot;&#x2F;WEB-INF&#x2F;jsp&#x2F;&quot;&#x2F;&gt;</span><br><span class="line">    &lt;!--后缀--&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;suffix&quot; value&#x3D;&quot;.jsp&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br></pre></td></tr></table></figure>
<pre><code>视图解析器的功能：
1. 获取了数据
2. 解析视图名称
3. 拼接视图名称
4. 根据拼接值找到对应的视图
</code></pre>
<ol start="10">
<li>视图解析器将解析的逻辑视图名称传递给Dispatcher-Servlet</li>
<li>Dispatcher-Servlet根据视图解析器解析出来的视图结果，调用具体的视图</li>
<li>将视图呈现给用户</li>
</ol>
<h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3>
<ol>
<li>web.xml文件中设置Dispatcher-Servlet：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&#x2F;web-app_4_0.xsd&quot;</span><br><span class="line">         version&#x3D;&quot;4.0&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!--注册DispatcherServlet--&gt;</span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;springmvc&lt;&#x2F;servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;&#x2F;servlet-class&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;!--关联配置文件--&gt;</span><br><span class="line">            &lt;param-name&gt;contextConfigLocation&lt;&#x2F;param-name&gt;</span><br><span class="line">            &lt;param-value&gt;classpath:springmvc-servlet.xml&lt;&#x2F;param-value&gt;</span><br><span class="line">        &lt;&#x2F;init-param&gt;</span><br><span class="line">        &lt;load-on-startup&gt;1&lt;&#x2F;load-on-startup&gt;</span><br><span class="line">    &lt;&#x2F;servlet&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;springmvc&lt;&#x2F;servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;&#x2F;&lt;&#x2F;url-pattern&gt;</span><br><span class="line">    &lt;&#x2F;servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">        原先所有的请求都需要经过web.xml文件，我们配置了上面的配置</span><br><span class="line">        配置了一个springmvc-servlet.xml文件拦截这些请求</span><br><span class="line">        看到springmvc-servlet.xml文件</span><br><span class="line">    --&gt;</span><br><span class="line">&lt;&#x2F;web-app&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>springmvc-servlet中</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--url处理器--&gt;</span><br><span class="line">&lt;bean class&#x3D;&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;&#x2F;&gt;</span><br><span class="line">&lt;!--url适配器--&gt;</span><br><span class="line">&lt;bean class&#x3D;&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;bean class&#x3D;&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot; id&#x3D;&quot;internalResourceViewResolver&quot;&gt;</span><br><span class="line">    &lt;!--前缀--&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;prefix&quot; value&#x3D;&quot;&#x2F;WEB-INF&#x2F;jsp&#x2F;&quot;&#x2F;&gt;</span><br><span class="line">    &lt;!--后缀--&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;suffix&quot; value&#x3D;&quot;.jsp&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--从spring中跳转到controller，而不是web.xml--&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;&#x2F;hello&quot; class&#x3D;&quot;com.lyl.controller.HelloController&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>
<pre><code>- 接收到url中的hello，然后转到Controller处理。
- 前后缀用于设置跳转页面。
</code></pre>
<ol start="3">
<li>Controller中</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;注意：这里我们先导入Controller接口</span><br><span class="line">public class HelloController implements Controller &#123;</span><br><span class="line"></span><br><span class="line">	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception &#123;</span><br><span class="line">		&#x2F;&#x2F;ModelAndView 模型和视图</span><br><span class="line">		ModelAndView mv &#x3D; new ModelAndView();</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;封装对象，放在ModelAndView中。Model</span><br><span class="line">		&#x2F;&#x2F;代替session或者request</span><br><span class="line">		&#x2F;&#x2F;模型存储数据</span><br><span class="line">		mv.addObject(&quot;msg&quot;,&quot;HelloSpringMVC!&quot;);</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;封装要跳转的视图，放在ModelAndView中</span><br><span class="line">		&#x2F;&#x2F;直接设置视图的名称，会经过xml文件中的视图解析器，拼接上对应的前后缀直接跳转</span><br><span class="line">		mv.setViewName(&quot;hello&quot;); &#x2F;&#x2F;: &#x2F;WEB-INF&#x2F;jsp&#x2F;hello.jsp</span><br><span class="line">		return mv;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的hello会和springmvc-servlet设置的前后缀连接然后跳转到指定的静态资源文件。</p>
]]></content>
      <tags>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC注解开发</title>
    <url>/2021/04/14/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/SpringMVC/SpringMVC%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91%E5%92%8C%E5%85%B6%E4%BB%96%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="spring注解开发"><a class="markdownIt-Anchor" href="#spring注解开发"></a> Spring注解开发</h2>
<ul>
<li>使用SpringMVC必须配置的三大件：处理器映射器，处理器适配器和视图解析器。</li>
<li>而SpringMVC在使用注解开发时，无需在Springmvc-servlet.xml文件中设置处理器映射器<code>BeanNameUrlHandlerMapping</code>和处理器适配器<code>SimpleControllerHandlerAdapter</code>.</li>
<li>我们使用@Controller来标记controller文件，并且使用<code>@RequestMapping</code>来完成映射关系。</li>
</ul>
<h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现：</h3>
<ol>
<li>springmvc-servlet.xml</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;</span><br><span class="line">       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">       xmlns:context&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&quot;</span><br><span class="line">       xmlns:mvc&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc&quot;</span><br><span class="line">       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans</span><br><span class="line">       http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd</span><br><span class="line">       http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context</span><br><span class="line">       https:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-context.xsd</span><br><span class="line">       http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc</span><br><span class="line">       https:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc&#x2F;spring-mvc.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 --&gt;</span><br><span class="line">    &lt;context:component-scan base-package&#x3D;&quot;com.lyl.controller&quot;&#x2F;&gt;</span><br><span class="line">    &lt;!-- 让Spring MVC不处理静态资源 --&gt;</span><br><span class="line">    &lt;mvc:default-servlet-handler&#x2F;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    支持mvc注解驱动</span><br><span class="line">        在spring中一般采用@RequestMapping注解来完成映射关系</span><br><span class="line">        要想使@RequestMapping注解生效</span><br><span class="line">        必须向上下文中注册DefaultAnnotationHandlerMapping</span><br><span class="line">        和一个AnnotationMethodHandlerAdapter实例</span><br><span class="line">        这两个实例分别在类级别和方法级别处理。</span><br><span class="line">        而annotation-driven配置帮助我们自动完成上述两个实例的注入。</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;mvc:annotation-driven &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 视图解析器 --&gt;</span><br><span class="line">    &lt;bean class&#x3D;&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span><br><span class="line">          id&#x3D;&quot;internalResourceViewResolver&quot;&gt;</span><br><span class="line">        &lt;!-- 前缀 --&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;prefix&quot; value&#x3D;&quot;&#x2F;WEB-INF&#x2F;jsp&#x2F;&quot; &#x2F;&gt;</span><br><span class="line">        &lt;!-- 后缀 --&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;suffix&quot; value&#x3D;&quot;.jsp&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;beans&gt;</span><br></pre></td></tr></table></figure>
<p><code>&lt;mvc:default-servlet-handler/&gt;</code>会在Spring MVC上下文中定义一个<code>DefaultServletHttpRequestHandler</code>，像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。</p>
<ol start="2">
<li>Controller</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Controller</span><br><span class="line">public class HelloController &#123;</span><br><span class="line"></span><br><span class="line">	@RequestMapping(&quot;&#x2F;hello&quot;)</span><br><span class="line">	public String hello(Model moudle)&#123;</span><br><span class="line">		&#x2F;&#x2F; 封装数据</span><br><span class="line">		moudle.addAttribute(&quot;msg&quot;,&quot;Hello SpringMVC&quot;);</span><br><span class="line"></span><br><span class="line">		return &quot;hello&quot;;  &#x2F;&#x2F;被视图解析器处理</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis 万能Map和ResultMap 简介</title>
    <url>/2021/03/25/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mybatis/Mybatis%E4%B8%87%E8%83%BDMap%E5%92%8C%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h2 id="利用map进行操作"><a class="markdownIt-Anchor" href="#利用map进行操作"></a> 利用Map进行操作</h2>
<ul>
<li>情况：当实体类有许多字段时，我们应当考虑map。</li>
<li>描述：可以随意制造参数，增，改操作无需新建一个user实例。 有时实体类参数过多，则改操作很方便。相当于一个映射操作，直接传入key，得到value。</li>
<li>代码实现：
<ul>
<li>parameterType = ‘map’</li>
<li><code>#&#123;&#125;</code> 中直接加入key值</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 万能Map</span><br><span class="line">int addUserByMap(Map&lt;String, Object&gt; map);</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;insert id&#x3D;&quot;addUserByMap&quot; parameterType&#x3D;&quot;map&quot;&gt;</span><br><span class="line">    insert into mybatis.user (id, name, pwd)</span><br><span class="line">    values ( #&#123;userid&#125;, #&#123;name&#125;, #&#123;pwd&#125;)</span><br><span class="line">&lt;&#x2F;insert&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; Test中只需要新建map，创建键值对然后当作参数调用即可</span><br><span class="line">@Test</span><br><span class="line">public void addUserByMap()&#123;</span><br><span class="line">    SqlSession sqlSession &#x3D; MybatisUtil.getSqlSession();</span><br><span class="line">    UserMapper userMapper &#x3D; sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 新建map</span><br><span class="line">    HashMap&lt;String, Object&gt; userMap &#x3D; new HashMap&lt;String, Object&gt;();</span><br><span class="line">    userMap.put(&quot;userid&quot;,&quot;5&quot;);</span><br><span class="line">    userMap.put(&quot;name&quot;,&quot;ll&quot;);</span><br><span class="line">    userMap.put(&quot;pwd&quot;,&quot;1234&quot;);</span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">        int result &#x3D; userMapper.addUserByMap(userMap);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        sqlSession.rollback();</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更新时，更新map中的键值对，xml文件中的键值对即可。</p>
<ul>
<li>多个参数调用：<br />
Map传递参数，直接在sql命令中取出key即可<br />
对象传递参数，直接在sql取出对象即可</li>
</ul>
<h2 id="模糊查询"><a class="markdownIt-Anchor" href="#模糊查询"></a> 模糊查询</h2>
<p>java代码执行时，传递通配符<code>%</code>时<br />
select * from mybatis.user where name like “%”#{value}&quot;%&quot;<br />
这样会避免<strong>sql注入</strong>的问题</p>
<h2 id="resultmap-解决属性名和字段名称不一致的问题"><a class="markdownIt-Anchor" href="#resultmap-解决属性名和字段名称不一致的问题"></a> ResultMap: 解决属性名和字段名称不一致的问题</h2>
<ul>
<li>问题描述：属性名称和字段名称不一致，即实体类的属性名和数据库表中的属性名称不一致。</li>
<li>测试问题：答案会导致该查询结果值为null</li>
<li>解决方案：
<ol>
<li>使用as起别名 <code>select pwd as password from user</code></li>
<li>使用resultMap</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--结果集映射--&gt;</span><br><span class="line">&lt;resultMap id&#x3D;&quot;userMap&quot; type&#x3D;&quot;user&quot;&gt;</span><br><span class="line">    &lt;!--column 数据库中的字段--&gt;</span><br><span class="line">    &lt;!--property ： 实体类中的属性--&gt;</span><br><span class="line">    &lt;result column&#x3D;&quot;pwd&quot; property&#x3D;&quot;password&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;resultMap&gt;</span><br><span class="line"></span><br><span class="line">&lt;select id&#x3D;&quot;getUserList&quot; resultMap&#x3D;&quot;userMap&quot;&gt;</span><br><span class="line">    select * from mybatis.user</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>
resultMap – 对于简单的语句不需要关心配置结果映射，直接按照实例写sql语句；对于复杂的语句则只需要描述数据库和实例的关系。</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis 使用注解开发</title>
    <url>/2021/04/05/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mybatis/Mybatis%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<p><strong>面向接口编程</strong></p>
<ul>
<li>接口反应了一个设计人员对系统的<strong>抽象理解</strong>。</li>
<li>接口有两类：
<ol>
<li>对一个个体的抽象，可以应用为一个抽象体(abstract class)。</li>
<li>对一个个体某一方面的抽象，即形成一个抽象面(interface)。</li>
</ol>
</li>
</ul>
<p><strong>注解开发的本质</strong><br />
直接在接口上实现，使用反射机制实现，底层为动态代理。</p>
<h3 id="param注释"><a class="markdownIt-Anchor" href="#param注释"></a> @Param()注释</h3>
<ol>
<li>参数为：基本类型或者String类型，需要加上。</li>
<li>引用数据类型不需要加，直接在注解中填入其实例变量。</li>
<li>如果只有一个基本类型则可以忽略，但是还是推荐加上。</li>
<li>在sql中<code>#&#123;&#125;</code>引用的就是我们这里的<code>@Param()</code>设定的属性名称</li>
</ol>
<h3 id="注解增删改查操作"><a class="markdownIt-Anchor" href="#注解增删改查操作"></a> 注解增删改查操作</h3>
<h4 id="查询命令"><a class="markdownIt-Anchor" href="#查询命令"></a> 查询命令</h4>
<h5 id="无参数的操作"><a class="markdownIt-Anchor" href="#无参数的操作"></a> 无参数的操作：</h5>
<ol>
<li>在config文件中配置mapper接口</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;mappers&gt;</span><br><span class="line">    &lt;mapper class&#x3D;&#39;com.lyl.dao.UserMapper&#39; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;mappers&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>在接口中使用注解创建方法</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;使用注解进行开发</span><br><span class="line">@Select(&quot;select * from user&quot;)</span><br><span class="line">List&lt;User&gt; getUserListByCommet();</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>然后使用即可</li>
</ol>
<h5 id="含参数的操作时"><a class="markdownIt-Anchor" href="#含参数的操作时"></a> 含参数的操作时</h5>
<p>需要使用<code>@Param</code>注解，<code>@Param</code>标识的变量对应注解中<code>#&#123;&#125;</code>标识的变量。</p>
<ul>
<li>在接口中：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Select(&quot;select * from user where id &#x3D; #&#123;id1&#125;&quot;)</span><br><span class="line">User getUserByIdByCommet(@Param(&quot;id1&quot;) int id);</span><br></pre></td></tr></table></figure>
<ul>
<li>在接口和实现类中</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User getUserByIdByComment(@Param(&quot;id1&quot;) int id);</span><br><span class="line"></span><br><span class="line">&lt;select id&#x3D;&quot;getUserByIdByComment&quot; resultType&#x3D;&quot;user&quot;&gt;</span><br><span class="line">    select * from mybatis.user where id &#x3D; #&#123;id1&#125;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>
<h4 id="增加插入数据操作"><a class="markdownIt-Anchor" href="#增加插入数据操作"></a> 增加/插入数据操作</h4>
<ul>
<li>参数为实例对象，不需要<code>@Param</code></li>
<li>注意<code>#&#123;&#125;</code>中的内容需要和实体类中的变量名称一致。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Insert(&quot;insert into user(id, name, pwd) values ( #&#123;id&#125;, #&#123;name&#125;, #&#123;password&#125; )&quot;)</span><br><span class="line">int addUserByComment(User user);</span><br></pre></td></tr></table></figure>
<h4 id="修改操作"><a class="markdownIt-Anchor" href="#修改操作"></a> 修改操作：</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Update(&quot;update user set name&#x3D;#&#123;name&#125;, pwd&#x3D;#&#123;password&#125; where id&#x3D;#&#123;id&#125;&quot;)</span><br><span class="line">int updateUserByComment(User user);</span><br></pre></td></tr></table></figure>
<h4 id="删除操作"><a class="markdownIt-Anchor" href="#删除操作"></a> 删除操作：</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Delete( &quot;delete from user where id &#x3D; #&#123;uid&#125;&quot; )</span><br><span class="line">int deleteFromUserByComment(@Param(&quot;uid&quot;) int id);</span><br></pre></td></tr></table></figure>
<h3 id="弊端"><a class="markdownIt-Anchor" href="#弊端"></a> 弊端</h3>
<p>使用注解完成简洁的语句可以方便，但是复杂的语句不建议使用，因为不可以使用resultMap来映射试实例属性。</p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis 分页</title>
    <url>/2021/04/05/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mybatis/Mybatis%E5%88%86%E9%A1%B5/</url>
    <content><![CDATA[<h2 id="limit-分页"><a class="markdownIt-Anchor" href="#limit-分页"></a> Limit 分页</h2>
<p>在mysql数据库命令中，当查询得到的数据量过于庞大时，可以使用limit分页功能。</p>
<ol>
<li><code>select * from [表名称] limit [startIndex, pageSize]</code></li>
<li><code>select * from [表名称] limit [Index]</code> 得到[0, n]的行数</li>
</ol>
<h2 id="在mybatis中使用分页"><a class="markdownIt-Anchor" href="#在mybatis中使用分页"></a> 在Mybatis中使用分页</h2>
<ol>
<li>
<p>首先在Mapper接口中添加对应的抽象方法，参数为map<br />
<code>List&lt;User&gt; getUserByLimit(Map&lt;String, Integer&gt; map);</code></p>
</li>
<li>
<p>然后在其实现类，xml文件中添加对应的语句，注意parametertype设置为map</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--分页查询标签--&gt;</span><br><span class="line">&lt;select id&#x3D;&quot;getUserByLimit&quot; parameterType&#x3D;&quot;map&quot; resultType&#x3D;&quot;user&quot;&gt;</span><br><span class="line">    select * from mybatis.user limit #&#123;startIndex&#125;, #&#123;pageSize&#125;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>在调用该方法时，传入参数map，并且设置该map的键值对与实现类对应。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HashMap&lt;String, Integer&gt; map &#x3D; new HashMap&lt;String, Integer&gt;();</span><br><span class="line">map.put(&quot;startIndex&quot;, 0);</span><br><span class="line">map.put(&quot;pageSize&quot;, 1);</span><br><span class="line">List&lt;User&gt; userList &#x3D;  userMapper.getUserByLimit(map);</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis 动态SQL</title>
    <url>/2021/04/05/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mybatis/Mybatis%E5%8A%A8%E6%80%81SQL/</url>
    <content><![CDATA[<p><strong>问题描述</strong>：在使用JDBC时，常常需要根据条件来拼接sql语句。<br />
在拼接时需要保证<strong>不能忘记添加必须的空格</strong>，而且还要特意注意<strong>删除最后一列的逗号</strong>，这是非常麻烦的。<br />
可以在mybatis中使用动态sql命令来拼接字符串。<br />
动态sql本质还是sql语句，只是可以在sql层面增加一个逻辑代码。<br />
动态sql就是在拼接sql语句，只要保证其正确性，去排列组合就可以了。<br />
建议先写出sql命令，再使用动态拼接。</p>
<ol>
<li><strong>IF标签</strong><code>&lt;if test=&quot;判断语句&quot;&gt; &lt;/if&gt;</code><br />
注意在第二行中的<code>where 1=1</code>，不会妨碍正常的查询，其次方便了下面and条件的拼接。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;select id&#x3D;&quot;&quot; parameterType&#x3D;&quot;map&quot;&gt;</span><br><span class="line">    select * from mybatis.blog where 1&#x3D;1</span><br><span class="line">    &lt;if test&#x3D;&quot; title!&#x3D; null &quot;&gt;</span><br><span class="line">        and title &#x3D; #&#123;title&#125;</span><br><span class="line">    &lt;&#x2F;if&gt;</span><br><span class="line">    &lt;if test&#x3D;&quot; author!&#x3D;null &quot;&gt;</span><br><span class="line">        and author &#x3D; #&#123;author&#125;</span><br><span class="line">    &lt;&#x2F;if&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><strong>where元素</strong>：只会在至少有一个子元素返回sql子句的情况下才插入Where子句。而且如语句的开头为AND或者OR，Where会自动删除这些标签。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;select id&#x3D;&quot;&quot; parameterType&#x3D;&quot;map&quot;&gt;</span><br><span class="line">    select * from mybatis.blog</span><br><span class="line">    &lt;where&gt;</span><br><span class="line">        &lt;if test&#x3D;&quot; title!&#x3D; null &quot;&gt;</span><br><span class="line">            title &#x3D; #&#123;title&#125;</span><br><span class="line">        &lt;&#x2F;if&gt;</span><br><span class="line">        &lt;if test&#x3D;&quot; author!&#x3D;null &quot;&gt;</span><br><span class="line">            and author &#x3D; #&#123;author&#125;</span><br><span class="line">        &lt;&#x2F;if&gt;</span><br><span class="line">    &lt;&#x2F;where&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li><strong>choose，when， otherwise标签</strong>：只会拼接一个when标签下的sql命令，如果都不满足，则会拼接otherwise标签下的sql命令。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;select id&#x3D;&quot;&quot; parameterType&#x3D;&quot;map&quot;&gt;</span><br><span class="line">    select * from mybatis.blog</span><br><span class="line">    &lt;where&gt;</span><br><span class="line">        &lt;choose&gt;</span><br><span class="line">            &lt;when test&#x3D;&quot; title!&#x3D; null &quot;&gt;</span><br><span class="line">                title &#x3D; #&#123;title&#125;</span><br><span class="line">            &lt;&#x2F;when&gt;</span><br><span class="line">            &lt;when test&#x3D;&quot; author!&#x3D;null &quot;&gt;</span><br><span class="line">                and author &#x3D; #&#123;author&#125;</span><br><span class="line">            &lt;&#x2F;when&gt;</span><br><span class="line">            &lt;otherwise&gt;</span><br><span class="line">                and views &#x3D; #&#123;views&#125;</span><br><span class="line">            &lt;&#x2F;otherwise&gt;</span><br><span class="line">        &lt;&#x2F;choose&gt;</span><br><span class="line">    &lt;&#x2F;where&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li><strong>set标签</strong>：会动态前置set关键字，同时删除无关的逗号。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;update id&#x3D;&quot;&quot; parameterType&#x3D;&quot;map&quot;&gt;</span><br><span class="line">    update mybatis.blog</span><br><span class="line">    &lt;set&gt;</span><br><span class="line">        &lt;if test&#x3D;&quot; title!&#x3D; null &quot;&gt;</span><br><span class="line">            title &#x3D; #&#123;title&#125;,</span><br><span class="line">        &lt;&#x2F;if&gt;</span><br><span class="line">        &lt;if test&#x3D;&quot; author!&#x3D;null &quot;&gt;</span><br><span class="line">            and author &#x3D; #&#123;author&#125;</span><br><span class="line">        &lt;&#x2F;if&gt;</span><br><span class="line">    &lt;&#x2F;set&gt;</span><br><span class="line">    where id &#x3D; #&#123;id&#125;</span><br><span class="line">&lt;&#x2F;update&gt;</span><br></pre></td></tr></table></figure>
<ol start="5">
<li><strong>复用</strong></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--设置复用代码块--&gt;</span><br><span class="line">&lt;sql id&#x3D;&quot;codeBlock1&quot;&gt;</span><br><span class="line">    &lt;if test&#x3D;&quot; title!&#x3D; null &quot;&gt;</span><br><span class="line">        title &#x3D; #&#123;title&#125;,</span><br><span class="line">    &lt;&#x2F;if&gt;</span><br><span class="line">    &lt;if test&#x3D;&quot; author!&#x3D;null &quot;&gt;</span><br><span class="line">        and author &#x3D; #&#123;author&#125;</span><br><span class="line">    &lt;&#x2F;if&gt;</span><br><span class="line">&lt;&#x2F;sql&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 使用include标签复用 --&gt;</span><br><span class="line">&lt;select id&#x3D;&quot;&quot; parameterType&#x3D;&quot;map&quot;&gt;</span><br><span class="line">    select * from mybatis.blog</span><br><span class="line">    &lt;where&gt;</span><br><span class="line">        &lt;include refid&#x3D;&quot;codeBlock1&quot;&gt;&lt;&#x2F;include&gt;</span><br><span class="line">    &lt;&#x2F;where&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>
<ol start="6">
<li><strong>foreach遍历</strong><br />
在sql语句中有时需要很多的or来表示多个情况：<code>select * from user where id=1 or id=2 or id=3</code><br />
在这时可以传入一个list集合，使用<code>foreach</code>标签对其进行遍历。通常是在构建IN条件语句的时候使用，</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 查询第1，2，3号记录的博客 --&gt;</span><br><span class="line">&lt;!-- 现在传递一个万能的map，该map中包含一个名为ids的list，里面存放id --&gt;</span><br><span class="line">&lt;select id&#x3D;&quot;&quot; parameterType&#x3D;&quot;map&quot; resultType&#x3D;&quot;blog&quot;&gt;</span><br><span class="line">    select * from blog</span><br><span class="line">    &lt;where&gt;</span><br><span class="line">        &lt;foreach collection&#x3D;&quot;ids&quot; item&#x3D;&quot;id&quot; open&#x3D;&quot;and(&quot; close&#x3D;&quot;)&quot; separator&#x3D;&quot;or&quot;&gt;</span><br><span class="line">            id &#x3D; #&#123;id&#125;</span><br><span class="line">        &lt;&#x2F;foreach&gt;</span><br><span class="line">    &lt;&#x2F;where&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>
<p>在使用中：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HashMap map &#x3D; new HashMap();</span><br><span class="line">ArrayList&lt;Integer&gt; ids &#x3D;  new ArrayList&lt;Integer&gt;();</span><br><span class="line">&#x2F;&#x2F; 增加集合中的id</span><br><span class="line">ids.add(1);</span><br><span class="line">map.put(&quot;ids&quot;, ids);</span><br><span class="line">&#x2F;&#x2F; 调用并且得到返回值</span><br><span class="line">List&lt;Blog&gt; blogs &#x3D; mapper.query.....</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>后端</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis 基本操作增删改查</title>
    <url>/2021/03/25/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mybatis/Mybatis%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</url>
    <content><![CDATA[<h2 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h2>
<h3 id="查询操作"><a class="markdownIt-Anchor" href="#查询操作"></a> 查询操作</h3>
<ol>
<li>在dao中的Mapper映射接口中，补充相应的抽象方法。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; File: src&#x2F;main&#x2F;java&#x2F;com&#x2F;lyl&#x2F;dao&#x2F;UserMapper.java</span><br><span class="line"></span><br><span class="line">public interface UserMapper &#123;</span><br><span class="line">	&#x2F;&#x2F; 根据id查询用户</span><br><span class="line">	User getUserById(int id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>补充<code>UserMapper.xml</code>中相应的映射</li>
</ol>
<ul>
<li><code>parameterType</code>表示接口方法中传入的参数类型</li>
<li>需要使用<code>#&#123;&#125;</code>来表示方法传入的参数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;select id&#x3D;&quot;getUserById&quot; parameterType&#x3D;&quot;int&quot; resultType&#x3D;&quot;com.lyl.pojo.User&quot;&gt;</span><br><span class="line">    select * from mybatis.user where id &#x3D; #&#123;id&#125;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>在Test文件中补充方法<br />
userMapper就是对象，可以直接调用对应的方法</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void getUserById()&#123;</span><br><span class="line">    SqlSession sqlSession &#x3D; MybatisUtil.getSqlSession();</span><br><span class="line"></span><br><span class="line">    UserMapper userMapper &#x3D; sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    User user &#x3D; userMapper.getUserById(1);</span><br><span class="line">    System.out.println(user);</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="插入操作"><a class="markdownIt-Anchor" href="#插入操作"></a> 插入操作</h3>
<ol>
<li>File: src/main/java/com/lyl/dao/UserMapper.java</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 插入用户，参数为实体类</span><br><span class="line">int addUser(User user);</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>src/main/resources/UserMapper.xml <strong>注意：使用insert标签，无需设置resultType，实体类对象中的属性可以直接获取。</strong></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;insert id&#x3D;&quot;addUser&quot; parameterType&#x3D;&quot;com.lyl.pojo.User&quot;&gt;</span><br><span class="line">    insert into mybatis.user(id, name, pwd)</span><br><span class="line">    values ( #&#123;id&#125;, #&#123;name&#125;, #&#123;pwd&#125; );</span><br><span class="line">&lt;&#x2F;insert&gt;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>src/test/java/com/lyl/dao/UserDaoTest.java</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void addUser()&#123;</span><br><span class="line">    SqlSession sqlSession &#x3D; MybatisUtil.getSqlSession();</span><br><span class="line"></span><br><span class="line">    UserMapper userMapper &#x3D; sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    try &#123;</span><br><span class="line">        int result &#x3D; userMapper.addUser(new User(3, &quot;haha&quot;, &quot;123&quot;));</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        sqlSession.rollback();</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="注意事务"><a class="markdownIt-Anchor" href="#注意事务"></a> 注意：事务</h4>
<p>虽然结果成功，但是数据库不会更新。<br />
因为增删改需要<strong>提交事务</strong>。</p>
<ul>
<li>关于事务，jdbc是自动开启提交(AutoCommit)的，需要设置<code>con.setAutoCommit(flase);</code>来关闭自动提交以开始事务，然后通过<code>con.commit();</code>或<code>con.rollback();</code>，提交或者回滚。</li>
<li>但是MyBatis是关闭自动提交，即默认开启事务的，所以需要在操作结束后，提交<code>SqlSession.commit();</code>或者回滚事务<code>SqlSession.rollback();</code>。</li>
</ul>
<h4 id="crud"><a class="markdownIt-Anchor" href="#crud"></a> CRUD</h4>
<p>我们可以在创建工具类时自动提交事务。<br />
在util文件中的openSession接口里，存在<code>SqlSession openSession(boolean var1)</code>方法。<br />
<code>DefaultSqlSessionFactory.class</code>为其接口实现类，里面的<code>public SqlSession openSession(boolean autoCommit)</code>方法设置了是否自动提交。默认为false。<br />
所以可以在util文件中设置openSession的参数为true，来实现自动提交。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static SqlSession getSqlSession()&#123;</span><br><span class="line">    return sqlSessionFactory.openSession(true);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="修改用户"><a class="markdownIt-Anchor" href="#修改用户"></a> 修改用户</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;update id&#x3D;&quot;updateUser&quot; parameterType&#x3D;&quot;com.lyl.pojo.User&quot;&gt;</span><br><span class="line">    update mybatis.user</span><br><span class="line">    set name &#x3D; #&#123;name&#125;, pwd&#x3D;#&#123;pwd&#125;</span><br><span class="line">    where id &#x3D; #&#123;id&#125;;</span><br><span class="line">&lt;&#x2F;update&gt;</span><br></pre></td></tr></table></figure>
<h3 id="删除员工"><a class="markdownIt-Anchor" href="#删除员工"></a> 删除员工</h3>
<delete id="deleteUser" parameterType="int">
    delete from mybatis.user where id = #{id}
</delete>
<h2 id="常见错误"><a class="markdownIt-Anchor" href="#常见错误"></a> 常见错误</h2>
<ol>
<li>Mapper的namespace必须绑定正确的对应接口路径。</li>
<li>Mapper.xml文件存在乱码问题</li>
<li><code>org.apache.ibatis.binding.BindingException: Type interface com.lyl.dao.UserMapper is not known to the MapperRegistry.</code><br />
mapper标签中的namespace一定要绑定正确 <code>&lt;mapper namespace=&quot;com.lyl.dao.UserMapper&quot;&gt;</code>，不用加java后缀</li>
</ol>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis 日志工厂</title>
    <url>/2021/04/04/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mybatis/Mybatis%E6%97%A5%E5%BF%97%E5%B7%A5%E5%8E%82/</url>
    <content><![CDATA[<h3 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h3>
<p>如果一个数据库操作发生了异常，我们在排查时，可以直接从日志检查出错误结果。</p>
<h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3>
<ul>
<li>logImpl：指定MyBatis所用日志的具体实现，未指定时会自动排查。</li>
<li>设置日志实现：在<code>mybatis-config.xml</code>文件中设置标签<code>settings</code>中设定。<br />
注意，<code>setting</code>标签需要放在<code>properties</code>标签和<code>typeAliases</code>标签中间。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--设置日志工厂--&gt;</span><br><span class="line">&lt;settings&gt;</span><br><span class="line">    &lt;setting name&#x3D;&quot;logImpl&quot; value&#x3D;&quot;STDOUT_LOGGING&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;settings&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>输出：日志描述了运行的详细步骤</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 592617454.</span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23529fee]</span><br><span class="line">&#x3D;&#x3D;&gt;  Preparing: select * from mybatis.user </span><br><span class="line">&#x3D;&#x3D;&gt; Parameters: </span><br><span class="line">&lt;&#x3D;&#x3D;    Columns: id, name, pwd</span><br><span class="line">&lt;&#x3D;&#x3D;        Row: 1, lyl, 123</span><br><span class="line">&lt;&#x3D;&#x3D;        Row: 2, qiangiang, 23</span><br><span class="line">&lt;&#x3D;&#x3D;        Row: 5, ll, 1234</span><br><span class="line">&lt;&#x3D;&#x3D;        Row: 90, gaha, 123</span><br><span class="line">&lt;&#x3D;&#x3D;      Total: 4</span><br></pre></td></tr></table></figure>
<h3 id="工厂类型"><a class="markdownIt-Anchor" href="#工厂类型"></a> 工厂类型</h3>
<ul>
<li>STDOUT_LOGGING</li>
<li>Log4j
<ul>
<li>特点
<ol>
<li>可以控制每一条日志的输出格式</li>
<li>通过定义每一条日志信息的级别，来更加细地控制日志的生成过程</li>
<li>通过一个配置文件来灵活地进行配置，不需要修改应用的代码</li>
</ol>
</li>
<li>步骤
<ol>
<li>在<code>pom.xml</code>包中导入log4j依赖</li>
<li>在<code>resource</code>文件下新建<code>log4j.properties</code>文件</li>
<li>在<code>pom.xml</code>文件下配置setting</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line">&lt;setting name&#x3D;&quot;logImpl&quot; value&#x3D;&quot;LOG4J&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;settings&gt;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>测试运行，可以reload下maven</li>
<li>在需要使用的类中导入包<code>import org.apache.log4j.Logger;</code></li>
<li>日志对象设置为当前类的class<code>static Logger logger = Logger.getLogger(UserDaoTest.class);</code></li>
<li>设置测试级别</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">logger.info(&quot;info: 进入log4j&quot;);</span><br><span class="line">logger.debug(&quot;debug: 进入log4j&quot;);</span><br><span class="line">logger.error(&quot;error: 进入log4j&quot;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis框架介绍</title>
    <url>/2021/03/22/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mybatis/Mybatis%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<p>最重要的就是官方文档：<code>https://mybatis.org/mybatis-3/zh/getting-started.html</code></p>
<h3 id="框架"><a class="markdownIt-Anchor" href="#框架"></a> 框架</h3>
<p>好处：封装了很多细节，使开发者使用极简的方式实现功能，提高效率。</p>
<h3 id="三层框架"><a class="markdownIt-Anchor" href="#三层框架"></a> 三层框架</h3>
<ul>
<li>表现层：展示数据</li>
<li>业务层：处理业务需求</li>
<li>持久层：和数据库进行交互</li>
</ul>
<h4 id="持久层技术解决"><a class="markdownIt-Anchor" href="#持久层技术解决"></a> 持久层技术解决</h4>
<ul>
<li>
<p><strong>持久化</strong>：数据持久化，就是将程序的数据在持状态和瞬时状态转化的过程。</p>
<ul>
<li>瞬时状态：断电即失，内存。</li>
<li>持久状态：本地文档，数据库jdbc，io文件持久化。</li>
</ul>
</li>
<li>
<p><strong>持久层</strong>：持久层就是完成持久化工作的代码块。</p>
</li>
</ul>
<h3 id="mybatis框架概述"><a class="markdownIt-Anchor" href="#mybatis框架概述"></a> MyBatis框架概述</h3>
<ul>
<li>是一个持久层框架</li>
<li>封装了JDBC，使开发者只需要关注SQL语句本身</li>
<li>通过xml或注解的方式将要执行的statement封装起来</li>
<li>使用ORM思想实现了结果集的封装</li>
<li>解除了sql与程序代码的耦合，提高DAO层，将业务和数据访问分离开。</li>
</ul>
<h4 id="ormobject-relation-mapping-对象关系映射"><a class="markdownIt-Anchor" href="#ormobject-relation-mapping-对象关系映射"></a> ORM：Object Relation Mapping 对象关系映射</h4>
<p>简单来说，就是把数据库表和实体类的属性对应起来，通过操作实体类来操作数据库。</p>
<h2 id="idea创建"><a class="markdownIt-Anchor" href="#idea创建"></a> idea创建</h2>
<ol>
<li>创建maven默认无依赖的父项目之后，删除src文件夹。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.5.2&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;junit&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;junit&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;4.13&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 连接mysql的jar包</span><br><span class="line">     &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;8.0.15&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>新建子项目，同样maven默认无依赖，注意<strong>父项目需要设置</strong><br />
在<code>src/main/resources</code>下创建m<code>ybatis-config.xml</code>文件，粘贴官方文档的依赖。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">  PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Config 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">  &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-config.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line"></span><br><span class="line">  &lt;environments default&#x3D;&quot;development&quot;&gt;</span><br><span class="line">    &lt;environment id&#x3D;&quot;development&quot;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;transactionManager type&#x3D;&quot;JDBC&quot;&#x2F;&gt;</span><br><span class="line">      &lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;com.mysql.cj.jdbc.Driver&quot;&#x2F;&gt;</span><br><span class="line">        &lt;!--右边连接数据库 Data Source&#x2F;MySql，查看具体信息，然后在后面配置信息--&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatis?useSSL&#x3D;true&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8&quot;&#x2F;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;root&quot;&#x2F;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;mysql123&quot;&#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;dataSource&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;environment&gt;</span><br><span class="line">  &lt;&#x2F;environments&gt;</span><br><span class="line"></span><br><span class="line">  &lt;mappers&gt;</span><br><span class="line">    &lt;mapper resource&#x3D;&quot;org&#x2F;mybatis&#x2F;example&#x2F;BlogMapper.xml&quot;&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;mappers&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>在子模块创建功能工具类<br />
参照官方文档，在<code>java</code>文件夹下创建<code>util</code>文件夹创建<code>MybatisUtil</code>工具类。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;sqlSessionFactory 工厂模式</span><br><span class="line">public class MybatisUtil &#123;</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; 提升作用域</span><br><span class="line">	private static SqlSessionFactory sqlSessionFactory ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; 配置文件</span><br><span class="line">	&#x2F;&#x2F; 第一步：得到SqlSessionFactory对象</span><br><span class="line">	static &#123;</span><br><span class="line">		InputStream inputStream &#x3D; null;</span><br><span class="line">		try &#123;</span><br><span class="line">			String resource &#x3D; &quot;org&#x2F;mybatis&#x2F;example&#x2F;mybatis-config.xml&quot;;</span><br><span class="line">			inputStream &#x3D; Resources.getResourceAsStream(resource);</span><br><span class="line">			sqlSessionFactory &#x3D; new SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">		&#125; catch (IOException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; 第二步</span><br><span class="line">	&#x2F;&#x2F; 既然有了 SqlSessionFactory，顾名思义，我们可以从中获得 SqlSession 的实例。</span><br><span class="line">	&#x2F;&#x2F; SqlSession 提供了在数据库执行 SQL 命令所需的所有方法。你可以通过 SqlSession 实例来直接执行已映射的 SQL 语句。</span><br><span class="line">	public static SqlSession getSqlSession()&#123;</span><br><span class="line">		return sqlSessionFactory.openSession();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>然后可以编写代码：创建实体类</li>
<li>以前需要dao接口来实现JDBC，但是现在MyBatis提供的所有特性都可以利用基于 XML 的映射语言来实现。所以根据官方注解，新建一个<code>UserMapper.xml</code>文件。<br />
接口实现类，由原来的UerDao接口转变为一个Mapper配置文件。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 命名空间会绑定一个对象的Dao&#x2F;Mapper接口 --&gt;</span><br><span class="line">&lt;mapper namespace&#x3D;&quot;com.lyl.dao.UserDaoInterface&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--查询语句， id对应方法名--&gt;</span><br><span class="line">    &lt;!--resultType设置需要 全限定名，写范型--&gt;</span><br><span class="line">    &lt;select id&#x3D;&quot;getUSerList&quot; resultType&#x3D;&quot;com.lyl.pojo.User&quot;&gt;</span><br><span class="line">        select * from mybatis.user</span><br><span class="line">    &lt;&#x2F;select&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;mapper&gt;</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>然后添加测试文件：<code>com/lyl/dao/UserDaoTest.java</code>。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class UserDaoTest &#123;</span><br><span class="line">	@Test</span><br><span class="line">	public void test()&#123;</span><br><span class="line">		&#x2F;&#x2F; 得到SqlSession</span><br><span class="line">		SqlSession sqlSession &#x3D; MybatisUtil.getSqlSession();</span><br><span class="line">		&#x2F;&#x2F; 执行SQL</span><br><span class="line">		&#x2F;&#x2F; 获取Mapper</span><br><span class="line">		UserMapper userMapper &#x3D;  sqlSession.getMapper(UserMapper.class);</span><br><span class="line">		List&lt;User&gt; userList &#x3D;  userMapper.getUserList();</span><br><span class="line"></span><br><span class="line">		for(User user:userList)&#123;</span><br><span class="line">			System.out.println(user);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;	关闭SqlSession</span><br><span class="line">		sqlSession.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意点</strong><br />
<code>org.apache.ibatis.binding.BindingException: Type interface com.lyl.dao.UserDaoInterface is not known to the MapperRegistry.</code><br />
每一个<code>mapper.xml</code>都在<code>mybatis-config</code>文件的mapper标签中需要注册。<br />
但是可以能会因为默认文件过滤问题导致报错，这时需要重新声明。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;resources&gt;</span><br><span class="line">        &lt;resource&gt;</span><br><span class="line">            &lt;directory&gt;src&#x2F;main&#x2F;java&lt;&#x2F;directory&gt;</span><br><span class="line">            &lt;includes&gt;</span><br><span class="line">                &lt;include&gt;**&#x2F;*.properties&lt;&#x2F;include&gt;</span><br><span class="line">                &lt;include&gt;**&#x2F;*.xml&lt;&#x2F;include&gt;</span><br><span class="line">            &lt;&#x2F;includes&gt;</span><br><span class="line">            &lt;filtering&gt;true&lt;&#x2F;filtering&gt;</span><br><span class="line">        &lt;&#x2F;resource&gt;</span><br><span class="line">        &lt;resource&gt;</span><br><span class="line">            &lt;directory&gt;src&#x2F;main&#x2F;resources&lt;&#x2F;directory&gt;</span><br><span class="line">            &lt;includes&gt;</span><br><span class="line">                &lt;include&gt;**&#x2F;*.properties&lt;&#x2F;include&gt;</span><br><span class="line">                &lt;include&gt;**&#x2F;*.xml&lt;&#x2F;include&gt;</span><br><span class="line">            &lt;&#x2F;includes&gt;</span><br><span class="line">            &lt;filtering&gt;true&lt;&#x2F;filtering&gt;</span><br><span class="line">        &lt;&#x2F;resource&gt;</span><br><span class="line">    &lt;&#x2F;resources&gt;</span><br><span class="line">&lt;&#x2F;build&gt;</span><br></pre></td></tr></table></figure>
<p>以上操作结束之后，以后再使用，只需要修改：</p>
<ol>
<li><code>mapper</code>中的<code>namespace</code>：命名空间</li>
<li>sql选择查询语句</li>
<li>test测试类</li>
</ol>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis 缓存</title>
    <url>/2021/04/06/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mybatis/Mybatis%E7%BC%93%E5%AD%98/</url>
    <content><![CDATA[<p>问题：在每次查询时，都需要连接数据库得到数据是比较消耗资源的。<br />
解决方案：可以讲一次查询的结果暂存在一个可以直接取到的地方 – <strong>内存</strong>中。这个操作就称为缓存。</p>
<h2 id="缓存"><a class="markdownIt-Anchor" href="#缓存"></a> 缓存</h2>
<ul>
<li>特征：减少和数据库的交互次数，减少系统开销，提高系统效率。</li>
<li>目标数据：经常查询，不经常改变的数据。</li>
<li>两级缓存：
<ol>
<li>默认情况下，mybatis只开启了一级缓存：SqlSession级别的缓存，也称为本地缓存。</li>
<li>二级缓存需要手动开启与配置，他是基于namespace级别的缓存。</li>
<li>此外，Mybatis还定义了缓存接口Cache，我们可以通过实现Cache接口来定义二级缓存。</li>
</ol>
</li>
</ul>
<h3 id="一级缓存"><a class="markdownIt-Anchor" href="#一级缓存"></a> 一级缓存</h3>
<ul>
<li>测试步骤：1.开启日志 2.测试在一个Session中查询两次相同记录 3. 查看日志输出<br />
则可以看到只打开了一次JDBC连接</li>
<li>失效情况：
<ol>
<li>查询不同的东西</li>
<li>增删改操作，可能会改变原数据，所以一定会刷新缓存。</li>
<li>查询不同的Mapper.xml</li>
<li>手动清理缓存 <code>sqlSession.clearCache();</code></li>
</ol>
</li>
<li>特点：
<ul>
<li>一级缓存是默认开启的</li>
<li>只在一次SqlSession中有效，也就是连接sqlSession到关闭sqlSession的过程。</li>
<li>一级缓存就是一个map</li>
</ul>
</li>
</ul>
<h3 id="二级缓存"><a class="markdownIt-Anchor" href="#二级缓存"></a> 二级缓存</h3>
<ul>
<li>默认情况下，MyBatis只启用本地的会话缓存。当需要使用二级缓存时，只需要在sql映射文件中添加一行<code>&lt;cache/&gt;</code></li>
<li>定义的功能：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;cache</span><br><span class="line">    eviction &#x3D; &quot;FIFO&quot;</span><br><span class="line">    flushInterval &#x3D; &quot;60000&quot;</span><br><span class="line">    size &#x3D; &quot;512&quot;</span><br><span class="line">    readOnly &#x3D; &quot;true &quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>
<pre><code>1. eviction 清除策略：
    a. LRU 移除最长时间不被使用的对象
    b. FIFO 先进先出
    c. SOFT 软引用
    d. WEAK 弱引用
2. flushInterval 刷新的时间间隔，单位为毫秒。
3. size 最多可以存储的结果对象或者列表引用。
4. readOnly 反对的对象是否为只读的，用来保证线程安全。
</code></pre>
<ul>
<li>
<p><strong>注意在添加<code>&lt;cache/&gt;</code>标签之前需要显示开启全局缓存。</strong><br />
在<code>mybatis-config.xml</code>文件中的<code>&lt;setting&gt;</code>标签中开启全局缓存：<code>&lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot;/&gt;</code></p>
</li>
<li>
<p>特点：一条会话查询一条数据，这个数据就会被放在当前会话的一级缓存中。如果当前会话关闭了，这个会话对应的一级缓存就没了，但是在开启二级缓存之后，一级缓存中的数据会被保存到二级缓存中去。这样新的会话查询信息就可以从二级缓存中获得内容。<br />
不同的mapper查出的数据会放在自己对应的缓存中去。</p>
</li>
<li>
<p>测试情况：</p>
<ul>
<li>二级缓存不可以使用注解的查询方式</li>
<li>在test方法中：两个查询都在同一个mapper中，则第二次查询会直接从二级缓存中得到数据。</li>
</ul>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   @Test</span><br><span class="line">public void test()&#123;</span><br><span class="line">	SqlSession sqlSession &#x3D; MybatisUtil.getSqlSession();</span><br><span class="line">	SqlSession sqlSession2 &#x3D; MybatisUtil.getSqlSession();</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; 第一次查询</span><br><span class="line">	BlogMapper mapper &#x3D; sqlSession.getMapper(BlogMapper.class);</span><br><span class="line">	Blog blog &#x3D; mapper.queryBlogById(1);</span><br><span class="line">	System.out.println(blog);</span><br><span class="line">	sqlSession.close();</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; 关闭第一次事务，开始第二次查询</span><br><span class="line">	BlogMapper mapper2 &#x3D; sqlSession2.getMapper(BlogMapper.class);</span><br><span class="line">	Blog blog2 &#x3D; mapper2.queryBlogById(1);</span><br><span class="line">	System.out.println(blog2);</span><br><span class="line">	sqlSession2.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[com.lyl.dao.BlogMapper]-Cache Hit Ratio [com.lyl.dao.BlogMapper]: 0.0</span><br><span class="line">[org.apache.ibatis.transaction.jdbc.JdbcTransaction]-Opening JDBC Connection</span><br><span class="line">[org.apache.ibatis.datasource.pooled.PooledDataSource]-Created connection 1794717576.</span><br><span class="line">[org.apache.ibatis.transaction.jdbc.JdbcTransaction]-Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6af93788]</span><br><span class="line">[com.lyl.dao.BlogMapper.queryBlogById]-&#x3D;&#x3D;&gt;  Preparing: select * from bjpowernode.blog where id&#x3D;?</span><br><span class="line">[com.lyl.dao.BlogMapper.queryBlogById]-&#x3D;&#x3D;&gt; Parameters: 1(Integer)</span><br><span class="line">[com.lyl.dao.BlogMapper.queryBlogById]-&lt;&#x3D;&#x3D;      Total: 0</span><br><span class="line">null</span><br><span class="line">[org.apache.ibatis.transaction.jdbc.JdbcTransaction]-Resetting autocommit to true on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6af93788]</span><br><span class="line">[org.apache.ibatis.transaction.jdbc.JdbcTransaction]-Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6af93788]</span><br><span class="line">[org.apache.ibatis.datasource.pooled.PooledDataSource]-Returned connection 1794717576 to pool.</span><br><span class="line">[com.lyl.dao.BlogMapper]-Cache Hit Ratio [com.lyl.dao.BlogMapper]: 0.5</span><br><span class="line">null</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>问题，我们要将实体类序列化：<code>implements Serializable</code></p>
</li>
</ul>
<h2 id="mybatis缓存原理"><a class="markdownIt-Anchor" href="#mybatis缓存原理"></a> Mybatis缓存原理</h2>
<ul>
<li>一级缓存
<ol>
<li>sqlSession向数据库建立连击，索要数据。</li>
<li>数据库将数据交给sqlSession，sqlSession开辟一个内置空间存放这些数据，即为一级缓存。</li>
</ol>
</li>
</ul>
<p>缓存顺序：第一次查询数据库放在一级缓存中</p>
<ul>
<li>二级缓存<br />
3. 当sqlSession关闭时，他会找到对应的mapper，将一级缓存提交给mapper。<br />
4. mapper收到后，存放在自己的内置空间里，即为二级缓存。</li>
<li>查询顺序
<ol>
<li>查询时先看二级缓存有没有</li>
<li>然后再看一级缓存中有没有</li>
<li>最后查询数据库</li>
</ol>
</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis 配置文件优化</title>
    <url>/2021/03/25/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mybatis/Mybatis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>Mybatis官方文档中有配置文件的介绍。<br />
<img src="https://i.loli.net/2021/03/25/rfVFqu5yDWieMzJ.png" alt="" /></p>
<ul>
<li>
<p><code>mybatis-config.xml</code>文件<strong>环境配置</strong>:</p>
<ol>
<li><code>&lt;environments&gt;</code>中可以配置多套环境，一般有两种，测试环境和工作环境。</li>
<li><code>transactionManager</code>配置事务管理器类型，有两种：JDBC和MANAGED<br />
jdbc：直接使用jdbc的提交和回滚设置<br />
managed：默认会关闭连接</li>
<li><code>dataSource</code> 数据源，三个选项：unnpooled，pooled，jndi</li>
</ol>
</li>
<li>
<p><code>property</code>属性设置：</p>
<ul>
<li>在xml中，所有的标签都可以规定其顺序。</li>
<li>这些属性都是可以外部动态替换的，可以在java属性文件中配置或者通过properties元素的子元素传递。</li>
<li>操作：
<ol>
<li>可以新建一个db.properties文件夹<br />
<img src="https://i.loli.net/2021/03/25/LWMEXjuzTSHBtNa.png" alt="" /></li>
<li>在配置文件中，在environments标签上放入外部配置文件标签<br />
<code>&lt;properties resource=&quot;db.properties&quot;&gt;&lt;/properties&gt;</code></li>
<li>使用<code>$&#123;&#125;</code>,更换property中的value<br />
<strong>这里我出现了一个bug:com.mysql.cj.exceptions.WrongArgumentException</strong>，于是将<code>&amp;amp;</code>换成了<code>&amp;&amp;</code>，问题解决。<br />
问题二：在保证所有编码都为utf-8时 插入数据还是乱码，则<br />
<strong>useUnicode=true&amp;characterEncoding=utf-8 改成  useUnicode=true&amp;amp&amp;characterEncoding=utf-8</strong></li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;$&#123;driver&#125;&quot;&#x2F;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;$&#123;url&#125;&quot;&#x2F;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;$&#123;username&#125;&quot;&#x2F;&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;$&#123;password&#125;&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;dataSource&gt;</span><br></pre></td></tr></table></figure>
注意同样可以在properties标签中，插入property自标签来补充里面的值，但是优先使用外部配置文件。</li>
</ul>
</li>
<li>
<p>别名</p>
<ol>
<li>Mapper文件中<code>resultType=&quot;com.lyl.pojo.User&quot;</code>，<strong>类型值</strong>写起来很不方便。可以<code>mybatis-config.xml</code>中给实体类设置类型别名。</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;typeAliases&gt;</span><br><span class="line">    &lt;typeAlias type&#x3D;&quot;com.lyl.pojo.User&quot; alias&#x3D;&quot;user&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;typeAliases&gt;</span><br></pre></td></tr></table></figure>
<p>然后，resultType中直接使用alias别名即可，上例为user。<br />
<strong>推荐在实体类比较少的时候使用。</strong><br />
2. 也可以指定一个包名，比如扫描实体类的包，他的默认别名，就是类名小写</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;typeAliases&gt;</span><br><span class="line">    &lt;package name&#x3D;&quot;com.lyl.pojo&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;typeAliases&gt;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>映射器 mappers标签：</p>
<ol>
<li>使用相对于类路径的资源引用</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;mappers&gt;</span><br><span class="line">    &lt;mapper resource&#x3D;&quot;com&#x2F;lyl&#x2F;dao&#x2F;UserMapper.xml&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;mappers&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li></li>
<li>使用映射器接口实现类的完全限定名</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;mappers&gt;</span><br><span class="line">    &lt;mapper class&#x3D;&quot;com.lyl.dao.UserMapper&quot;&gt;&lt;&#x2F;mapper&gt;</span><br><span class="line">&lt;&#x2F;mappers&gt;</span><br></pre></td></tr></table></figure>
<p>mapper接口和相应的xml文件实现需要在一个文件夹下并且名称相同。<br />
4. 使用扫描包进行注入绑定</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;mappers&gt;</span><br><span class="line">     &lt;package name&#x3D;&quot;com.lyl.dao&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;mappers&gt;</span><br></pre></td></tr></table></figure>
<p>需要在一个文件夹下并且名称相同。</p>
</li>
<li>
<p>驼峰命名法：<br />
数据库中的数据名称有时带空格，实例类中的实例变量名称不可能与其保持一致。这时除了使用mapper映射，还可以在setting标签中配置<strong>驼峰命名法</strong>。<br />
<code>&lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot;/&gt;</code><br />
这样数据库中的空格可以在实例变量中用大写的方式表示。比如create time -&gt; createTime</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql表文件管理命令</title>
    <url>/2021/03/03/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mysq%20info/mysql%E5%88%9D%E6%AD%A5/</url>
    <content><![CDATA[<h3 id="打开与退出"><a class="markdownIt-Anchor" href="#打开与退出"></a> 打开与退出</h3>
<p>命令行：输入 <code>mysql -u root -p</code>，还可以选添 <code>-P 3306</code> 来设置端口号<br />
进入后：<code>quit</code>退出</p>
<h3 id="数据库管理命令"><a class="markdownIt-Anchor" href="#数据库管理命令"></a> 数据库管理命令</h3>
<ul>
<li>所有的表文件都存放在data文件夹中</li>
<li>查看所有数据库名：<code>show databases;</code></li>
<li>information_schema 存放在内存中，每次都会自动销毁</li>
<li>创建一个数据库：
<ol>
<li><code>create database 数据库名;</code></li>
<li>目录下手动新建文件夹也可以</li>
</ol>
</li>
<li>删除一个数据库：<code>drop database 数据库名;</code></li>
</ul>
<h3 id="表文件管理命令"><a class="markdownIt-Anchor" href="#表文件管理命令"></a> 表文件管理命令</h3>
<ul>
<li>查看指定的数据库下所有的表文件名：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE 数据库名;</span><br><span class="line">show tables;</span><br></pre></td></tr></table></figure>
</li>
<li>在指定数据库下创建表文件：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use 数据库名;</span><br><span class="line">create table 表文件名(</span><br><span class="line">    字段名 数据类型名,</span><br><span class="line">    字段名 数据类型名  &lt;--最后一个字段不要加&quot;,&quot;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database bjpowernode;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use bjpowernode;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; create table stu(</span><br><span class="line">    -&gt; sid int,</span><br><span class="line">    -&gt; sname varchar(10),</span><br><span class="line">    -&gt; age int</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br></pre></td></tr></table></figure>
在这里面，字符串类型使用 <strong>varchar(5)</strong>，括号内放置最大字符长度。
<ul>
<li>数据类型：
<ol>
<li>char() 固定长度字符串</li>
<li>varchar() 可变长度字符串</li>
<li>YEAR: YYYY</li>
<li>TIME: HH:MM:SS</li>
<li>DATE: YYYY-MM-DD</li>
<li>DATETIME: YYYY-MM-DD HH:MM:SS</li>
<li>TIMESTAMP: YYYY-MM-DD HH:MM:SS 描述的时间在不同时区索引出来可能是不同的，动态计算出对应时区时间。</li>
</ol>
</li>
</ul>
</li>
<li>删除表文件： <code>drop table 表文件名;</code></li>
<li>查看表文件中相关的字段信息： <code>show create table 表文件名称;</code></li>
<li>为表文件添加字段： <code>alter table 表文件名 add 新字段名 数据类型名称;</code></li>
<li>删除表文件字段： <code>alter table 表文件名 drop 字段名;</code></li>
</ul>
<h3 id="mysql约束"><a class="markdownIt-Anchor" href="#mysql约束"></a> mysql约束</h3>
<ol>
<li>非空约束：管理的字段不能存储null值。<code>sname VARCHAR(10) not null</code></li>
<li>唯一性约束：存储的字段值不能有重复值，但是可以存储null。<code>email varchar(20) UNIQUE</code></li>
<li>主键约束 <code>sid int PRIMARY KEY</code></li>
<li>外键约束：要求外键字段值应该来源于关联表的主键的值，但是可以存储null值。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 多方表 </span><br><span class="line">ADD CONSTRAINT 外键约束对象名 FOREIGN KEY(外键字段名)</span><br><span class="line">REFERENCE 一方表(主键字段)</span><br></pre></td></tr></table></figure>
<h3 id="表文件数据行管理命令"><a class="markdownIt-Anchor" href="#表文件数据行管理命令"></a> 表文件数据行管理命令</h3>
<ul>
<li>插入命令：要求mysql服务器向指定的表文件中添加数据行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into 表文件名 (字段名1,字段名2,字段名3)</span><br><span class="line">values(值1,值2,值3);        &lt;-字符串的值使用单引号扩起来</span><br></pre></td></tr></table></figure>
<ul>
<li>高级插入命：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into 表文件名(字段1,字段2,字段3)</span><br><span class="line">values</span><br><span class="line">(值1,值2,值3),</span><br><span class="line">(值1,值2,值3),</span><br><span class="line">(值1,值2,值3);</span><br></pre></td></tr></table></figure>
<ul>
<li>简化版本插入命令：<code>insert into 表文件名 values(值1,值2,值3);</code><br />
如果插入数据时，每一个字段都可以赋值，此时插入命令不需要指定字段名，数据顺序此时要与表文件字段顺序相同</li>
<li>查询命令：<code>select * from 表文件名;</code>要求mysql服务器将指定的表文件数据行展示</li>
<li>删除命令：
<ol>
<li><code>delete from 表文件名;</code>删除所有数据</li>
<li><code>delete from 表文件名 where 判断条件;</code>删除满足条件的数据行数据。判断数据一般放置关系条件或者逻辑条件。(等于使用单等号=)</li>
</ol>
</li>
<li>更新命令：要求mysql服务器将指定的表文件数据进行更新
<ol>
<li>对所有数据行<code>update 表文件名 set 字段名1=值,字段名2=值;</code></li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; update stu set age&#x3D;age+3;</span><br><span class="line">Query OK, 2 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 2  Changed: 2  Warnings: 0</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>对指定数据行<code>update 表文件名 set 字段名1=值,字段名2=值 where 判断条件;</code>使用where来选择</li>
</ol>
</li>
<li>数据行复制命令：<code>insert into B select * from A</code>可以将表A中的数据行复制到表B(要求表A与表B字段结构完全一致)</li>
<li>表文件备份命令：<code>create table B select * from A</code>将表A进行一次备份，备份生成表B</li>
</ul>
<h3 id="mysql索引index"><a class="markdownIt-Anchor" href="#mysql索引index"></a> mysql索引(index)</h3>
<ol>
<li>查询速度问题： 由于表文件存放的数据行有可能会很多，WHERE命令会遍历所有的数据行。所以，时间越久，数据行越大，WHERE命令消耗的时间就越长。</li>
<li>索引作用： 在表文件数据行增加时，不会大幅度降低查询语句执行的效率。</li>
<li>工作原理：<br />
数据1: [100, 80, 45, 50, 90, 200, 17]<br />
数据2: [17, 45, 50, 80, 90, 100, 200]<br />
从数据2得到最小值的消耗更小<br />
所以：应该先对字段内容进行一次排序，然后再WHERE命令进行定位时，根据排序顺序定位最小值，来提升查询顺序。</li>
<li>索引命令：
<ul>
<li>添加索引：<code>CREATE INDEX 索引名 ON 表名(字段)</code></li>
<li>查看索引：<code>SHOW INDEX FROM 表明</code><br />
这时会看到三个索引，因为服务器会默认为<strong>主键约束</strong>，<strong>外键约束</strong>，<strong>唯一性约束</strong>绑定索引。</li>
<li>删除索引：<code>DROP INDEX 索引名 ON 表名</code>、</li>
</ul>
</li>
</ol>
<h3 id="mql执行计划explain"><a class="markdownIt-Anchor" href="#mql执行计划explain"></a> mql执行计划(explain)</h3>
<ol>
<li>命令格式：explain 查询命令</li>
<li>命令作用：展示当前查询得到的结果是否通过索引来进行定位</li>
<li>例子：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT * FROM emp WHERE ename&#x3D;&#39;smith&#39;</span><br><span class="line">--&gt; EXPLAIN SELECT * FROM emp WHERE ename&#x3D;&#39;smith&#39;</span><br><span class="line">--&gt; type: ref(索引查询) rows:1(查询次数)</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>判断：type属性表示执行效率。<br />
<strong>all</strong>(对所有数据行进行遍历)<br />
<strong>type</strong>(WHERE对所有数据行进行遍历，SELECT从索引中抓取)<br />
<strong>range</strong>(WHERE直接通过索引来查询，但是不稳定，因为字段变化时会导致失效)<br />
<strong>ref</strong>(WHERE直接通过索引来查询，一次只得到一行数据 --&gt; 该行数据没有重复)<br />
<strong>const</strong>(通过主键索引来进行定位)</li>
</ol>
<p><strong>mysql如果发现通过索引得到数据行数&gt;1/3是，会自动放弃索引查询，type依然是all</strong></p>
<h3 id="视图"><a class="markdownIt-Anchor" href="#视图"></a> 视图</h3>
<ol>
<li>定义：Mysql对象，用于存储查询语句。</li>
<li>目的：提高查询语句使用效率，可复用性。</li>
<li>命令：<code>CREATE VIEW 视图对象名 AS 查询语句</code></li>
<li>调用：<code>SELECT * FROM 视图对象名</code>，还可以通过视图对象关联表文件数据行进行插入，删除，更新操作。</li>
<li>作用：<strong>隐藏业务中涉及表关系，开发人员通过视图进行操作时不会知道具体操作的表，提高了安全性。</strong></li>
</ol>
<h3 id="存储引擎"><a class="markdownIt-Anchor" href="#存储引擎"></a> 存储引擎</h3>
<ol>
<li>定义：是mysql服务器对表文件内容的管理方式，目前主要采用INNODB，Myisam.</li>
<li>管理命令：
<ul>
<li>查看支持存储引擎种类：<code>show engines</code>，默认使用innodb引擎</li>
<li>修改引擎，<code>my.cnf文件</code>，在<code>/etc</code>配置文件夹下，<code>default-storage-engine=INNODB</code></li>
<li>设置表文件呢依赖的存储引擎：<code>alter TABLE 表名 ENGINE=存储引擎</code></li>
</ul>
</li>
<li>存储引擎特征：
<ul>
<li>Myisam：
<ul>
<li>修改表时，不会备份。提高效率，操作后无法取消本操作。</li>
<li>使用三个表存储信息：<strong>test1.frm</strong>储存表文件字段信息，<strong>test1.myd</strong>储存表文件数据行信息，<strong>test1.myi</strong>存储表文件字段关联的索引信息。</li>
</ul>
</li>
<li>INNODB：
<ul>
<li>对表内容修改时，首先进行一次备份，因此效率较慢。</li>
<li>但是执行完毕后，可以使用备份取消当前操作，增加安全性。</li>
<li>使用一个文件<strong>test1.frm</strong>存储所有信息。</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="事物transaction"><a class="markdownIt-Anchor" href="#事物transaction"></a> 事物(transaction)</h3>
<ol>
<li>介绍：用于对当前表文件备份进行管理。</li>
<li>命令格式：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">start transaction #通过服务器提供一个事物对象来管理备份接下来的操作</span><br><span class="line">delete from emp where deptno&#x3D;30 #生成emp.bak</span><br><span class="line">delete from dept where deptno&#x3D;30 #生成emp.bak</span><br><span class="line">ROLLBACK #取消本次操作</span><br><span class="line">COMMIT #提交操作：将本次操作的所有备份信息删除</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql数据服务器介绍</title>
    <url>/2021/03/04/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mysq%20info/mysql%E6%95%B0%E6%8D%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h3 id="服务器介绍"><a class="markdownIt-Anchor" href="#服务器介绍"></a> 服务器介绍</h3>
<ol>
<li>服务器是一种软件，不是硬件。</li>
<li>不同服务器负责调用不同的文件类型。</li>
</ol>
<h3 id="表文件数据库和数据库服务器"><a class="markdownIt-Anchor" href="#表文件数据库和数据库服务器"></a> 表文件，数据库和数据库服务器</h3>
<ul>
<li>
<p>表文件</p>
<ul>
<li>简介：
<ol>
<li>以&quot;.frm&quot;结尾的一种文件</li>
<li>存在于服务端计算机硬盘上</li>
<li>以数据形式进行数据存储的文件</li>
</ol>
</li>
<li>结构：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">            student.frm</span><br><span class="line">标题行  sid  sname  sex   age   home</span><br><span class="line">数据行  10   lyl    man   20   jiangsu</span><br><span class="line">       20   lz    woman  10   jiangsu</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>数据库：存放表文件的文件夹</p>
</li>
<li>
<p>数据库服务器：</p>
<ol>
<li>一种专门对表文件进行调用和管理的软件</li>
<li>用户通过数据库服务器对数据库进行操作</li>
</ol>
</li>
</ul>
<h3 id="sql命令"><a class="markdownIt-Anchor" href="#sql命令"></a> SQL命令</h3>
<ul>
<li>全称：Structured Query Language 结构化查询编程语言</li>
<li>作用：用户通过SQL命令向数据库服务器发送请求，用于对表文件进行调用管理</li>
<li>特点：包含主谓宾</li>
</ul>
<h3 id="数据库服务器分类"><a class="markdownIt-Anchor" href="#数据库服务器分类"></a> 数据库服务器分类</h3>
<ol>
<li>关系型数据库服务器<br />
a. 管理的表文件有隶属关系，可以完整地描述一段数据<br />
b. 在查询时，所涉及的数据比较多，因此查询的速度有所下降<br />
c. 分类：甲骨文公司的Oracle和Mysql，微软公司的SqlServer</li>
<li>非关系型数据库服务器<br />
a. 表文件都是独立的，无法描述一段完整的数据<br />
b. 查询的大数据比较少，查询速度快</li>
</ol>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql查询命令</title>
    <url>/2021/03/05/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mysq%20info/mysql%E6%9F%A5%E8%AF%A2%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p><strong>mysql一共有7个查询命令：FROM，SELECT，WHERE，GROUP BY，HAVING，ORDER BY，LIMIT</strong></p>
<h3 id="查询命令和临时表"><a class="markdownIt-Anchor" href="#查询命令和临时表"></a> <strong>查询命令和临时表</strong></h3>
<ol>
<li>每一个查询命令在执行时，都是在操作上一个命令生成的临时表。</li>
<li>每一个命令执行完毕后，Mysql服务器自动在内存中销毁上一个查询命令生成的临时表。所以，用户只能看到最后一个查询命令生成的临时表。</li>
<li>只有FROM命令不需要操作临时表。</li>
<li>只有GROUP BY命令在执行完后有机会生成多个临时表。</li>
<li>只有HAVING命令在执行完毕后，不会生成新的临时表。负责将GROUP BY命令生成的临时表中不满足的临时表从内存中删除。</li>
</ol>
<h3 id="from命令"><a class="markdownIt-Anchor" href="#from命令"></a> <strong>FROM命令</strong></h3>
<ol>
<li>永远是第一个执行的查询命令，负责将硬盘上的表文件加载到内存中生成<strong>临时表</strong>供后续查询命令使用。所以，执行查询命令时，是不会修改文件原来的数据的。</li>
<li>临时表的名称与硬盘上的表文件名称保持一致。</li>
</ol>
<h3 id="select命令"><a class="markdownIt-Anchor" href="#select命令"></a> <strong>SELECT命令</strong></h3>
<ol>
<li>操作的是由FROM命令生成的临时表。</li>
<li>会像切蛋糕一样，将指定字段下所有的数据读取出来，在内存中将读取的数据组成一个全新的临时表。</li>
<li>完成SELECT命令之后，服务器会返回SELECT建立的临时表，并且销毁FROM建立的临时表。</li>
<li>如果临时表由FROM和WHERE提供，则SELECT面对的只有一个临时表。SELECT会读取临时表并形成一个新的。如果是由GROUP BY提供的，SELECT可能会面临多个临时表，SELECT会依次每一个临时表，并且在操作某一个临时表时，SELECT只会读取指定字段下的第一个数据，因为按该数据分组，同一个表该字段数据都相同。SELECT会将从多个临时表中读取的数据合成为一列并且保存到一个全新的临时表中。</li>
</ol>
<h3 id="where命令"><a class="markdownIt-Anchor" href="#where命令"></a> <strong>WHERE命令</strong></h3>
<ol>
<li>执行顺序：FROM --&gt; WHERE --&gt; SELECT</li>
<li>书写顺序： <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT 字段名，函数，子查询</span><br><span class="line">FROM   表文件</span><br><span class="line">WHERE  关系运算&#x2F;逻辑运算</span><br></pre></td></tr></table></figure>
</li>
<li>作用：循环遍历所有的数据行，每次得到一个数据行，判断是否需要被<strong>定位</strong>。循环结束后，WHERE命令会生成一个所有定位数据行的临时表。</li>
<li>运算符：<br />
a. <strong>关系运算</strong>：<br />
=<br />
!=<br />
&gt;<br />
&lt;<br />
&gt;=<br />
&lt;=<br />
b. <strong>逻辑运行</strong>：<br />
and<br />
or<br />
between … and …<br />
in(选项1，选项2，选项3)<br />
not in(选项1，选项2，选项3)<br />
c. <strong>特殊运算符</strong>：null值表示一个不确定的值，而非空含义。所以null值不可以参加运算，即”=null“不成立。<br />
is null<br />
is not null</li>
</ol>
<h4 id="聚合函数"><a class="markdownIt-Anchor" href="#聚合函数"></a> <strong>聚合函数</strong></h4>
<ol>
<li>max(字段)<br />
<code>select max(sal) from emp where deptno=20</code></li>
<li>min(字段)</li>
<li>sum(字段)</li>
<li>avg(字段)</li>
<li>count(字段) 不为null的个数</li>
<li>count(*) 统计数据行的个数，包含null</li>
</ol>
<h3 id="like命令模糊查询"><a class="markdownIt-Anchor" href="#like命令模糊查询"></a> <strong>like命令：模糊查询</strong></h3>
<ol>
<li>前置条件模糊查询：以s开头 <code>like 's%'</code><br />
<code>select ename from emp where ename like 's%'</code><br />
‘%’ 是一个通配符，表示一个长度任意的字符串</li>
<li>后置条件模糊查询：以s结尾 <code>like '%s'</code></li>
<li>包含s：<code>like &quot;%s%&quot;</code></li>
<li>第二个字母是S：<code>like '_S%'</code><br />
‘_’ 也是一个通配符，表示一个任意的字符</li>
</ol>
<h3 id="group-by命令"><a class="markdownIt-Anchor" href="#group-by命令"></a> <strong>GROUP BY命令</strong></h3>
<ol>
<li>分组：先根据分组字段数据种类，将临时表进行分类。然后将具有相同特征的数据行读取出来保存到一个全新的临时表中。</li>
<li>举例：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT JOB, COUNT(*)</span><br><span class="line">FROM EMP</span><br><span class="line">WHERE DEPTNO&#x3D;30</span><br><span class="line">GROUP BY JOB</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>执行顺序为：<br />
FROM–&gt;WHERE–&gt;<strong>GROUP BY</strong>–&gt;SELECT<br />
选择表–&gt;定位数据行–&gt;根据属性分组–&gt;按要求输出</li>
<li>只有group by命令有机会在执行完毕后，依次生成多个临时表</li>
</ol>
<h3 id="having命令"><a class="markdownIt-Anchor" href="#having命令"></a> <strong>HAVING命令</strong></h3>
<ol>
<li>执行顺序：FROM–&gt;WHERE–&gt;GROUP BY–&gt;<strong>HAVING</strong>–&gt;SELECT</li>
<li>只能出现在GROUP BY命令后</li>
<li>通过统计临时表中的信息决定是否删除<strong>整个临时表</strong></li>
<li>只有HAVING命令有可能删除临时表。</li>
</ol>
<h3 id="order-by命令"><a class="markdownIt-Anchor" href="#order-by命令"></a> <strong>ORDER BY命令</strong></h3>
<ol>
<li><code>order by sal desc</code> 按照sal降序</li>
<li><code>order by 3 desc</code> 按照生成的表的第三列排序</li>
</ol>
<h3 id="limit命令"><a class="markdownIt-Anchor" href="#limit命令"></a> <strong>LIMIT命令</strong></h3>
<p>从指定位置的数据行开始，向下截取指定数量的数据行。将截取出来的数据保存到一个全新的临时表中。<br />
一个参数，从第一行开始，截取参数的行数。两个参数使用&quot;,&quot;隔开，可以指定起始行数。<br />
<em><strong>注意：数据行位置从0开始计算。</strong></em></p>
<h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结：</h3>
<ul>
<li>执行顺序：<br />
FROM–&gt;WHERE–&gt;GROUP BY–&gt;HAVING–&gt;SELECT–&gt;ORDER BY–&gt;LIMIT</li>
<li>书写顺序：<br />
SELECT  字段，函数，子查询<br />
FROM    表<br />
WHERE   定位数据行条件<br />
GROUP BY  分组字段<br />
HAVING  删除的判断条件<br />
ORDER BY  排序字段<br />
LIMIT   起始行位置，从改行开始向下截取行数</li>
</ul>
<h3 id="常用查询操作"><a class="markdownIt-Anchor" href="#常用查询操作"></a> 常用查询操作</h3>
<h5 id="多字段分组查询"><a class="markdownIt-Anchor" href="#多字段分组查询"></a> 多字段分组查询</h5>
<p>需求：查询各个部门下各个职位的人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select DEPTNO,JOB,count(*)</span><br><span class="line">from emp</span><br><span class="line">GROUP BY DEPTNO,JOB  #多字段分组</span><br></pre></td></tr></table></figure>
<ol>
<li>多字段分组时，分组顺序对于最终查询的结果没有任何影响。</li>
<li>多字段分组时，GROUP BY一次只能根据一个分组字段进行分组。<code>GROUP BY DEPTNO,JOB</code>时，需要执行两次。</li>
<li>从第二个分组字段开始，操作的时上一个分组字段生成的临时表。对于<code>GROUP BY DEPTNO,JOB</code>，当执行<code>GROUP BY JOB</code>时，操作由<code>GROUP BY DEPTNO</code>生成的临时表。</li>
</ol>
]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql表文件查询</title>
    <url>/2021/03/06/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/mysq%20info/mysql%E8%A1%A8%E6%96%87%E4%BB%B6%E5%85%B3%E7%B3%BB%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="表文件的关系"><a class="markdownIt-Anchor" href="#表文件的关系"></a> 表文件的关系</h1>
<ul>
<li>mysql通过表文件的数据关系来描述现实生活中的隶属关系。</li>
<li>隶属关系角色划分：
<ol>
<li>一方：拥有资源的一方</li>
<li>多方：依附于一方的资源</li>
</ol>
</li>
</ul>
<h1 id="表文件字段的分类"><a class="markdownIt-Anchor" href="#表文件字段的分类"></a> 表文件字段的分类</h1>
<ul>
<li>主键字段：
<ol>
<li>存放主键编号，每一个表都应该有一个主键字段。</li>
<li>用来区分表中的唯一的一个元组/对象。</li>
<li>不为null，同一表中不可重复。</li>
</ol>
</li>
<li>非主键字段：描述主键编号。</li>
<li>外键字段：
<ol>
<li>只存在多方表，描述多方数据与一方数据的依赖关系。</li>
<li>外键字段的值应该来源于一方表中的主键值。</li>
</ol>
</li>
</ul>
<h1 id="多表查询"><a class="markdownIt-Anchor" href="#多表查询"></a> 多表查询</h1>
<ul>
<li>本质：将多张表数据合并到同一个临时表中，然后使用六个查询命令，根据需求得到需要的数据。</li>
<li>关键：如何将多张表中的数据合并到同一张表中。</li>
<li>多张表数据合并方案：
<ol>
<li>连接查询合并方案<br />
a. 首先确保两张表之间存在了<strong>隶属关系</strong>。<br />
b. 将两张表的内容<strong>水平方向</strong>拼接。<br />
c. 最终得到拥有<strong>完整隶属关系</strong>的新数据行。</li>
<li>联合查询合并方案<br />
a. 不需要两张表存在隶属关系。<br />
b. 两张表的数据行沿着<strong>垂直方向</strong>堆砌。</li>
</ol>
</li>
</ul>
<p><img src="https://i.loli.net/2021/03/06/bP5EAJrKw6UmITV.png" alt="" /><br />
<img src="https://i.loli.net/2021/03/06/az4oADiXKqUeNuf.png" alt="" /></p>
<h2 id="连接查询合并方案"><a class="markdownIt-Anchor" href="#连接查询合并方案"></a> 连接查询合并方案</h2>
<p>例子：查询各个部门名称及其部门下的职员名称。</p>
<ul>
<li>数据来源：Dept.dname 和 Emp.ename</li>
<li>表文件的关系：Emp隶属于Dept</li>
<li>命令：<code>join</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT Dept.dname, Emp.ename</span><br><span class="line">FROM Dept JOIN Emp  &lt;-- join两边表的位置对结果没有影响</span><br></pre></td></tr></table></figure>
<ul>
<li>运算过程：</li>
</ul>
<ol>
<li>JOIN将两个表水平拼接生成一张新的临时表，字段由两个表相加而成，新的字段名格式为<strong>表明.字段名</strong>，这样解决了重复字段名的问题。</li>
<li>临时表行数为原表行数做乘法，是一个笛卡尔积。</li>
<li>临时表中会删除不合法，即主客键数据冲突的信息（脏数据），然后放置在一个新的临时表中，接受后续操作。</li>
</ol>
<p><strong>连接查询过滤方案</strong>：将合法数据行与脏数据行进行剥离的形为。</p>
<ul>
<li>命令格式： <code>FROM 一方表 JOIN 多方表 ON 定位合法数据行条件</code></li>
<li>合法数据行与脏数据行区分原则：
<ol>
<li>表文件<strong>存在明显外键字段</strong>：<code>ON 当前数据行来自于一方表主键字段 = 当前数据行来自于多方表外键字段</code></li>
<li>表文件<strong>没有明显外键字段</strong>：<code>ON 根据实际隶属关系进行判断</code></li>
</ol>
</li>
<li>分类：内连接过滤方案和外连接过滤方案</li>
</ul>
<h3 id="内连接过滤方案"><a class="markdownIt-Anchor" href="#内连接过滤方案"></a> <strong>内连接过滤方案</strong></h3>
<ul>
<li>例子：<br />
<img src="https://i.loli.net/2021/03/06/7nL35adAqH9xK8Z.jpg" alt="" /></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT Dept.Dname, Emp.job, COUNT(*)</span><br><span class="line">FROM Dept JOIN Emp</span><br><span class="line">ON Dept.Deptno &#x3D; Emp.Deptno</span><br><span class="line">WHERE Dept.Deptno&#x3D;20</span><br><span class="line">GROUP BY Emp.job</span><br></pre></td></tr></table></figure>
<ul>
<li>顺序：
<ol>
<li>FROM Dept JOIN Emp<br />
<img src="https://i.loli.net/2021/03/06/K7NBW9jegCGcdJM.jpg" alt="" /></li>
<li>ON Dept.Deptno = Emp.Deptno<br />
<img src="https://i.loli.net/2021/03/06/ZXmcUFJVAs45tg7.jpg" alt="" /></li>
<li>WHERE Dept.Deptno=20<br />
<img src="https://i.loli.net/2021/03/06/FtNBRG6uZWO2alx.jpg" alt="" /></li>
<li>GROUP BY Emp.job <strong>生成两个临时表</strong><br />
<img src="https://i.loli.net/2021/03/06/zRvmacoNsYyelQC.jpg" alt="" /></li>
<li>SELECT Dept.Dname, Emp.job, COUNT(*) <strong>对每一个临时表进行操作</strong><br />
<img src="https://i.loli.net/2021/03/06/6fELZ4BOCcqgpTx.jpg" alt="" /></li>
</ol>
</li>
</ul>
<h3 id="外连接过滤方案"><a class="markdownIt-Anchor" href="#外连接过滤方案"></a> <strong>外连接过滤方案</strong></h3>
<ul>
<li>查询各个部门以及其部门下的人数：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT dept.dname, COUNT(*)</span><br><span class="line">FROM dept JOIN EMP</span><br><span class="line">ON dept.deptno&#x3D;emp.deptno</span><br><span class="line">GROUP BY dept.dname</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>场景介绍：服务器在执行<code>ON dept.deptno=emp.deptno</code>时，如果dept.deptno存在一个数据，但是emp.deptno不存在该匹配数据，服务器不会保存该数据。但是我们要求保存该数据，这时需要使用外连接过滤方案。</p>
</li>
<li>
<p>外连接过滤方案表文件角色划分：</p>
<ol>
<li>需要被帮助表</li>
<li>不需要被帮助表</li>
</ol>
</li>
<li>
<p>执行原理：如果<strong>需要被帮助表</strong>中某行数据与<strong>不需要被帮助表</strong>中的所有数据行都无法拼接成为合法的数据。此时将这个数据行作为一个独立的数据行。</p>
</li>
<li>
<p>代码格式：</p>
<ol>
<li>左外连接查询：</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM 需要被帮助表 LEFT JOIN 不需要被帮助表</span><br><span class="line">ON 合法数据定位条件</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>右外连接查询：</li>
</ol>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM 不需要被帮助表 RIGHT JOIN 需要被帮助表</span><br><span class="line">ON 合法数据定位条件</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>临时表例子：<br />
需求：查询所有部门的名称及其人数，无论是否有人，都需要展示出来。<br />
<img src="https://i.loli.net/2021/03/06/5i1EWtFDmSYuIZQ.jpg" alt="" /></p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT dept.dname, COUNT(*)</span><br><span class="line">FROM dept LEFT JOIN emp</span><br><span class="line">ON dept.deptno &#x3D; emp.deptno</span><br><span class="line">GROUP BY dept.dname</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>执行顺序：</p>
<ol>
<li><code>FROM dept LEFT JOIN emp</code><br />
<img src="https://i.loli.net/2021/03/06/4ep8scuLDGgAN5y.jpg" alt="" /></li>
<li><code>ON dept.deptno = emp.deptno</code> <strong>外链接影响的就是on步骤的删除数据行操作</strong><br />
<img src="https://i.loli.net/2021/03/06/SjtZW4PQDK7Fp1h.jpg" alt="" /></li>
<li><code>GROUP BY dept.dname</code><br />
<img src="https://i.loli.net/2021/03/06/hq3JyTwfI7kBMXE.jpg" alt="" /></li>
<li><code>SELECT dept.dname, COUNT(*)</code><br />
<img src="https://i.loli.net/2021/03/06/Hajp7eFmAyz24YC.jpg" alt="" /></li>
</ol>
<p>需要改成<code>count(emp.deptno)</code><br />
即：<code>SELECT dept.dname, COUNT(emp.deptno)</code><br />
<img src="https://i.loli.net/2021/03/06/Pfz1bsqYZeS5c82.jpg" alt="" /></p>
</li>
</ul>
<h2 id="联合查询合并方案"><a class="markdownIt-Anchor" href="#联合查询合并方案"></a> 联合查询合并方案</h2>
<ul>
<li>定义：将两张表沿着垂直方向进行堆砌</li>
<li>要求：
<ol>
<li>参与合并的临时表字段结构保持一致，即<strong>字段个数</strong>和<strong>类型顺序</strong>保持一致。</li>
<li>联合查询生成临时表的字段只能来自于<strong>第一个临时表字段</strong>。即表头使用前面的父表。</li>
</ol>
</li>
<li>例子：
<ul>
<li>需求：将部门编号，部门名称，职员编号，职员名称展示出来</li>
<li>命令：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT deptno, dname FROM dept</span><br><span class="line">UNION</span><br><span class="line">SELECT  empno, ename FROM emp</span><br></pre></td></tr></table></figure>
</li>
<li>临时表：
<ol>
<li><code>SELECT deptno, dname FROM dept</code></li>
<li><code>SELECT empno, ename FROM emp</code></li>
<li>通过<code>UNION</code>命令，将两个临时表沿着垂直方向堆砌。</li>
</ol>
</li>
</ul>
</li>
<li><code>UNION</code>会自动删除重复行，使用<code>UNION ALL</code>则不会删除重复数据。</li>
</ul>
<h1 id="子查询"><a class="markdownIt-Anchor" href="#子查询"></a> 子查询</h1>
<ul>
<li>定义：在查询时无法从当前临时表得到需要的数据，此时mysql服务器，允许开发人员通过<strong>完整查询语句</strong>从<strong>别的表</strong>中得到需要的数据，从而保证查询正常执行。这个起到帮助作用的<strong>完整查询语句</strong>相当于外援，在技术上被称之为<strong>子查询</strong>。</li>
<li>用法：使用小括号放置查询命令，令其返回一个值。可以看成调用了一次简单的函数。</li>
<li>例子：查看工资高于公司平均工资的职员信息</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM emp</span><br><span class="line">WHERE sal &gt; (SELECT avg(sal) FROM emp)</span><br></pre></td></tr></table></figure>
<ul>
<li>可用范围：
<ul>
<li>SELECT 命令：<code>SELECT ename,sal,(SELECT AVG(sal) FROM emp) AS 'avg'</code></li>
<li>FROM 命令：除了将能够将硬盘上的表文件加载到内存中生成一个临时表，还可以指向内存中已经存在的临时表。</li>
<li>WHERE 命令：通过子查询得到进行判断的数据。</li>
<li>HAVING 命令：通过子查询来得到判断标准。<code>HAVING avg(sal)&gt;(SELECT avg(sal) FROM emp)</code></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
</search>
